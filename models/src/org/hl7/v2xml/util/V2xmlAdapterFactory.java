/**
 */
package org.hl7.v2xml.util;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

import org.eclipse.emf.ecore.xml.type.AnyType;

import org.hl7.v2xml.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see org.hl7.v2xml.V2xmlPackage
 * @generated
 */
public class V2xmlAdapterFactory extends AdapterFactoryImpl {
	/**
	 * The cached model package.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected static V2xmlPackage modelPackage;

	/**
	 * Creates an instance of the adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public V2xmlAdapterFactory() {
		if (modelPackage == null) {
			modelPackage = V2xmlPackage.eINSTANCE;
		}
	}

	/**
	 * Returns whether this factory is applicable for the type of the object.
	 * <!-- begin-user-doc -->
	 * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
	 * <!-- end-user-doc -->
	 * @return whether this factory is applicable for the type of the object.
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object object) {
		if (object == modelPackage) {
			return true;
		}
		if (object instanceof EObject) {
			return ((EObject)object).eClass().getEPackage() == modelPackage;
		}
		return false;
	}

	/**
	 * The switch that delegates to the <code>createXXX</code> methods.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected V2xmlSwitch<Adapter> modelSwitch =
		new V2xmlSwitch<Adapter>() {
			@Override
			public Adapter caseABS10CONTENT(ABS10CONTENT object) {
				return createABS10CONTENTAdapter();
			}
			@Override
			public Adapter caseABS11CONTENT(ABS11CONTENT object) {
				return createABS11CONTENTAdapter();
			}
			@Override
			public Adapter caseABS12CONTENT(ABS12CONTENT object) {
				return createABS12CONTENTAdapter();
			}
			@Override
			public Adapter caseABS13CONTENT(ABS13CONTENT object) {
				return createABS13CONTENTAdapter();
			}
			@Override
			public Adapter caseABS14CONTENT(ABS14CONTENT object) {
				return createABS14CONTENTAdapter();
			}
			@Override
			public Adapter caseABS1CONTENT(ABS1CONTENT object) {
				return createABS1CONTENTAdapter();
			}
			@Override
			public Adapter caseABS2CONTENT(ABS2CONTENT object) {
				return createABS2CONTENTAdapter();
			}
			@Override
			public Adapter caseABS3CONTENT(ABS3CONTENT object) {
				return createABS3CONTENTAdapter();
			}
			@Override
			public Adapter caseABS4CONTENT(ABS4CONTENT object) {
				return createABS4CONTENTAdapter();
			}
			@Override
			public Adapter caseABS5CONTENT(ABS5CONTENT object) {
				return createABS5CONTENTAdapter();
			}
			@Override
			public Adapter caseABS6CONTENT(ABS6CONTENT object) {
				return createABS6CONTENTAdapter();
			}
			@Override
			public Adapter caseABS7CONTENT(ABS7CONTENT object) {
				return createABS7CONTENTAdapter();
			}
			@Override
			public Adapter caseABS8CONTENT(ABS8CONTENT object) {
				return createABS8CONTENTAdapter();
			}
			@Override
			public Adapter caseABS9CONTENT(ABS9CONTENT object) {
				return createABS9CONTENTAdapter();
			}
			@Override
			public Adapter caseABSCONTENT(ABSCONTENT object) {
				return createABSCONTENTAdapter();
			}
			@Override
			public Adapter caseACC10CONTENT(ACC10CONTENT object) {
				return createACC10CONTENTAdapter();
			}
			@Override
			public Adapter caseACC11CONTENT(ACC11CONTENT object) {
				return createACC11CONTENTAdapter();
			}
			@Override
			public Adapter caseACC1CONTENT(ACC1CONTENT object) {
				return createACC1CONTENTAdapter();
			}
			@Override
			public Adapter caseACC2CONTENT(ACC2CONTENT object) {
				return createACC2CONTENTAdapter();
			}
			@Override
			public Adapter caseACC3CONTENT(ACC3CONTENT object) {
				return createACC3CONTENTAdapter();
			}
			@Override
			public Adapter caseACC4CONTENT(ACC4CONTENT object) {
				return createACC4CONTENTAdapter();
			}
			@Override
			public Adapter caseACC5CONTENT(ACC5CONTENT object) {
				return createACC5CONTENTAdapter();
			}
			@Override
			public Adapter caseACC6CONTENT(ACC6CONTENT object) {
				return createACC6CONTENTAdapter();
			}
			@Override
			public Adapter caseACC7CONTENT(ACC7CONTENT object) {
				return createACC7CONTENTAdapter();
			}
			@Override
			public Adapter caseACC8CONTENT(ACC8CONTENT object) {
				return createACC8CONTENTAdapter();
			}
			@Override
			public Adapter caseACC9CONTENT(ACC9CONTENT object) {
				return createACC9CONTENTAdapter();
			}
			@Override
			public Adapter caseACCCONTENT(ACCCONTENT object) {
				return createACCCONTENTAdapter();
			}
			@Override
			public Adapter caseAD(AD object) {
				return createADAdapter();
			}
			@Override
			public Adapter caseAD1CONTENT(AD1CONTENT object) {
				return createAD1CONTENTAdapter();
			}
			@Override
			public Adapter caseAD2CONTENT(AD2CONTENT object) {
				return createAD2CONTENTAdapter();
			}
			@Override
			public Adapter caseAD3CONTENT(AD3CONTENT object) {
				return createAD3CONTENTAdapter();
			}
			@Override
			public Adapter caseAD4CONTENT(AD4CONTENT object) {
				return createAD4CONTENTAdapter();
			}
			@Override
			public Adapter caseAD5CONTENT(AD5CONTENT object) {
				return createAD5CONTENTAdapter();
			}
			@Override
			public Adapter caseAD6CONTENT(AD6CONTENT object) {
				return createAD6CONTENTAdapter();
			}
			@Override
			public Adapter caseAD7CONTENT(AD7CONTENT object) {
				return createAD7CONTENTAdapter();
			}
			@Override
			public Adapter caseAD8CONTENT(AD8CONTENT object) {
				return createAD8CONTENTAdapter();
			}
			@Override
			public Adapter caseADD1CONTENT(ADD1CONTENT object) {
				return createADD1CONTENTAdapter();
			}
			@Override
			public Adapter caseADDCONTENT(ADDCONTENT object) {
				return createADDCONTENTAdapter();
			}
			@Override
			public Adapter caseAFF1CONTENT(AFF1CONTENT object) {
				return createAFF1CONTENTAdapter();
			}
			@Override
			public Adapter caseAFF2CONTENT(AFF2CONTENT object) {
				return createAFF2CONTENTAdapter();
			}
			@Override
			public Adapter caseAFF3CONTENT(AFF3CONTENT object) {
				return createAFF3CONTENTAdapter();
			}
			@Override
			public Adapter caseAFF4CONTENT(AFF4CONTENT object) {
				return createAFF4CONTENTAdapter();
			}
			@Override
			public Adapter caseAFF5CONTENT(AFF5CONTENT object) {
				return createAFF5CONTENTAdapter();
			}
			@Override
			public Adapter caseAFFCONTENT(AFFCONTENT object) {
				return createAFFCONTENTAdapter();
			}
			@Override
			public Adapter caseAIG10CONTENT(AIG10CONTENT object) {
				return createAIG10CONTENTAdapter();
			}
			@Override
			public Adapter caseAIG11CONTENT(AIG11CONTENT object) {
				return createAIG11CONTENTAdapter();
			}
			@Override
			public Adapter caseAIG12CONTENT(AIG12CONTENT object) {
				return createAIG12CONTENTAdapter();
			}
			@Override
			public Adapter caseAIG13CONTENT(AIG13CONTENT object) {
				return createAIG13CONTENTAdapter();
			}
			@Override
			public Adapter caseAIG14CONTENT(AIG14CONTENT object) {
				return createAIG14CONTENTAdapter();
			}
			@Override
			public Adapter caseAIG1CONTENT(AIG1CONTENT object) {
				return createAIG1CONTENTAdapter();
			}
			@Override
			public Adapter caseAIG2CONTENT(AIG2CONTENT object) {
				return createAIG2CONTENTAdapter();
			}
			@Override
			public Adapter caseAIG3CONTENT(AIG3CONTENT object) {
				return createAIG3CONTENTAdapter();
			}
			@Override
			public Adapter caseAIG4CONTENT(AIG4CONTENT object) {
				return createAIG4CONTENTAdapter();
			}
			@Override
			public Adapter caseAIG5CONTENT(AIG5CONTENT object) {
				return createAIG5CONTENTAdapter();
			}
			@Override
			public Adapter caseAIG6CONTENT(AIG6CONTENT object) {
				return createAIG6CONTENTAdapter();
			}
			@Override
			public Adapter caseAIG7CONTENT(AIG7CONTENT object) {
				return createAIG7CONTENTAdapter();
			}
			@Override
			public Adapter caseAIG8CONTENT(AIG8CONTENT object) {
				return createAIG8CONTENTAdapter();
			}
			@Override
			public Adapter caseAIG9CONTENT(AIG9CONTENT object) {
				return createAIG9CONTENTAdapter();
			}
			@Override
			public Adapter caseAIGCONTENT(AIGCONTENT object) {
				return createAIGCONTENTAdapter();
			}
			@Override
			public Adapter caseAIL10CONTENT(AIL10CONTENT object) {
				return createAIL10CONTENTAdapter();
			}
			@Override
			public Adapter caseAIL11CONTENT(AIL11CONTENT object) {
				return createAIL11CONTENTAdapter();
			}
			@Override
			public Adapter caseAIL12CONTENT(AIL12CONTENT object) {
				return createAIL12CONTENTAdapter();
			}
			@Override
			public Adapter caseAIL1CONTENT(AIL1CONTENT object) {
				return createAIL1CONTENTAdapter();
			}
			@Override
			public Adapter caseAIL2CONTENT(AIL2CONTENT object) {
				return createAIL2CONTENTAdapter();
			}
			@Override
			public Adapter caseAIL3CONTENT(AIL3CONTENT object) {
				return createAIL3CONTENTAdapter();
			}
			@Override
			public Adapter caseAIL4CONTENT(AIL4CONTENT object) {
				return createAIL4CONTENTAdapter();
			}
			@Override
			public Adapter caseAIL5CONTENT(AIL5CONTENT object) {
				return createAIL5CONTENTAdapter();
			}
			@Override
			public Adapter caseAIL6CONTENT(AIL6CONTENT object) {
				return createAIL6CONTENTAdapter();
			}
			@Override
			public Adapter caseAIL7CONTENT(AIL7CONTENT object) {
				return createAIL7CONTENTAdapter();
			}
			@Override
			public Adapter caseAIL8CONTENT(AIL8CONTENT object) {
				return createAIL8CONTENTAdapter();
			}
			@Override
			public Adapter caseAIL9CONTENT(AIL9CONTENT object) {
				return createAIL9CONTENTAdapter();
			}
			@Override
			public Adapter caseAILCONTENT(AILCONTENT object) {
				return createAILCONTENTAdapter();
			}
			@Override
			public Adapter caseAIP10CONTENT(AIP10CONTENT object) {
				return createAIP10CONTENTAdapter();
			}
			@Override
			public Adapter caseAIP11CONTENT(AIP11CONTENT object) {
				return createAIP11CONTENTAdapter();
			}
			@Override
			public Adapter caseAIP12CONTENT(AIP12CONTENT object) {
				return createAIP12CONTENTAdapter();
			}
			@Override
			public Adapter caseAIP1CONTENT(AIP1CONTENT object) {
				return createAIP1CONTENTAdapter();
			}
			@Override
			public Adapter caseAIP2CONTENT(AIP2CONTENT object) {
				return createAIP2CONTENTAdapter();
			}
			@Override
			public Adapter caseAIP3CONTENT(AIP3CONTENT object) {
				return createAIP3CONTENTAdapter();
			}
			@Override
			public Adapter caseAIP4CONTENT(AIP4CONTENT object) {
				return createAIP4CONTENTAdapter();
			}
			@Override
			public Adapter caseAIP5CONTENT(AIP5CONTENT object) {
				return createAIP5CONTENTAdapter();
			}
			@Override
			public Adapter caseAIP6CONTENT(AIP6CONTENT object) {
				return createAIP6CONTENTAdapter();
			}
			@Override
			public Adapter caseAIP7CONTENT(AIP7CONTENT object) {
				return createAIP7CONTENTAdapter();
			}
			@Override
			public Adapter caseAIP8CONTENT(AIP8CONTENT object) {
				return createAIP8CONTENTAdapter();
			}
			@Override
			public Adapter caseAIP9CONTENT(AIP9CONTENT object) {
				return createAIP9CONTENTAdapter();
			}
			@Override
			public Adapter caseAIPCONTENT(AIPCONTENT object) {
				return createAIPCONTENTAdapter();
			}
			@Override
			public Adapter caseAIS10CONTENT(AIS10CONTENT object) {
				return createAIS10CONTENTAdapter();
			}
			@Override
			public Adapter caseAIS11CONTENT(AIS11CONTENT object) {
				return createAIS11CONTENTAdapter();
			}
			@Override
			public Adapter caseAIS12CONTENT(AIS12CONTENT object) {
				return createAIS12CONTENTAdapter();
			}
			@Override
			public Adapter caseAIS1CONTENT(AIS1CONTENT object) {
				return createAIS1CONTENTAdapter();
			}
			@Override
			public Adapter caseAIS2CONTENT(AIS2CONTENT object) {
				return createAIS2CONTENTAdapter();
			}
			@Override
			public Adapter caseAIS3CONTENT(AIS3CONTENT object) {
				return createAIS3CONTENTAdapter();
			}
			@Override
			public Adapter caseAIS4CONTENT(AIS4CONTENT object) {
				return createAIS4CONTENTAdapter();
			}
			@Override
			public Adapter caseAIS5CONTENT(AIS5CONTENT object) {
				return createAIS5CONTENTAdapter();
			}
			@Override
			public Adapter caseAIS6CONTENT(AIS6CONTENT object) {
				return createAIS6CONTENTAdapter();
			}
			@Override
			public Adapter caseAIS7CONTENT(AIS7CONTENT object) {
				return createAIS7CONTENTAdapter();
			}
			@Override
			public Adapter caseAIS8CONTENT(AIS8CONTENT object) {
				return createAIS8CONTENTAdapter();
			}
			@Override
			public Adapter caseAIS9CONTENT(AIS9CONTENT object) {
				return createAIS9CONTENTAdapter();
			}
			@Override
			public Adapter caseAISCONTENT(AISCONTENT object) {
				return createAISCONTENTAdapter();
			}
			@Override
			public Adapter caseAL11CONTENT(AL11CONTENT object) {
				return createAL11CONTENTAdapter();
			}
			@Override
			public Adapter caseAL12CONTENT(AL12CONTENT object) {
				return createAL12CONTENTAdapter();
			}
			@Override
			public Adapter caseAL13CONTENT(AL13CONTENT object) {
				return createAL13CONTENTAdapter();
			}
			@Override
			public Adapter caseAL14CONTENT(AL14CONTENT object) {
				return createAL14CONTENTAdapter();
			}
			@Override
			public Adapter caseAL15CONTENT(AL15CONTENT object) {
				return createAL15CONTENTAdapter();
			}
			@Override
			public Adapter caseAL16CONTENT(AL16CONTENT object) {
				return createAL16CONTENTAdapter();
			}
			@Override
			public Adapter caseAL1CONTENT(AL1CONTENT object) {
				return createAL1CONTENTAdapter();
			}
			@Override
			public Adapter caseAnyHL7SegmentTYPE(AnyHL7SegmentTYPE object) {
				return createAnyHL7SegmentTYPEAdapter();
			}
			@Override
			public Adapter caseAnyZSegmentTYPE(AnyZSegmentTYPE object) {
				return createAnyZSegmentTYPEAdapter();
			}
			@Override
			public Adapter caseAPR1CONTENT(APR1CONTENT object) {
				return createAPR1CONTENTAdapter();
			}
			@Override
			public Adapter caseAPR2CONTENT(APR2CONTENT object) {
				return createAPR2CONTENTAdapter();
			}
			@Override
			public Adapter caseAPR3CONTENT(APR3CONTENT object) {
				return createAPR3CONTENTAdapter();
			}
			@Override
			public Adapter caseAPR4CONTENT(APR4CONTENT object) {
				return createAPR4CONTENTAdapter();
			}
			@Override
			public Adapter caseAPR5CONTENT(APR5CONTENT object) {
				return createAPR5CONTENTAdapter();
			}
			@Override
			public Adapter caseAPRCONTENT(APRCONTENT object) {
				return createAPRCONTENTAdapter();
			}
			@Override
			public Adapter caseARQ10CONTENT(ARQ10CONTENT object) {
				return createARQ10CONTENTAdapter();
			}
			@Override
			public Adapter caseARQ11CONTENT(ARQ11CONTENT object) {
				return createARQ11CONTENTAdapter();
			}
			@Override
			public Adapter caseARQ12CONTENT(ARQ12CONTENT object) {
				return createARQ12CONTENTAdapter();
			}
			@Override
			public Adapter caseARQ13CONTENT(ARQ13CONTENT object) {
				return createARQ13CONTENTAdapter();
			}
			@Override
			public Adapter caseARQ14CONTENT(ARQ14CONTENT object) {
				return createARQ14CONTENTAdapter();
			}
			@Override
			public Adapter caseARQ15CONTENT(ARQ15CONTENT object) {
				return createARQ15CONTENTAdapter();
			}
			@Override
			public Adapter caseARQ16CONTENT(ARQ16CONTENT object) {
				return createARQ16CONTENTAdapter();
			}
			@Override
			public Adapter caseARQ17CONTENT(ARQ17CONTENT object) {
				return createARQ17CONTENTAdapter();
			}
			@Override
			public Adapter caseARQ18CONTENT(ARQ18CONTENT object) {
				return createARQ18CONTENTAdapter();
			}
			@Override
			public Adapter caseARQ19CONTENT(ARQ19CONTENT object) {
				return createARQ19CONTENTAdapter();
			}
			@Override
			public Adapter caseARQ1CONTENT(ARQ1CONTENT object) {
				return createARQ1CONTENTAdapter();
			}
			@Override
			public Adapter caseARQ20CONTENT(ARQ20CONTENT object) {
				return createARQ20CONTENTAdapter();
			}
			@Override
			public Adapter caseARQ21CONTENT(ARQ21CONTENT object) {
				return createARQ21CONTENTAdapter();
			}
			@Override
			public Adapter caseARQ22CONTENT(ARQ22CONTENT object) {
				return createARQ22CONTENTAdapter();
			}
			@Override
			public Adapter caseARQ23CONTENT(ARQ23CONTENT object) {
				return createARQ23CONTENTAdapter();
			}
			@Override
			public Adapter caseARQ24CONTENT(ARQ24CONTENT object) {
				return createARQ24CONTENTAdapter();
			}
			@Override
			public Adapter caseARQ25CONTENT(ARQ25CONTENT object) {
				return createARQ25CONTENTAdapter();
			}
			@Override
			public Adapter caseARQ2CONTENT(ARQ2CONTENT object) {
				return createARQ2CONTENTAdapter();
			}
			@Override
			public Adapter caseARQ3CONTENT(ARQ3CONTENT object) {
				return createARQ3CONTENTAdapter();
			}
			@Override
			public Adapter caseARQ4CONTENT(ARQ4CONTENT object) {
				return createARQ4CONTENTAdapter();
			}
			@Override
			public Adapter caseARQ5CONTENT(ARQ5CONTENT object) {
				return createARQ5CONTENTAdapter();
			}
			@Override
			public Adapter caseARQ6CONTENT(ARQ6CONTENT object) {
				return createARQ6CONTENTAdapter();
			}
			@Override
			public Adapter caseARQ7CONTENT(ARQ7CONTENT object) {
				return createARQ7CONTENTAdapter();
			}
			@Override
			public Adapter caseARQ8CONTENT(ARQ8CONTENT object) {
				return createARQ8CONTENTAdapter();
			}
			@Override
			public Adapter caseARQ9CONTENT(ARQ9CONTENT object) {
				return createARQ9CONTENTAdapter();
			}
			@Override
			public Adapter caseARQCONTENT(ARQCONTENT object) {
				return createARQCONTENTAdapter();
			}
			@Override
			public Adapter caseAUI(AUI object) {
				return createAUIAdapter();
			}
			@Override
			public Adapter caseAUI1CONTENT(AUI1CONTENT object) {
				return createAUI1CONTENTAdapter();
			}
			@Override
			public Adapter caseAUI2CONTENT(AUI2CONTENT object) {
				return createAUI2CONTENTAdapter();
			}
			@Override
			public Adapter caseAUI3CONTENT(AUI3CONTENT object) {
				return createAUI3CONTENTAdapter();
			}
			@Override
			public Adapter caseAUT10CONTENT(AUT10CONTENT object) {
				return createAUT10CONTENTAdapter();
			}
			@Override
			public Adapter caseAUT1CONTENT(AUT1CONTENT object) {
				return createAUT1CONTENTAdapter();
			}
			@Override
			public Adapter caseAUT2CONTENT(AUT2CONTENT object) {
				return createAUT2CONTENTAdapter();
			}
			@Override
			public Adapter caseAUT3CONTENT(AUT3CONTENT object) {
				return createAUT3CONTENTAdapter();
			}
			@Override
			public Adapter caseAUT4CONTENT(AUT4CONTENT object) {
				return createAUT4CONTENTAdapter();
			}
			@Override
			public Adapter caseAUT5CONTENT(AUT5CONTENT object) {
				return createAUT5CONTENTAdapter();
			}
			@Override
			public Adapter caseAUT6CONTENT(AUT6CONTENT object) {
				return createAUT6CONTENTAdapter();
			}
			@Override
			public Adapter caseAUT7CONTENT(AUT7CONTENT object) {
				return createAUT7CONTENTAdapter();
			}
			@Override
			public Adapter caseAUT8CONTENT(AUT8CONTENT object) {
				return createAUT8CONTENTAdapter();
			}
			@Override
			public Adapter caseAUT9CONTENT(AUT9CONTENT object) {
				return createAUT9CONTENTAdapter();
			}
			@Override
			public Adapter caseAUTCONTENT(AUTCONTENT object) {
				return createAUTCONTENTAdapter();
			}
			@Override
			public Adapter caseBARP01CONTENT(BARP01CONTENT object) {
				return createBARP01CONTENTAdapter();
			}
			@Override
			public Adapter caseBARP01INSURANCECONTENT(BARP01INSURANCECONTENT object) {
				return createBARP01INSURANCECONTENTAdapter();
			}
			@Override
			public Adapter caseBARP01PROCEDURECONTENT(BARP01PROCEDURECONTENT object) {
				return createBARP01PROCEDURECONTENTAdapter();
			}
			@Override
			public Adapter caseBARP01VISITCONTENT(BARP01VISITCONTENT object) {
				return createBARP01VISITCONTENTAdapter();
			}
			@Override
			public Adapter caseBHS10CONTENT(BHS10CONTENT object) {
				return createBHS10CONTENTAdapter();
			}
			@Override
			public Adapter caseBHS11CONTENT(BHS11CONTENT object) {
				return createBHS11CONTENTAdapter();
			}
			@Override
			public Adapter caseBHS12CONTENT(BHS12CONTENT object) {
				return createBHS12CONTENTAdapter();
			}
			@Override
			public Adapter caseBHS1CONTENT(BHS1CONTENT object) {
				return createBHS1CONTENTAdapter();
			}
			@Override
			public Adapter caseBHS2CONTENT(BHS2CONTENT object) {
				return createBHS2CONTENTAdapter();
			}
			@Override
			public Adapter caseBHS3CONTENT(BHS3CONTENT object) {
				return createBHS3CONTENTAdapter();
			}
			@Override
			public Adapter caseBHS4CONTENT(BHS4CONTENT object) {
				return createBHS4CONTENTAdapter();
			}
			@Override
			public Adapter caseBHS5CONTENT(BHS5CONTENT object) {
				return createBHS5CONTENTAdapter();
			}
			@Override
			public Adapter caseBHS6CONTENT(BHS6CONTENT object) {
				return createBHS6CONTENTAdapter();
			}
			@Override
			public Adapter caseBHS7CONTENT(BHS7CONTENT object) {
				return createBHS7CONTENTAdapter();
			}
			@Override
			public Adapter caseBHS8CONTENT(BHS8CONTENT object) {
				return createBHS8CONTENTAdapter();
			}
			@Override
			public Adapter caseBHS9CONTENT(BHS9CONTENT object) {
				return createBHS9CONTENTAdapter();
			}
			@Override
			public Adapter caseBHSCONTENT(BHSCONTENT object) {
				return createBHSCONTENTAdapter();
			}
			@Override
			public Adapter caseBLC1CONTENT(BLC1CONTENT object) {
				return createBLC1CONTENTAdapter();
			}
			@Override
			public Adapter caseBLC2CONTENT(BLC2CONTENT object) {
				return createBLC2CONTENTAdapter();
			}
			@Override
			public Adapter caseBLCCONTENT(BLCCONTENT object) {
				return createBLCCONTENTAdapter();
			}
			@Override
			public Adapter caseBLG1CONTENT(BLG1CONTENT object) {
				return createBLG1CONTENTAdapter();
			}
			@Override
			public Adapter caseBLG2CONTENT(BLG2CONTENT object) {
				return createBLG2CONTENTAdapter();
			}
			@Override
			public Adapter caseBLG3CONTENT(BLG3CONTENT object) {
				return createBLG3CONTENTAdapter();
			}
			@Override
			public Adapter caseBLG4CONTENT(BLG4CONTENT object) {
				return createBLG4CONTENTAdapter();
			}
			@Override
			public Adapter caseBLGCONTENT(BLGCONTENT object) {
				return createBLGCONTENTAdapter();
			}
			@Override
			public Adapter caseBPO10CONTENT(BPO10CONTENT object) {
				return createBPO10CONTENTAdapter();
			}
			@Override
			public Adapter caseBPO11CONTENT(BPO11CONTENT object) {
				return createBPO11CONTENTAdapter();
			}
			@Override
			public Adapter caseBPO12CONTENT(BPO12CONTENT object) {
				return createBPO12CONTENTAdapter();
			}
			@Override
			public Adapter caseBPO13CONTENT(BPO13CONTENT object) {
				return createBPO13CONTENTAdapter();
			}
			@Override
			public Adapter caseBPO14CONTENT(BPO14CONTENT object) {
				return createBPO14CONTENTAdapter();
			}
			@Override
			public Adapter caseBPO1CONTENT(BPO1CONTENT object) {
				return createBPO1CONTENTAdapter();
			}
			@Override
			public Adapter caseBPO2CONTENT(BPO2CONTENT object) {
				return createBPO2CONTENTAdapter();
			}
			@Override
			public Adapter caseBPO3CONTENT(BPO3CONTENT object) {
				return createBPO3CONTENTAdapter();
			}
			@Override
			public Adapter caseBPO4CONTENT(BPO4CONTENT object) {
				return createBPO4CONTENTAdapter();
			}
			@Override
			public Adapter caseBPO5CONTENT(BPO5CONTENT object) {
				return createBPO5CONTENTAdapter();
			}
			@Override
			public Adapter caseBPO6CONTENT(BPO6CONTENT object) {
				return createBPO6CONTENTAdapter();
			}
			@Override
			public Adapter caseBPO7CONTENT(BPO7CONTENT object) {
				return createBPO7CONTENTAdapter();
			}
			@Override
			public Adapter caseBPO8CONTENT(BPO8CONTENT object) {
				return createBPO8CONTENTAdapter();
			}
			@Override
			public Adapter caseBPO9CONTENT(BPO9CONTENT object) {
				return createBPO9CONTENTAdapter();
			}
			@Override
			public Adapter caseBPOCONTENT(BPOCONTENT object) {
				return createBPOCONTENTAdapter();
			}
			@Override
			public Adapter caseBPX10CONTENT(BPX10CONTENT object) {
				return createBPX10CONTENTAdapter();
			}
			@Override
			public Adapter caseBPX11CONTENT(BPX11CONTENT object) {
				return createBPX11CONTENTAdapter();
			}
			@Override
			public Adapter caseBPX12CONTENT(BPX12CONTENT object) {
				return createBPX12CONTENTAdapter();
			}
			@Override
			public Adapter caseBPX13CONTENT(BPX13CONTENT object) {
				return createBPX13CONTENTAdapter();
			}
			@Override
			public Adapter caseBPX14CONTENT(BPX14CONTENT object) {
				return createBPX14CONTENTAdapter();
			}
			@Override
			public Adapter caseBPX15CONTENT(BPX15CONTENT object) {
				return createBPX15CONTENTAdapter();
			}
			@Override
			public Adapter caseBPX16CONTENT(BPX16CONTENT object) {
				return createBPX16CONTENTAdapter();
			}
			@Override
			public Adapter caseBPX17CONTENT(BPX17CONTENT object) {
				return createBPX17CONTENTAdapter();
			}
			@Override
			public Adapter caseBPX18CONTENT(BPX18CONTENT object) {
				return createBPX18CONTENTAdapter();
			}
			@Override
			public Adapter caseBPX19CONTENT(BPX19CONTENT object) {
				return createBPX19CONTENTAdapter();
			}
			@Override
			public Adapter caseBPX1CONTENT(BPX1CONTENT object) {
				return createBPX1CONTENTAdapter();
			}
			@Override
			public Adapter caseBPX20CONTENT(BPX20CONTENT object) {
				return createBPX20CONTENTAdapter();
			}
			@Override
			public Adapter caseBPX21CONTENT(BPX21CONTENT object) {
				return createBPX21CONTENTAdapter();
			}
			@Override
			public Adapter caseBPX2CONTENT(BPX2CONTENT object) {
				return createBPX2CONTENTAdapter();
			}
			@Override
			public Adapter caseBPX3CONTENT(BPX3CONTENT object) {
				return createBPX3CONTENTAdapter();
			}
			@Override
			public Adapter caseBPX4CONTENT(BPX4CONTENT object) {
				return createBPX4CONTENTAdapter();
			}
			@Override
			public Adapter caseBPX5CONTENT(BPX5CONTENT object) {
				return createBPX5CONTENTAdapter();
			}
			@Override
			public Adapter caseBPX6CONTENT(BPX6CONTENT object) {
				return createBPX6CONTENTAdapter();
			}
			@Override
			public Adapter caseBPX7CONTENT(BPX7CONTENT object) {
				return createBPX7CONTENTAdapter();
			}
			@Override
			public Adapter caseBPX8CONTENT(BPX8CONTENT object) {
				return createBPX8CONTENTAdapter();
			}
			@Override
			public Adapter caseBPX9CONTENT(BPX9CONTENT object) {
				return createBPX9CONTENTAdapter();
			}
			@Override
			public Adapter caseBPXCONTENT(BPXCONTENT object) {
				return createBPXCONTENTAdapter();
			}
			@Override
			public Adapter caseBTS1CONTENT(BTS1CONTENT object) {
				return createBTS1CONTENTAdapter();
			}
			@Override
			public Adapter caseBTS2CONTENT(BTS2CONTENT object) {
				return createBTS2CONTENTAdapter();
			}
			@Override
			public Adapter caseBTS3CONTENT(BTS3CONTENT object) {
				return createBTS3CONTENTAdapter();
			}
			@Override
			public Adapter caseBTSCONTENT(BTSCONTENT object) {
				return createBTSCONTENTAdapter();
			}
			@Override
			public Adapter caseBTX10CONTENT(BTX10CONTENT object) {
				return createBTX10CONTENTAdapter();
			}
			@Override
			public Adapter caseBTX11CONTENT(BTX11CONTENT object) {
				return createBTX11CONTENTAdapter();
			}
			@Override
			public Adapter caseBTX12CONTENT(BTX12CONTENT object) {
				return createBTX12CONTENTAdapter();
			}
			@Override
			public Adapter caseBTX13CONTENT(BTX13CONTENT object) {
				return createBTX13CONTENTAdapter();
			}
			@Override
			public Adapter caseBTX14CONTENT(BTX14CONTENT object) {
				return createBTX14CONTENTAdapter();
			}
			@Override
			public Adapter caseBTX15CONTENT(BTX15CONTENT object) {
				return createBTX15CONTENTAdapter();
			}
			@Override
			public Adapter caseBTX16CONTENT(BTX16CONTENT object) {
				return createBTX16CONTENTAdapter();
			}
			@Override
			public Adapter caseBTX17CONTENT(BTX17CONTENT object) {
				return createBTX17CONTENTAdapter();
			}
			@Override
			public Adapter caseBTX18CONTENT(BTX18CONTENT object) {
				return createBTX18CONTENTAdapter();
			}
			@Override
			public Adapter caseBTX19CONTENT(BTX19CONTENT object) {
				return createBTX19CONTENTAdapter();
			}
			@Override
			public Adapter caseBTX1CONTENT(BTX1CONTENT object) {
				return createBTX1CONTENTAdapter();
			}
			@Override
			public Adapter caseBTX2CONTENT(BTX2CONTENT object) {
				return createBTX2CONTENTAdapter();
			}
			@Override
			public Adapter caseBTX3CONTENT(BTX3CONTENT object) {
				return createBTX3CONTENTAdapter();
			}
			@Override
			public Adapter caseBTX4CONTENT(BTX4CONTENT object) {
				return createBTX4CONTENTAdapter();
			}
			@Override
			public Adapter caseBTX5CONTENT(BTX5CONTENT object) {
				return createBTX5CONTENTAdapter();
			}
			@Override
			public Adapter caseBTX6CONTENT(BTX6CONTENT object) {
				return createBTX6CONTENTAdapter();
			}
			@Override
			public Adapter caseBTX7CONTENT(BTX7CONTENT object) {
				return createBTX7CONTENTAdapter();
			}
			@Override
			public Adapter caseBTX8CONTENT(BTX8CONTENT object) {
				return createBTX8CONTENTAdapter();
			}
			@Override
			public Adapter caseBTX9CONTENT(BTX9CONTENT object) {
				return createBTX9CONTENTAdapter();
			}
			@Override
			public Adapter caseBTXCONTENT(BTXCONTENT object) {
				return createBTXCONTENTAdapter();
			}
			@Override
			public Adapter caseCCD(CCD object) {
				return createCCDAdapter();
			}
			@Override
			public Adapter caseCCD1CONTENT(CCD1CONTENT object) {
				return createCCD1CONTENTAdapter();
			}
			@Override
			public Adapter caseCCD2CONTENT(CCD2CONTENT object) {
				return createCCD2CONTENTAdapter();
			}
			@Override
			public Adapter caseCCP(CCP object) {
				return createCCPAdapter();
			}
			@Override
			public Adapter caseCCP1CONTENT(CCP1CONTENT object) {
				return createCCP1CONTENTAdapter();
			}
			@Override
			public Adapter caseCCP2CONTENT(CCP2CONTENT object) {
				return createCCP2CONTENTAdapter();
			}
			@Override
			public Adapter caseCCP3CONTENT(CCP3CONTENT object) {
				return createCCP3CONTENTAdapter();
			}
			@Override
			public Adapter caseCD(CD object) {
				return createCDAdapter();
			}
			@Override
			public Adapter caseCD1CONTENT(CD1CONTENT object) {
				return createCD1CONTENTAdapter();
			}
			@Override
			public Adapter caseCD2CONTENT(CD2CONTENT object) {
				return createCD2CONTENTAdapter();
			}
			@Override
			public Adapter caseCD3CONTENT(CD3CONTENT object) {
				return createCD3CONTENTAdapter();
			}
			@Override
			public Adapter caseCD4CONTENT(CD4CONTENT object) {
				return createCD4CONTENTAdapter();
			}
			@Override
			public Adapter caseCD5CONTENT(CD5CONTENT object) {
				return createCD5CONTENTAdapter();
			}
			@Override
			public Adapter caseCD6CONTENT(CD6CONTENT object) {
				return createCD6CONTENTAdapter();
			}
			@Override
			public Adapter caseCDM10CONTENT(CDM10CONTENT object) {
				return createCDM10CONTENTAdapter();
			}
			@Override
			public Adapter caseCDM11CONTENT(CDM11CONTENT object) {
				return createCDM11CONTENTAdapter();
			}
			@Override
			public Adapter caseCDM12CONTENT(CDM12CONTENT object) {
				return createCDM12CONTENTAdapter();
			}
			@Override
			public Adapter caseCDM13CONTENT(CDM13CONTENT object) {
				return createCDM13CONTENTAdapter();
			}
			@Override
			public Adapter caseCDM1CONTENT(CDM1CONTENT object) {
				return createCDM1CONTENTAdapter();
			}
			@Override
			public Adapter caseCDM2CONTENT(CDM2CONTENT object) {
				return createCDM2CONTENTAdapter();
			}
			@Override
			public Adapter caseCDM3CONTENT(CDM3CONTENT object) {
				return createCDM3CONTENTAdapter();
			}
			@Override
			public Adapter caseCDM4CONTENT(CDM4CONTENT object) {
				return createCDM4CONTENTAdapter();
			}
			@Override
			public Adapter caseCDM5CONTENT(CDM5CONTENT object) {
				return createCDM5CONTENTAdapter();
			}
			@Override
			public Adapter caseCDM6CONTENT(CDM6CONTENT object) {
				return createCDM6CONTENTAdapter();
			}
			@Override
			public Adapter caseCDM7CONTENT(CDM7CONTENT object) {
				return createCDM7CONTENTAdapter();
			}
			@Override
			public Adapter caseCDM8CONTENT(CDM8CONTENT object) {
				return createCDM8CONTENTAdapter();
			}
			@Override
			public Adapter caseCDM9CONTENT(CDM9CONTENT object) {
				return createCDM9CONTENTAdapter();
			}
			@Override
			public Adapter caseCDMCONTENT(CDMCONTENT object) {
				return createCDMCONTENTAdapter();
			}
			@Override
			public Adapter caseCE(CE object) {
				return createCEAdapter();
			}
			@Override
			public Adapter caseCE1CONTENT(CE1CONTENT object) {
				return createCE1CONTENTAdapter();
			}
			@Override
			public Adapter caseCE2CONTENT(CE2CONTENT object) {
				return createCE2CONTENTAdapter();
			}
			@Override
			public Adapter caseCE3CONTENT(CE3CONTENT object) {
				return createCE3CONTENTAdapter();
			}
			@Override
			public Adapter caseCE4CONTENT(CE4CONTENT object) {
				return createCE4CONTENTAdapter();
			}
			@Override
			public Adapter caseCE5CONTENT(CE5CONTENT object) {
				return createCE5CONTENTAdapter();
			}
			@Override
			public Adapter caseCE6CONTENT(CE6CONTENT object) {
				return createCE6CONTENTAdapter();
			}
			@Override
			public Adapter caseCER10CONTENT(CER10CONTENT object) {
				return createCER10CONTENTAdapter();
			}
			@Override
			public Adapter caseCER11CONTENT(CER11CONTENT object) {
				return createCER11CONTENTAdapter();
			}
			@Override
			public Adapter caseCER12CONTENT(CER12CONTENT object) {
				return createCER12CONTENTAdapter();
			}
			@Override
			public Adapter caseCER13CONTENT(CER13CONTENT object) {
				return createCER13CONTENTAdapter();
			}
			@Override
			public Adapter caseCER14CONTENT(CER14CONTENT object) {
				return createCER14CONTENTAdapter();
			}
			@Override
			public Adapter caseCER15CONTENT(CER15CONTENT object) {
				return createCER15CONTENTAdapter();
			}
			@Override
			public Adapter caseCER16CONTENT(CER16CONTENT object) {
				return createCER16CONTENTAdapter();
			}
			@Override
			public Adapter caseCER17CONTENT(CER17CONTENT object) {
				return createCER17CONTENTAdapter();
			}
			@Override
			public Adapter caseCER18CONTENT(CER18CONTENT object) {
				return createCER18CONTENTAdapter();
			}
			@Override
			public Adapter caseCER19CONTENT(CER19CONTENT object) {
				return createCER19CONTENTAdapter();
			}
			@Override
			public Adapter caseCER1CONTENT(CER1CONTENT object) {
				return createCER1CONTENTAdapter();
			}
			@Override
			public Adapter caseCER20CONTENT(CER20CONTENT object) {
				return createCER20CONTENTAdapter();
			}
			@Override
			public Adapter caseCER21CONTENT(CER21CONTENT object) {
				return createCER21CONTENTAdapter();
			}
			@Override
			public Adapter caseCER22CONTENT(CER22CONTENT object) {
				return createCER22CONTENTAdapter();
			}
			@Override
			public Adapter caseCER23CONTENT(CER23CONTENT object) {
				return createCER23CONTENTAdapter();
			}
			@Override
			public Adapter caseCER24CONTENT(CER24CONTENT object) {
				return createCER24CONTENTAdapter();
			}
			@Override
			public Adapter caseCER25CONTENT(CER25CONTENT object) {
				return createCER25CONTENTAdapter();
			}
			@Override
			public Adapter caseCER26CONTENT(CER26CONTENT object) {
				return createCER26CONTENTAdapter();
			}
			@Override
			public Adapter caseCER27CONTENT(CER27CONTENT object) {
				return createCER27CONTENTAdapter();
			}
			@Override
			public Adapter caseCER28CONTENT(CER28CONTENT object) {
				return createCER28CONTENTAdapter();
			}
			@Override
			public Adapter caseCER29CONTENT(CER29CONTENT object) {
				return createCER29CONTENTAdapter();
			}
			@Override
			public Adapter caseCER2CONTENT(CER2CONTENT object) {
				return createCER2CONTENTAdapter();
			}
			@Override
			public Adapter caseCER30CONTENT(CER30CONTENT object) {
				return createCER30CONTENTAdapter();
			}
			@Override
			public Adapter caseCER31CONTENT(CER31CONTENT object) {
				return createCER31CONTENTAdapter();
			}
			@Override
			public Adapter caseCER3CONTENT(CER3CONTENT object) {
				return createCER3CONTENTAdapter();
			}
			@Override
			public Adapter caseCER4CONTENT(CER4CONTENT object) {
				return createCER4CONTENTAdapter();
			}
			@Override
			public Adapter caseCER5CONTENT(CER5CONTENT object) {
				return createCER5CONTENTAdapter();
			}
			@Override
			public Adapter caseCER6CONTENT(CER6CONTENT object) {
				return createCER6CONTENTAdapter();
			}
			@Override
			public Adapter caseCER7CONTENT(CER7CONTENT object) {
				return createCER7CONTENTAdapter();
			}
			@Override
			public Adapter caseCER8CONTENT(CER8CONTENT object) {
				return createCER8CONTENTAdapter();
			}
			@Override
			public Adapter caseCER9CONTENT(CER9CONTENT object) {
				return createCER9CONTENTAdapter();
			}
			@Override
			public Adapter caseCERCONTENT(CERCONTENT object) {
				return createCERCONTENTAdapter();
			}
			@Override
			public Adapter caseCF(CF object) {
				return createCFAdapter();
			}
			@Override
			public Adapter caseCF1CONTENT(CF1CONTENT object) {
				return createCF1CONTENTAdapter();
			}
			@Override
			public Adapter caseCF2CONTENT(CF2CONTENT object) {
				return createCF2CONTENTAdapter();
			}
			@Override
			public Adapter caseCF3CONTENT(CF3CONTENT object) {
				return createCF3CONTENTAdapter();
			}
			@Override
			public Adapter caseCF4CONTENT(CF4CONTENT object) {
				return createCF4CONTENTAdapter();
			}
			@Override
			public Adapter caseCF5CONTENT(CF5CONTENT object) {
				return createCF5CONTENTAdapter();
			}
			@Override
			public Adapter caseCF6CONTENT(CF6CONTENT object) {
				return createCF6CONTENTAdapter();
			}
			@Override
			public Adapter caseCM010CONTENT(CM010CONTENT object) {
				return createCM010CONTENTAdapter();
			}
			@Override
			public Adapter caseCM011CONTENT(CM011CONTENT object) {
				return createCM011CONTENTAdapter();
			}
			@Override
			public Adapter caseCM01CONTENT(CM01CONTENT object) {
				return createCM01CONTENTAdapter();
			}
			@Override
			public Adapter caseCM02CONTENT(CM02CONTENT object) {
				return createCM02CONTENTAdapter();
			}
			@Override
			public Adapter caseCM03CONTENT(CM03CONTENT object) {
				return createCM03CONTENTAdapter();
			}
			@Override
			public Adapter caseCM04CONTENT(CM04CONTENT object) {
				return createCM04CONTENTAdapter();
			}
			@Override
			public Adapter caseCM05CONTENT(CM05CONTENT object) {
				return createCM05CONTENTAdapter();
			}
			@Override
			public Adapter caseCM06CONTENT(CM06CONTENT object) {
				return createCM06CONTENTAdapter();
			}
			@Override
			public Adapter caseCM07CONTENT(CM07CONTENT object) {
				return createCM07CONTENTAdapter();
			}
			@Override
			public Adapter caseCM08CONTENT(CM08CONTENT object) {
				return createCM08CONTENTAdapter();
			}
			@Override
			public Adapter caseCM09CONTENT(CM09CONTENT object) {
				return createCM09CONTENTAdapter();
			}
			@Override
			public Adapter caseCM0CONTENT(CM0CONTENT object) {
				return createCM0CONTENTAdapter();
			}
			@Override
			public Adapter caseCM11CONTENT(CM11CONTENT object) {
				return createCM11CONTENTAdapter();
			}
			@Override
			public Adapter caseCM12CONTENT(CM12CONTENT object) {
				return createCM12CONTENTAdapter();
			}
			@Override
			public Adapter caseCM13CONTENT(CM13CONTENT object) {
				return createCM13CONTENTAdapter();
			}
			@Override
			public Adapter caseCM1CONTENT(CM1CONTENT object) {
				return createCM1CONTENTAdapter();
			}
			@Override
			public Adapter caseCM21CONTENT(CM21CONTENT object) {
				return createCM21CONTENTAdapter();
			}
			@Override
			public Adapter caseCM22CONTENT(CM22CONTENT object) {
				return createCM22CONTENTAdapter();
			}
			@Override
			public Adapter caseCM23CONTENT(CM23CONTENT object) {
				return createCM23CONTENTAdapter();
			}
			@Override
			public Adapter caseCM24CONTENT(CM24CONTENT object) {
				return createCM24CONTENTAdapter();
			}
			@Override
			public Adapter caseCM2CONTENT(CM2CONTENT object) {
				return createCM2CONTENTAdapter();
			}
			@Override
			public Adapter caseCNE(CNE object) {
				return createCNEAdapter();
			}
			@Override
			public Adapter caseCNE1CONTENT(CNE1CONTENT object) {
				return createCNE1CONTENTAdapter();
			}
			@Override
			public Adapter caseCNE2CONTENT(CNE2CONTENT object) {
				return createCNE2CONTENTAdapter();
			}
			@Override
			public Adapter caseCNE3CONTENT(CNE3CONTENT object) {
				return createCNE3CONTENTAdapter();
			}
			@Override
			public Adapter caseCNE4CONTENT(CNE4CONTENT object) {
				return createCNE4CONTENTAdapter();
			}
			@Override
			public Adapter caseCNE5CONTENT(CNE5CONTENT object) {
				return createCNE5CONTENTAdapter();
			}
			@Override
			public Adapter caseCNE6CONTENT(CNE6CONTENT object) {
				return createCNE6CONTENTAdapter();
			}
			@Override
			public Adapter caseCNE7CONTENT(CNE7CONTENT object) {
				return createCNE7CONTENTAdapter();
			}
			@Override
			public Adapter caseCNE8CONTENT(CNE8CONTENT object) {
				return createCNE8CONTENTAdapter();
			}
			@Override
			public Adapter caseCNE9CONTENT(CNE9CONTENT object) {
				return createCNE9CONTENTAdapter();
			}
			@Override
			public Adapter caseCNN(CNN object) {
				return createCNNAdapter();
			}
			@Override
			public Adapter caseCNN10CONTENT(CNN10CONTENT object) {
				return createCNN10CONTENTAdapter();
			}
			@Override
			public Adapter caseCNN11CONTENT(CNN11CONTENT object) {
				return createCNN11CONTENTAdapter();
			}
			@Override
			public Adapter caseCNN1CONTENT(CNN1CONTENT object) {
				return createCNN1CONTENTAdapter();
			}
			@Override
			public Adapter caseCNN2CONTENT(CNN2CONTENT object) {
				return createCNN2CONTENTAdapter();
			}
			@Override
			public Adapter caseCNN3CONTENT(CNN3CONTENT object) {
				return createCNN3CONTENTAdapter();
			}
			@Override
			public Adapter caseCNN4CONTENT(CNN4CONTENT object) {
				return createCNN4CONTENTAdapter();
			}
			@Override
			public Adapter caseCNN5CONTENT(CNN5CONTENT object) {
				return createCNN5CONTENTAdapter();
			}
			@Override
			public Adapter caseCNN6CONTENT(CNN6CONTENT object) {
				return createCNN6CONTENTAdapter();
			}
			@Override
			public Adapter caseCNN7CONTENT(CNN7CONTENT object) {
				return createCNN7CONTENTAdapter();
			}
			@Override
			public Adapter caseCNN8CONTENT(CNN8CONTENT object) {
				return createCNN8CONTENTAdapter();
			}
			@Override
			public Adapter caseCNN9CONTENT(CNN9CONTENT object) {
				return createCNN9CONTENTAdapter();
			}
			@Override
			public Adapter caseCNS1CONTENT(CNS1CONTENT object) {
				return createCNS1CONTENTAdapter();
			}
			@Override
			public Adapter caseCNS2CONTENT(CNS2CONTENT object) {
				return createCNS2CONTENTAdapter();
			}
			@Override
			public Adapter caseCNS3CONTENT(CNS3CONTENT object) {
				return createCNS3CONTENTAdapter();
			}
			@Override
			public Adapter caseCNS4CONTENT(CNS4CONTENT object) {
				return createCNS4CONTENTAdapter();
			}
			@Override
			public Adapter caseCNS5CONTENT(CNS5CONTENT object) {
				return createCNS5CONTENTAdapter();
			}
			@Override
			public Adapter caseCNS6CONTENT(CNS6CONTENT object) {
				return createCNS6CONTENTAdapter();
			}
			@Override
			public Adapter caseCNSCONTENT(CNSCONTENT object) {
				return createCNSCONTENTAdapter();
			}
			@Override
			public Adapter caseCON10CONTENT(CON10CONTENT object) {
				return createCON10CONTENTAdapter();
			}
			@Override
			public Adapter caseCON11CONTENT(CON11CONTENT object) {
				return createCON11CONTENTAdapter();
			}
			@Override
			public Adapter caseCON12CONTENT(CON12CONTENT object) {
				return createCON12CONTENTAdapter();
			}
			@Override
			public Adapter caseCON13CONTENT(CON13CONTENT object) {
				return createCON13CONTENTAdapter();
			}
			@Override
			public Adapter caseCON14CONTENT(CON14CONTENT object) {
				return createCON14CONTENTAdapter();
			}
			@Override
			public Adapter caseCON15CONTENT(CON15CONTENT object) {
				return createCON15CONTENTAdapter();
			}
			@Override
			public Adapter caseCON16CONTENT(CON16CONTENT object) {
				return createCON16CONTENTAdapter();
			}
			@Override
			public Adapter caseCON17CONTENT(CON17CONTENT object) {
				return createCON17CONTENTAdapter();
			}
			@Override
			public Adapter caseCON18CONTENT(CON18CONTENT object) {
				return createCON18CONTENTAdapter();
			}
			@Override
			public Adapter caseCON19CONTENT(CON19CONTENT object) {
				return createCON19CONTENTAdapter();
			}
			@Override
			public Adapter caseCON1CONTENT(CON1CONTENT object) {
				return createCON1CONTENTAdapter();
			}
			@Override
			public Adapter caseCON20CONTENT(CON20CONTENT object) {
				return createCON20CONTENTAdapter();
			}
			@Override
			public Adapter caseCON21CONTENT(CON21CONTENT object) {
				return createCON21CONTENTAdapter();
			}
			@Override
			public Adapter caseCON22CONTENT(CON22CONTENT object) {
				return createCON22CONTENTAdapter();
			}
			@Override
			public Adapter caseCON23CONTENT(CON23CONTENT object) {
				return createCON23CONTENTAdapter();
			}
			@Override
			public Adapter caseCON24CONTENT(CON24CONTENT object) {
				return createCON24CONTENTAdapter();
			}
			@Override
			public Adapter caseCON25CONTENT(CON25CONTENT object) {
				return createCON25CONTENTAdapter();
			}
			@Override
			public Adapter caseCON2CONTENT(CON2CONTENT object) {
				return createCON2CONTENTAdapter();
			}
			@Override
			public Adapter caseCON3CONTENT(CON3CONTENT object) {
				return createCON3CONTENTAdapter();
			}
			@Override
			public Adapter caseCON4CONTENT(CON4CONTENT object) {
				return createCON4CONTENTAdapter();
			}
			@Override
			public Adapter caseCON5CONTENT(CON5CONTENT object) {
				return createCON5CONTENTAdapter();
			}
			@Override
			public Adapter caseCON6CONTENT(CON6CONTENT object) {
				return createCON6CONTENTAdapter();
			}
			@Override
			public Adapter caseCON7CONTENT(CON7CONTENT object) {
				return createCON7CONTENTAdapter();
			}
			@Override
			public Adapter caseCON8CONTENT(CON8CONTENT object) {
				return createCON8CONTENTAdapter();
			}
			@Override
			public Adapter caseCON9CONTENT(CON9CONTENT object) {
				return createCON9CONTENTAdapter();
			}
			@Override
			public Adapter caseCONCONTENT(CONCONTENT object) {
				return createCONCONTENTAdapter();
			}
			@Override
			public Adapter caseCP(CP object) {
				return createCPAdapter();
			}
			@Override
			public Adapter caseCP1CONTENT(CP1CONTENT object) {
				return createCP1CONTENTAdapter();
			}
			@Override
			public Adapter caseCP2CONTENT(CP2CONTENT object) {
				return createCP2CONTENTAdapter();
			}
			@Override
			public Adapter caseCP3CONTENT(CP3CONTENT object) {
				return createCP3CONTENTAdapter();
			}
			@Override
			public Adapter caseCP4CONTENT(CP4CONTENT object) {
				return createCP4CONTENTAdapter();
			}
			@Override
			public Adapter caseCP5CONTENT(CP5CONTENT object) {
				return createCP5CONTENTAdapter();
			}
			@Override
			public Adapter caseCP6CONTENT(CP6CONTENT object) {
				return createCP6CONTENTAdapter();
			}
			@Override
			public Adapter caseCQ(CQ object) {
				return createCQAdapter();
			}
			@Override
			public Adapter caseCQ1CONTENT(CQ1CONTENT object) {
				return createCQ1CONTENTAdapter();
			}
			@Override
			public Adapter caseCQ2CONTENT(CQ2CONTENT object) {
				return createCQ2CONTENTAdapter();
			}
			@Override
			public Adapter caseCSP1CONTENT(CSP1CONTENT object) {
				return createCSP1CONTENTAdapter();
			}
			@Override
			public Adapter caseCSP2CONTENT(CSP2CONTENT object) {
				return createCSP2CONTENTAdapter();
			}
			@Override
			public Adapter caseCSP3CONTENT(CSP3CONTENT object) {
				return createCSP3CONTENTAdapter();
			}
			@Override
			public Adapter caseCSP4CONTENT(CSP4CONTENT object) {
				return createCSP4CONTENTAdapter();
			}
			@Override
			public Adapter caseCSPCONTENT(CSPCONTENT object) {
				return createCSPCONTENTAdapter();
			}
			@Override
			public Adapter caseCSR10CONTENT(CSR10CONTENT object) {
				return createCSR10CONTENTAdapter();
			}
			@Override
			public Adapter caseCSR11CONTENT(CSR11CONTENT object) {
				return createCSR11CONTENTAdapter();
			}
			@Override
			public Adapter caseCSR12CONTENT(CSR12CONTENT object) {
				return createCSR12CONTENTAdapter();
			}
			@Override
			public Adapter caseCSR13CONTENT(CSR13CONTENT object) {
				return createCSR13CONTENTAdapter();
			}
			@Override
			public Adapter caseCSR14CONTENT(CSR14CONTENT object) {
				return createCSR14CONTENTAdapter();
			}
			@Override
			public Adapter caseCSR15CONTENT(CSR15CONTENT object) {
				return createCSR15CONTENTAdapter();
			}
			@Override
			public Adapter caseCSR16CONTENT(CSR16CONTENT object) {
				return createCSR16CONTENTAdapter();
			}
			@Override
			public Adapter caseCSR1CONTENT(CSR1CONTENT object) {
				return createCSR1CONTENTAdapter();
			}
			@Override
			public Adapter caseCSR2CONTENT(CSR2CONTENT object) {
				return createCSR2CONTENTAdapter();
			}
			@Override
			public Adapter caseCSR3CONTENT(CSR3CONTENT object) {
				return createCSR3CONTENTAdapter();
			}
			@Override
			public Adapter caseCSR4CONTENT(CSR4CONTENT object) {
				return createCSR4CONTENTAdapter();
			}
			@Override
			public Adapter caseCSR5CONTENT(CSR5CONTENT object) {
				return createCSR5CONTENTAdapter();
			}
			@Override
			public Adapter caseCSR6CONTENT(CSR6CONTENT object) {
				return createCSR6CONTENTAdapter();
			}
			@Override
			public Adapter caseCSR7CONTENT(CSR7CONTENT object) {
				return createCSR7CONTENTAdapter();
			}
			@Override
			public Adapter caseCSR8CONTENT(CSR8CONTENT object) {
				return createCSR8CONTENTAdapter();
			}
			@Override
			public Adapter caseCSR9CONTENT(CSR9CONTENT object) {
				return createCSR9CONTENTAdapter();
			}
			@Override
			public Adapter caseCSRCONTENT(CSRCONTENT object) {
				return createCSRCONTENTAdapter();
			}
			@Override
			public Adapter caseCSS1CONTENT(CSS1CONTENT object) {
				return createCSS1CONTENTAdapter();
			}
			@Override
			public Adapter caseCSS2CONTENT(CSS2CONTENT object) {
				return createCSS2CONTENTAdapter();
			}
			@Override
			public Adapter caseCSS3CONTENT(CSS3CONTENT object) {
				return createCSS3CONTENTAdapter();
			}
			@Override
			public Adapter caseCSSCONTENT(CSSCONTENT object) {
				return createCSSCONTENTAdapter();
			}
			@Override
			public Adapter caseCSU(CSU object) {
				return createCSUAdapter();
			}
			@Override
			public Adapter caseCSU1CONTENT(CSU1CONTENT object) {
				return createCSU1CONTENTAdapter();
			}
			@Override
			public Adapter caseCSU2CONTENT(CSU2CONTENT object) {
				return createCSU2CONTENTAdapter();
			}
			@Override
			public Adapter caseCSU3CONTENT(CSU3CONTENT object) {
				return createCSU3CONTENTAdapter();
			}
			@Override
			public Adapter caseCSU4CONTENT(CSU4CONTENT object) {
				return createCSU4CONTENTAdapter();
			}
			@Override
			public Adapter caseCSU5CONTENT(CSU5CONTENT object) {
				return createCSU5CONTENTAdapter();
			}
			@Override
			public Adapter caseCSU6CONTENT(CSU6CONTENT object) {
				return createCSU6CONTENTAdapter();
			}
			@Override
			public Adapter caseCSU7CONTENT(CSU7CONTENT object) {
				return createCSU7CONTENTAdapter();
			}
			@Override
			public Adapter caseCTD1CONTENT(CTD1CONTENT object) {
				return createCTD1CONTENTAdapter();
			}
			@Override
			public Adapter caseCTD2CONTENT(CTD2CONTENT object) {
				return createCTD2CONTENTAdapter();
			}
			@Override
			public Adapter caseCTD3CONTENT(CTD3CONTENT object) {
				return createCTD3CONTENTAdapter();
			}
			@Override
			public Adapter caseCTD4CONTENT(CTD4CONTENT object) {
				return createCTD4CONTENTAdapter();
			}
			@Override
			public Adapter caseCTD5CONTENT(CTD5CONTENT object) {
				return createCTD5CONTENTAdapter();
			}
			@Override
			public Adapter caseCTD6CONTENT(CTD6CONTENT object) {
				return createCTD6CONTENTAdapter();
			}
			@Override
			public Adapter caseCTD7CONTENT(CTD7CONTENT object) {
				return createCTD7CONTENTAdapter();
			}
			@Override
			public Adapter caseCTDCONTENT(CTDCONTENT object) {
				return createCTDCONTENTAdapter();
			}
			@Override
			public Adapter caseCTI1CONTENT(CTI1CONTENT object) {
				return createCTI1CONTENTAdapter();
			}
			@Override
			public Adapter caseCTI2CONTENT(CTI2CONTENT object) {
				return createCTI2CONTENTAdapter();
			}
			@Override
			public Adapter caseCTI3CONTENT(CTI3CONTENT object) {
				return createCTI3CONTENTAdapter();
			}
			@Override
			public Adapter caseCTICONTENT(CTICONTENT object) {
				return createCTICONTENTAdapter();
			}
			@Override
			public Adapter caseCWE(CWE object) {
				return createCWEAdapter();
			}
			@Override
			public Adapter caseCWE1CONTENT(CWE1CONTENT object) {
				return createCWE1CONTENTAdapter();
			}
			@Override
			public Adapter caseCWE2CONTENT(CWE2CONTENT object) {
				return createCWE2CONTENTAdapter();
			}
			@Override
			public Adapter caseCWE3CONTENT(CWE3CONTENT object) {
				return createCWE3CONTENTAdapter();
			}
			@Override
			public Adapter caseCWE4CONTENT(CWE4CONTENT object) {
				return createCWE4CONTENTAdapter();
			}
			@Override
			public Adapter caseCWE5CONTENT(CWE5CONTENT object) {
				return createCWE5CONTENTAdapter();
			}
			@Override
			public Adapter caseCWE6CONTENT(CWE6CONTENT object) {
				return createCWE6CONTENTAdapter();
			}
			@Override
			public Adapter caseCWE7CONTENT(CWE7CONTENT object) {
				return createCWE7CONTENTAdapter();
			}
			@Override
			public Adapter caseCWE8CONTENT(CWE8CONTENT object) {
				return createCWE8CONTENTAdapter();
			}
			@Override
			public Adapter caseCWE9CONTENT(CWE9CONTENT object) {
				return createCWE9CONTENTAdapter();
			}
			@Override
			public Adapter caseCX(CX object) {
				return createCXAdapter();
			}
			@Override
			public Adapter caseCX10CONTENT(CX10CONTENT object) {
				return createCX10CONTENTAdapter();
			}
			@Override
			public Adapter caseCX1CONTENT(CX1CONTENT object) {
				return createCX1CONTENTAdapter();
			}
			@Override
			public Adapter caseCX2CONTENT(CX2CONTENT object) {
				return createCX2CONTENTAdapter();
			}
			@Override
			public Adapter caseCX3CONTENT(CX3CONTENT object) {
				return createCX3CONTENTAdapter();
			}
			@Override
			public Adapter caseCX4CONTENT(CX4CONTENT object) {
				return createCX4CONTENTAdapter();
			}
			@Override
			public Adapter caseCX5CONTENT(CX5CONTENT object) {
				return createCX5CONTENTAdapter();
			}
			@Override
			public Adapter caseCX6CONTENT(CX6CONTENT object) {
				return createCX6CONTENTAdapter();
			}
			@Override
			public Adapter caseCX7CONTENT(CX7CONTENT object) {
				return createCX7CONTENTAdapter();
			}
			@Override
			public Adapter caseCX8CONTENT(CX8CONTENT object) {
				return createCX8CONTENTAdapter();
			}
			@Override
			public Adapter caseCX9CONTENT(CX9CONTENT object) {
				return createCX9CONTENTAdapter();
			}
			@Override
			public Adapter caseDB11CONTENT(DB11CONTENT object) {
				return createDB11CONTENTAdapter();
			}
			@Override
			public Adapter caseDB12CONTENT(DB12CONTENT object) {
				return createDB12CONTENTAdapter();
			}
			@Override
			public Adapter caseDB13CONTENT(DB13CONTENT object) {
				return createDB13CONTENTAdapter();
			}
			@Override
			public Adapter caseDB14CONTENT(DB14CONTENT object) {
				return createDB14CONTENTAdapter();
			}
			@Override
			public Adapter caseDB15CONTENT(DB15CONTENT object) {
				return createDB15CONTENTAdapter();
			}
			@Override
			public Adapter caseDB16CONTENT(DB16CONTENT object) {
				return createDB16CONTENTAdapter();
			}
			@Override
			public Adapter caseDB17CONTENT(DB17CONTENT object) {
				return createDB17CONTENTAdapter();
			}
			@Override
			public Adapter caseDB18CONTENT(DB18CONTENT object) {
				return createDB18CONTENTAdapter();
			}
			@Override
			public Adapter caseDB1CONTENT(DB1CONTENT object) {
				return createDB1CONTENTAdapter();
			}
			@Override
			public Adapter caseDDI(DDI object) {
				return createDDIAdapter();
			}
			@Override
			public Adapter caseDDI1CONTENT(DDI1CONTENT object) {
				return createDDI1CONTENTAdapter();
			}
			@Override
			public Adapter caseDDI2CONTENT(DDI2CONTENT object) {
				return createDDI2CONTENTAdapter();
			}
			@Override
			public Adapter caseDDI3CONTENT(DDI3CONTENT object) {
				return createDDI3CONTENTAdapter();
			}
			@Override
			public Adapter caseDG110CONTENT(DG110CONTENT object) {
				return createDG110CONTENTAdapter();
			}
			@Override
			public Adapter caseDG111CONTENT(DG111CONTENT object) {
				return createDG111CONTENTAdapter();
			}
			@Override
			public Adapter caseDG112CONTENT(DG112CONTENT object) {
				return createDG112CONTENTAdapter();
			}
			@Override
			public Adapter caseDG113CONTENT(DG113CONTENT object) {
				return createDG113CONTENTAdapter();
			}
			@Override
			public Adapter caseDG114CONTENT(DG114CONTENT object) {
				return createDG114CONTENTAdapter();
			}
			@Override
			public Adapter caseDG115CONTENT(DG115CONTENT object) {
				return createDG115CONTENTAdapter();
			}
			@Override
			public Adapter caseDG116CONTENT(DG116CONTENT object) {
				return createDG116CONTENTAdapter();
			}
			@Override
			public Adapter caseDG117CONTENT(DG117CONTENT object) {
				return createDG117CONTENTAdapter();
			}
			@Override
			public Adapter caseDG118CONTENT(DG118CONTENT object) {
				return createDG118CONTENTAdapter();
			}
			@Override
			public Adapter caseDG119CONTENT(DG119CONTENT object) {
				return createDG119CONTENTAdapter();
			}
			@Override
			public Adapter caseDG11CONTENT(DG11CONTENT object) {
				return createDG11CONTENTAdapter();
			}
			@Override
			public Adapter caseDG120CONTENT(DG120CONTENT object) {
				return createDG120CONTENTAdapter();
			}
			@Override
			public Adapter caseDG121CONTENT(DG121CONTENT object) {
				return createDG121CONTENTAdapter();
			}
			@Override
			public Adapter caseDG12CONTENT(DG12CONTENT object) {
				return createDG12CONTENTAdapter();
			}
			@Override
			public Adapter caseDG13CONTENT(DG13CONTENT object) {
				return createDG13CONTENTAdapter();
			}
			@Override
			public Adapter caseDG14CONTENT(DG14CONTENT object) {
				return createDG14CONTENTAdapter();
			}
			@Override
			public Adapter caseDG15CONTENT(DG15CONTENT object) {
				return createDG15CONTENTAdapter();
			}
			@Override
			public Adapter caseDG16CONTENT(DG16CONTENT object) {
				return createDG16CONTENTAdapter();
			}
			@Override
			public Adapter caseDG17CONTENT(DG17CONTENT object) {
				return createDG17CONTENTAdapter();
			}
			@Override
			public Adapter caseDG18CONTENT(DG18CONTENT object) {
				return createDG18CONTENTAdapter();
			}
			@Override
			public Adapter caseDG19CONTENT(DG19CONTENT object) {
				return createDG19CONTENTAdapter();
			}
			@Override
			public Adapter caseDG1CONTENT(DG1CONTENT object) {
				return createDG1CONTENTAdapter();
			}
			@Override
			public Adapter caseDIN(DIN object) {
				return createDINAdapter();
			}
			@Override
			public Adapter caseDIN1CONTENT(DIN1CONTENT object) {
				return createDIN1CONTENTAdapter();
			}
			@Override
			public Adapter caseDIN2CONTENT(DIN2CONTENT object) {
				return createDIN2CONTENTAdapter();
			}
			@Override
			public Adapter caseDLD(DLD object) {
				return createDLDAdapter();
			}
			@Override
			public Adapter caseDLD1CONTENT(DLD1CONTENT object) {
				return createDLD1CONTENTAdapter();
			}
			@Override
			public Adapter caseDLD2CONTENT(DLD2CONTENT object) {
				return createDLD2CONTENTAdapter();
			}
			@Override
			public Adapter caseDLN(DLN object) {
				return createDLNAdapter();
			}
			@Override
			public Adapter caseDLN1CONTENT(DLN1CONTENT object) {
				return createDLN1CONTENTAdapter();
			}
			@Override
			public Adapter caseDLN2CONTENT(DLN2CONTENT object) {
				return createDLN2CONTENTAdapter();
			}
			@Override
			public Adapter caseDLN3CONTENT(DLN3CONTENT object) {
				return createDLN3CONTENTAdapter();
			}
			@Override
			public Adapter caseDLT(DLT object) {
				return createDLTAdapter();
			}
			@Override
			public Adapter caseDLT1CONTENT(DLT1CONTENT object) {
				return createDLT1CONTENTAdapter();
			}
			@Override
			public Adapter caseDLT2CONTENT(DLT2CONTENT object) {
				return createDLT2CONTENTAdapter();
			}
			@Override
			public Adapter caseDLT3CONTENT(DLT3CONTENT object) {
				return createDLT3CONTENTAdapter();
			}
			@Override
			public Adapter caseDLT4CONTENT(DLT4CONTENT object) {
				return createDLT4CONTENTAdapter();
			}
			@Override
			public Adapter caseDocumentRoot(DocumentRoot object) {
				return createDocumentRootAdapter();
			}
			@Override
			public Adapter caseDR(DR object) {
				return createDRAdapter();
			}
			@Override
			public Adapter caseDR1CONTENT(DR1CONTENT object) {
				return createDR1CONTENTAdapter();
			}
			@Override
			public Adapter caseDR2CONTENT(DR2CONTENT object) {
				return createDR2CONTENTAdapter();
			}
			@Override
			public Adapter caseDRG10CONTENT(DRG10CONTENT object) {
				return createDRG10CONTENTAdapter();
			}
			@Override
			public Adapter caseDRG11CONTENT(DRG11CONTENT object) {
				return createDRG11CONTENTAdapter();
			}
			@Override
			public Adapter caseDRG1CONTENT(DRG1CONTENT object) {
				return createDRG1CONTENTAdapter();
			}
			@Override
			public Adapter caseDRG2CONTENT(DRG2CONTENT object) {
				return createDRG2CONTENTAdapter();
			}
			@Override
			public Adapter caseDRG3CONTENT(DRG3CONTENT object) {
				return createDRG3CONTENTAdapter();
			}
			@Override
			public Adapter caseDRG4CONTENT(DRG4CONTENT object) {
				return createDRG4CONTENTAdapter();
			}
			@Override
			public Adapter caseDRG5CONTENT(DRG5CONTENT object) {
				return createDRG5CONTENTAdapter();
			}
			@Override
			public Adapter caseDRG6CONTENT(DRG6CONTENT object) {
				return createDRG6CONTENTAdapter();
			}
			@Override
			public Adapter caseDRG7CONTENT(DRG7CONTENT object) {
				return createDRG7CONTENTAdapter();
			}
			@Override
			public Adapter caseDRG8CONTENT(DRG8CONTENT object) {
				return createDRG8CONTENTAdapter();
			}
			@Override
			public Adapter caseDRG9CONTENT(DRG9CONTENT object) {
				return createDRG9CONTENTAdapter();
			}
			@Override
			public Adapter caseDRGCONTENT(DRGCONTENT object) {
				return createDRGCONTENTAdapter();
			}
			@Override
			public Adapter caseDSC1CONTENT(DSC1CONTENT object) {
				return createDSC1CONTENTAdapter();
			}
			@Override
			public Adapter caseDSC2CONTENT(DSC2CONTENT object) {
				return createDSC2CONTENTAdapter();
			}
			@Override
			public Adapter caseDSCCONTENT(DSCCONTENT object) {
				return createDSCCONTENTAdapter();
			}
			@Override
			public Adapter caseDSP1CONTENT(DSP1CONTENT object) {
				return createDSP1CONTENTAdapter();
			}
			@Override
			public Adapter caseDSP2CONTENT(DSP2CONTENT object) {
				return createDSP2CONTENTAdapter();
			}
			@Override
			public Adapter caseDSP3CONTENT(DSP3CONTENT object) {
				return createDSP3CONTENTAdapter();
			}
			@Override
			public Adapter caseDSP4CONTENT(DSP4CONTENT object) {
				return createDSP4CONTENTAdapter();
			}
			@Override
			public Adapter caseDSP5CONTENT(DSP5CONTENT object) {
				return createDSP5CONTENTAdapter();
			}
			@Override
			public Adapter caseDSPCONTENT(DSPCONTENT object) {
				return createDSPCONTENTAdapter();
			}
			@Override
			public Adapter caseDTN(DTN object) {
				return createDTNAdapter();
			}
			@Override
			public Adapter caseDTN1CONTENT(DTN1CONTENT object) {
				return createDTN1CONTENTAdapter();
			}
			@Override
			public Adapter caseDTN2CONTENT(DTN2CONTENT object) {
				return createDTN2CONTENTAdapter();
			}
			@Override
			public Adapter caseECD1CONTENT(ECD1CONTENT object) {
				return createECD1CONTENTAdapter();
			}
			@Override
			public Adapter caseECD2CONTENT(ECD2CONTENT object) {
				return createECD2CONTENTAdapter();
			}
			@Override
			public Adapter caseECD3CONTENT(ECD3CONTENT object) {
				return createECD3CONTENTAdapter();
			}
			@Override
			public Adapter caseECD4CONTENT(ECD4CONTENT object) {
				return createECD4CONTENTAdapter();
			}
			@Override
			public Adapter caseECD5CONTENT(ECD5CONTENT object) {
				return createECD5CONTENTAdapter();
			}
			@Override
			public Adapter caseECDCONTENT(ECDCONTENT object) {
				return createECDCONTENTAdapter();
			}
			@Override
			public Adapter caseECR1CONTENT(ECR1CONTENT object) {
				return createECR1CONTENTAdapter();
			}
			@Override
			public Adapter caseECR2CONTENT(ECR2CONTENT object) {
				return createECR2CONTENTAdapter();
			}
			@Override
			public Adapter caseECR3CONTENT(ECR3CONTENT object) {
				return createECR3CONTENTAdapter();
			}
			@Override
			public Adapter caseECRCONTENT(ECRCONTENT object) {
				return createECRCONTENTAdapter();
			}
			@Override
			public Adapter caseED(ED object) {
				return createEDAdapter();
			}
			@Override
			public Adapter caseED1CONTENT(ED1CONTENT object) {
				return createED1CONTENTAdapter();
			}
			@Override
			public Adapter caseED2CONTENT(ED2CONTENT object) {
				return createED2CONTENTAdapter();
			}
			@Override
			public Adapter caseED3CONTENT(ED3CONTENT object) {
				return createED3CONTENTAdapter();
			}
			@Override
			public Adapter caseED4CONTENT(ED4CONTENT object) {
				return createED4CONTENTAdapter();
			}
			@Override
			public Adapter caseED5CONTENT(ED5CONTENT object) {
				return createED5CONTENTAdapter();
			}
			@Override
			public Adapter caseEDU1CONTENT(EDU1CONTENT object) {
				return createEDU1CONTENTAdapter();
			}
			@Override
			public Adapter caseEDU2CONTENT(EDU2CONTENT object) {
				return createEDU2CONTENTAdapter();
			}
			@Override
			public Adapter caseEDU3CONTENT(EDU3CONTENT object) {
				return createEDU3CONTENTAdapter();
			}
			@Override
			public Adapter caseEDU4CONTENT(EDU4CONTENT object) {
				return createEDU4CONTENTAdapter();
			}
			@Override
			public Adapter caseEDU5CONTENT(EDU5CONTENT object) {
				return createEDU5CONTENTAdapter();
			}
			@Override
			public Adapter caseEDU6CONTENT(EDU6CONTENT object) {
				return createEDU6CONTENTAdapter();
			}
			@Override
			public Adapter caseEDU7CONTENT(EDU7CONTENT object) {
				return createEDU7CONTENTAdapter();
			}
			@Override
			public Adapter caseEDU8CONTENT(EDU8CONTENT object) {
				return createEDU8CONTENTAdapter();
			}
			@Override
			public Adapter caseEDU9CONTENT(EDU9CONTENT object) {
				return createEDU9CONTENTAdapter();
			}
			@Override
			public Adapter caseEDUCONTENT(EDUCONTENT object) {
				return createEDUCONTENTAdapter();
			}
			@Override
			public Adapter caseEI(EI object) {
				return createEIAdapter();
			}
			@Override
			public Adapter caseEI1CONTENT(EI1CONTENT object) {
				return createEI1CONTENTAdapter();
			}
			@Override
			public Adapter caseEI2CONTENT(EI2CONTENT object) {
				return createEI2CONTENTAdapter();
			}
			@Override
			public Adapter caseEI3CONTENT(EI3CONTENT object) {
				return createEI3CONTENTAdapter();
			}
			@Override
			public Adapter caseEI4CONTENT(EI4CONTENT object) {
				return createEI4CONTENTAdapter();
			}
			@Override
			public Adapter caseEIP(EIP object) {
				return createEIPAdapter();
			}
			@Override
			public Adapter caseEIP1CONTENT(EIP1CONTENT object) {
				return createEIP1CONTENTAdapter();
			}
			@Override
			public Adapter caseEIP2CONTENT(EIP2CONTENT object) {
				return createEIP2CONTENTAdapter();
			}
			@Override
			public Adapter caseELD(ELD object) {
				return createELDAdapter();
			}
			@Override
			public Adapter caseELD1CONTENT(ELD1CONTENT object) {
				return createELD1CONTENTAdapter();
			}
			@Override
			public Adapter caseELD2CONTENT(ELD2CONTENT object) {
				return createELD2CONTENTAdapter();
			}
			@Override
			public Adapter caseELD3CONTENT(ELD3CONTENT object) {
				return createELD3CONTENTAdapter();
			}
			@Override
			public Adapter caseELD4CONTENT(ELD4CONTENT object) {
				return createELD4CONTENTAdapter();
			}
			@Override
			public Adapter caseEQL1CONTENT(EQL1CONTENT object) {
				return createEQL1CONTENTAdapter();
			}
			@Override
			public Adapter caseEQL2CONTENT(EQL2CONTENT object) {
				return createEQL2CONTENTAdapter();
			}
			@Override
			public Adapter caseEQL3CONTENT(EQL3CONTENT object) {
				return createEQL3CONTENTAdapter();
			}
			@Override
			public Adapter caseEQL4CONTENT(EQL4CONTENT object) {
				return createEQL4CONTENTAdapter();
			}
			@Override
			public Adapter caseEQLCONTENT(EQLCONTENT object) {
				return createEQLCONTENTAdapter();
			}
			@Override
			public Adapter caseEQP1CONTENT(EQP1CONTENT object) {
				return createEQP1CONTENTAdapter();
			}
			@Override
			public Adapter caseEQP2CONTENT(EQP2CONTENT object) {
				return createEQP2CONTENTAdapter();
			}
			@Override
			public Adapter caseEQP3CONTENT(EQP3CONTENT object) {
				return createEQP3CONTENTAdapter();
			}
			@Override
			public Adapter caseEQP4CONTENT(EQP4CONTENT object) {
				return createEQP4CONTENTAdapter();
			}
			@Override
			public Adapter caseEQP5CONTENT(EQP5CONTENT object) {
				return createEQP5CONTENTAdapter();
			}
			@Override
			public Adapter caseEQPCONTENT(EQPCONTENT object) {
				return createEQPCONTENTAdapter();
			}
			@Override
			public Adapter caseEQU1CONTENT(EQU1CONTENT object) {
				return createEQU1CONTENTAdapter();
			}
			@Override
			public Adapter caseEQU2CONTENT(EQU2CONTENT object) {
				return createEQU2CONTENTAdapter();
			}
			@Override
			public Adapter caseEQU3CONTENT(EQU3CONTENT object) {
				return createEQU3CONTENTAdapter();
			}
			@Override
			public Adapter caseEQU4CONTENT(EQU4CONTENT object) {
				return createEQU4CONTENTAdapter();
			}
			@Override
			public Adapter caseEQU5CONTENT(EQU5CONTENT object) {
				return createEQU5CONTENTAdapter();
			}
			@Override
			public Adapter caseEQUCONTENT(EQUCONTENT object) {
				return createEQUCONTENTAdapter();
			}
			@Override
			public Adapter caseERL(ERL object) {
				return createERLAdapter();
			}
			@Override
			public Adapter caseERL1CONTENT(ERL1CONTENT object) {
				return createERL1CONTENTAdapter();
			}
			@Override
			public Adapter caseERL2CONTENT(ERL2CONTENT object) {
				return createERL2CONTENTAdapter();
			}
			@Override
			public Adapter caseERL3CONTENT(ERL3CONTENT object) {
				return createERL3CONTENTAdapter();
			}
			@Override
			public Adapter caseERL4CONTENT(ERL4CONTENT object) {
				return createERL4CONTENTAdapter();
			}
			@Override
			public Adapter caseERL5CONTENT(ERL5CONTENT object) {
				return createERL5CONTENTAdapter();
			}
			@Override
			public Adapter caseERL6CONTENT(ERL6CONTENT object) {
				return createERL6CONTENTAdapter();
			}
			@Override
			public Adapter caseERQ1CONTENT(ERQ1CONTENT object) {
				return createERQ1CONTENTAdapter();
			}
			@Override
			public Adapter caseERQ2CONTENT(ERQ2CONTENT object) {
				return createERQ2CONTENTAdapter();
			}
			@Override
			public Adapter caseERQ3CONTENT(ERQ3CONTENT object) {
				return createERQ3CONTENTAdapter();
			}
			@Override
			public Adapter caseERQCONTENT(ERQCONTENT object) {
				return createERQCONTENTAdapter();
			}
			@Override
			public Adapter caseERR10CONTENT(ERR10CONTENT object) {
				return createERR10CONTENTAdapter();
			}
			@Override
			public Adapter caseERR11CONTENT(ERR11CONTENT object) {
				return createERR11CONTENTAdapter();
			}
			@Override
			public Adapter caseERR12CONTENT(ERR12CONTENT object) {
				return createERR12CONTENTAdapter();
			}
			@Override
			public Adapter caseERR1CONTENT(ERR1CONTENT object) {
				return createERR1CONTENTAdapter();
			}
			@Override
			public Adapter caseERR2CONTENT(ERR2CONTENT object) {
				return createERR2CONTENTAdapter();
			}
			@Override
			public Adapter caseERR3CONTENT(ERR3CONTENT object) {
				return createERR3CONTENTAdapter();
			}
			@Override
			public Adapter caseERR4CONTENT(ERR4CONTENT object) {
				return createERR4CONTENTAdapter();
			}
			@Override
			public Adapter caseERR5CONTENT(ERR5CONTENT object) {
				return createERR5CONTENTAdapter();
			}
			@Override
			public Adapter caseERR6CONTENT(ERR6CONTENT object) {
				return createERR6CONTENTAdapter();
			}
			@Override
			public Adapter caseERR7CONTENT(ERR7CONTENT object) {
				return createERR7CONTENTAdapter();
			}
			@Override
			public Adapter caseERR8CONTENT(ERR8CONTENT object) {
				return createERR8CONTENTAdapter();
			}
			@Override
			public Adapter caseERR9CONTENT(ERR9CONTENT object) {
				return createERR9CONTENTAdapter();
			}
			@Override
			public Adapter caseERRCONTENT(ERRCONTENT object) {
				return createERRCONTENTAdapter();
			}
			@Override
			public Adapter caseEscapeType(EscapeType object) {
				return createEscapeTypeAdapter();
			}
			@Override
			public Adapter caseEVN1CONTENT(EVN1CONTENT object) {
				return createEVN1CONTENTAdapter();
			}
			@Override
			public Adapter caseEVN2CONTENT(EVN2CONTENT object) {
				return createEVN2CONTENTAdapter();
			}
			@Override
			public Adapter caseEVN3CONTENT(EVN3CONTENT object) {
				return createEVN3CONTENTAdapter();
			}
			@Override
			public Adapter caseEVN4CONTENT(EVN4CONTENT object) {
				return createEVN4CONTENTAdapter();
			}
			@Override
			public Adapter caseEVN5CONTENT(EVN5CONTENT object) {
				return createEVN5CONTENTAdapter();
			}
			@Override
			public Adapter caseEVN6CONTENT(EVN6CONTENT object) {
				return createEVN6CONTENTAdapter();
			}
			@Override
			public Adapter caseEVN7CONTENT(EVN7CONTENT object) {
				return createEVN7CONTENTAdapter();
			}
			@Override
			public Adapter caseEVNCONTENT(EVNCONTENT object) {
				return createEVNCONTENTAdapter();
			}
			@Override
			public Adapter caseFAC10CONTENT(FAC10CONTENT object) {
				return createFAC10CONTENTAdapter();
			}
			@Override
			public Adapter caseFAC11CONTENT(FAC11CONTENT object) {
				return createFAC11CONTENTAdapter();
			}
			@Override
			public Adapter caseFAC12CONTENT(FAC12CONTENT object) {
				return createFAC12CONTENTAdapter();
			}
			@Override
			public Adapter caseFAC1CONTENT(FAC1CONTENT object) {
				return createFAC1CONTENTAdapter();
			}
			@Override
			public Adapter caseFAC2CONTENT(FAC2CONTENT object) {
				return createFAC2CONTENTAdapter();
			}
			@Override
			public Adapter caseFAC3CONTENT(FAC3CONTENT object) {
				return createFAC3CONTENTAdapter();
			}
			@Override
			public Adapter caseFAC4CONTENT(FAC4CONTENT object) {
				return createFAC4CONTENTAdapter();
			}
			@Override
			public Adapter caseFAC5CONTENT(FAC5CONTENT object) {
				return createFAC5CONTENTAdapter();
			}
			@Override
			public Adapter caseFAC6CONTENT(FAC6CONTENT object) {
				return createFAC6CONTENTAdapter();
			}
			@Override
			public Adapter caseFAC7CONTENT(FAC7CONTENT object) {
				return createFAC7CONTENTAdapter();
			}
			@Override
			public Adapter caseFAC8CONTENT(FAC8CONTENT object) {
				return createFAC8CONTENTAdapter();
			}
			@Override
			public Adapter caseFAC9CONTENT(FAC9CONTENT object) {
				return createFAC9CONTENTAdapter();
			}
			@Override
			public Adapter caseFACCONTENT(FACCONTENT object) {
				return createFACCONTENTAdapter();
			}
			@Override
			public Adapter caseFC(FC object) {
				return createFCAdapter();
			}
			@Override
			public Adapter caseFC1CONTENT(FC1CONTENT object) {
				return createFC1CONTENTAdapter();
			}
			@Override
			public Adapter caseFC2CONTENT(FC2CONTENT object) {
				return createFC2CONTENTAdapter();
			}
			@Override
			public Adapter caseFHS10CONTENT(FHS10CONTENT object) {
				return createFHS10CONTENTAdapter();
			}
			@Override
			public Adapter caseFHS11CONTENT(FHS11CONTENT object) {
				return createFHS11CONTENTAdapter();
			}
			@Override
			public Adapter caseFHS12CONTENT(FHS12CONTENT object) {
				return createFHS12CONTENTAdapter();
			}
			@Override
			public Adapter caseFHS1CONTENT(FHS1CONTENT object) {
				return createFHS1CONTENTAdapter();
			}
			@Override
			public Adapter caseFHS2CONTENT(FHS2CONTENT object) {
				return createFHS2CONTENTAdapter();
			}
			@Override
			public Adapter caseFHS3CONTENT(FHS3CONTENT object) {
				return createFHS3CONTENTAdapter();
			}
			@Override
			public Adapter caseFHS4CONTENT(FHS4CONTENT object) {
				return createFHS4CONTENTAdapter();
			}
			@Override
			public Adapter caseFHS5CONTENT(FHS5CONTENT object) {
				return createFHS5CONTENTAdapter();
			}
			@Override
			public Adapter caseFHS6CONTENT(FHS6CONTENT object) {
				return createFHS6CONTENTAdapter();
			}
			@Override
			public Adapter caseFHS7CONTENT(FHS7CONTENT object) {
				return createFHS7CONTENTAdapter();
			}
			@Override
			public Adapter caseFHS8CONTENT(FHS8CONTENT object) {
				return createFHS8CONTENTAdapter();
			}
			@Override
			public Adapter caseFHS9CONTENT(FHS9CONTENT object) {
				return createFHS9CONTENTAdapter();
			}
			@Override
			public Adapter caseFHSCONTENT(FHSCONTENT object) {
				return createFHSCONTENTAdapter();
			}
			@Override
			public Adapter caseFN(FN object) {
				return createFNAdapter();
			}
			@Override
			public Adapter caseFN1CONTENT(FN1CONTENT object) {
				return createFN1CONTENTAdapter();
			}
			@Override
			public Adapter caseFN2CONTENT(FN2CONTENT object) {
				return createFN2CONTENTAdapter();
			}
			@Override
			public Adapter caseFN3CONTENT(FN3CONTENT object) {
				return createFN3CONTENTAdapter();
			}
			@Override
			public Adapter caseFN4CONTENT(FN4CONTENT object) {
				return createFN4CONTENTAdapter();
			}
			@Override
			public Adapter caseFN5CONTENT(FN5CONTENT object) {
				return createFN5CONTENTAdapter();
			}
			@Override
			public Adapter caseFT(FT object) {
				return createFTAdapter();
			}
			@Override
			public Adapter caseFT110CONTENT(FT110CONTENT object) {
				return createFT110CONTENTAdapter();
			}
			@Override
			public Adapter caseFT111CONTENT(FT111CONTENT object) {
				return createFT111CONTENTAdapter();
			}
			@Override
			public Adapter caseFT112CONTENT(FT112CONTENT object) {
				return createFT112CONTENTAdapter();
			}
			@Override
			public Adapter caseFT113CONTENT(FT113CONTENT object) {
				return createFT113CONTENTAdapter();
			}
			@Override
			public Adapter caseFT114CONTENT(FT114CONTENT object) {
				return createFT114CONTENTAdapter();
			}
			@Override
			public Adapter caseFT115CONTENT(FT115CONTENT object) {
				return createFT115CONTENTAdapter();
			}
			@Override
			public Adapter caseFT116CONTENT(FT116CONTENT object) {
				return createFT116CONTENTAdapter();
			}
			@Override
			public Adapter caseFT117CONTENT(FT117CONTENT object) {
				return createFT117CONTENTAdapter();
			}
			@Override
			public Adapter caseFT118CONTENT(FT118CONTENT object) {
				return createFT118CONTENTAdapter();
			}
			@Override
			public Adapter caseFT119CONTENT(FT119CONTENT object) {
				return createFT119CONTENTAdapter();
			}
			@Override
			public Adapter caseFT11CONTENT(FT11CONTENT object) {
				return createFT11CONTENTAdapter();
			}
			@Override
			public Adapter caseFT120CONTENT(FT120CONTENT object) {
				return createFT120CONTENTAdapter();
			}
			@Override
			public Adapter caseFT121CONTENT(FT121CONTENT object) {
				return createFT121CONTENTAdapter();
			}
			@Override
			public Adapter caseFT122CONTENT(FT122CONTENT object) {
				return createFT122CONTENTAdapter();
			}
			@Override
			public Adapter caseFT123CONTENT(FT123CONTENT object) {
				return createFT123CONTENTAdapter();
			}
			@Override
			public Adapter caseFT124CONTENT(FT124CONTENT object) {
				return createFT124CONTENTAdapter();
			}
			@Override
			public Adapter caseFT125CONTENT(FT125CONTENT object) {
				return createFT125CONTENTAdapter();
			}
			@Override
			public Adapter caseFT126CONTENT(FT126CONTENT object) {
				return createFT126CONTENTAdapter();
			}
			@Override
			public Adapter caseFT127CONTENT(FT127CONTENT object) {
				return createFT127CONTENTAdapter();
			}
			@Override
			public Adapter caseFT128CONTENT(FT128CONTENT object) {
				return createFT128CONTENTAdapter();
			}
			@Override
			public Adapter caseFT129CONTENT(FT129CONTENT object) {
				return createFT129CONTENTAdapter();
			}
			@Override
			public Adapter caseFT12CONTENT(FT12CONTENT object) {
				return createFT12CONTENTAdapter();
			}
			@Override
			public Adapter caseFT130CONTENT(FT130CONTENT object) {
				return createFT130CONTENTAdapter();
			}
			@Override
			public Adapter caseFT131CONTENT(FT131CONTENT object) {
				return createFT131CONTENTAdapter();
			}
			@Override
			public Adapter caseFT13CONTENT(FT13CONTENT object) {
				return createFT13CONTENTAdapter();
			}
			@Override
			public Adapter caseFT14CONTENT(FT14CONTENT object) {
				return createFT14CONTENTAdapter();
			}
			@Override
			public Adapter caseFT15CONTENT(FT15CONTENT object) {
				return createFT15CONTENTAdapter();
			}
			@Override
			public Adapter caseFT16CONTENT(FT16CONTENT object) {
				return createFT16CONTENTAdapter();
			}
			@Override
			public Adapter caseFT17CONTENT(FT17CONTENT object) {
				return createFT17CONTENTAdapter();
			}
			@Override
			public Adapter caseFT18CONTENT(FT18CONTENT object) {
				return createFT18CONTENTAdapter();
			}
			@Override
			public Adapter caseFT19CONTENT(FT19CONTENT object) {
				return createFT19CONTENTAdapter();
			}
			@Override
			public Adapter caseFT1CONTENT(FT1CONTENT object) {
				return createFT1CONTENTAdapter();
			}
			@Override
			public Adapter caseFTS1CONTENT(FTS1CONTENT object) {
				return createFTS1CONTENTAdapter();
			}
			@Override
			public Adapter caseFTS2CONTENT(FTS2CONTENT object) {
				return createFTS2CONTENTAdapter();
			}
			@Override
			public Adapter caseFTSCONTENT(FTSCONTENT object) {
				return createFTSCONTENTAdapter();
			}
			@Override
			public Adapter caseGOL10CONTENT(GOL10CONTENT object) {
				return createGOL10CONTENTAdapter();
			}
			@Override
			public Adapter caseGOL11CONTENT(GOL11CONTENT object) {
				return createGOL11CONTENTAdapter();
			}
			@Override
			public Adapter caseGOL12CONTENT(GOL12CONTENT object) {
				return createGOL12CONTENTAdapter();
			}
			@Override
			public Adapter caseGOL13CONTENT(GOL13CONTENT object) {
				return createGOL13CONTENTAdapter();
			}
			@Override
			public Adapter caseGOL14CONTENT(GOL14CONTENT object) {
				return createGOL14CONTENTAdapter();
			}
			@Override
			public Adapter caseGOL15CONTENT(GOL15CONTENT object) {
				return createGOL15CONTENTAdapter();
			}
			@Override
			public Adapter caseGOL16CONTENT(GOL16CONTENT object) {
				return createGOL16CONTENTAdapter();
			}
			@Override
			public Adapter caseGOL17CONTENT(GOL17CONTENT object) {
				return createGOL17CONTENTAdapter();
			}
			@Override
			public Adapter caseGOL18CONTENT(GOL18CONTENT object) {
				return createGOL18CONTENTAdapter();
			}
			@Override
			public Adapter caseGOL19CONTENT(GOL19CONTENT object) {
				return createGOL19CONTENTAdapter();
			}
			@Override
			public Adapter caseGOL1CONTENT(GOL1CONTENT object) {
				return createGOL1CONTENTAdapter();
			}
			@Override
			public Adapter caseGOL20CONTENT(GOL20CONTENT object) {
				return createGOL20CONTENTAdapter();
			}
			@Override
			public Adapter caseGOL21CONTENT(GOL21CONTENT object) {
				return createGOL21CONTENTAdapter();
			}
			@Override
			public Adapter caseGOL2CONTENT(GOL2CONTENT object) {
				return createGOL2CONTENTAdapter();
			}
			@Override
			public Adapter caseGOL3CONTENT(GOL3CONTENT object) {
				return createGOL3CONTENTAdapter();
			}
			@Override
			public Adapter caseGOL4CONTENT(GOL4CONTENT object) {
				return createGOL4CONTENTAdapter();
			}
			@Override
			public Adapter caseGOL5CONTENT(GOL5CONTENT object) {
				return createGOL5CONTENTAdapter();
			}
			@Override
			public Adapter caseGOL6CONTENT(GOL6CONTENT object) {
				return createGOL6CONTENTAdapter();
			}
			@Override
			public Adapter caseGOL7CONTENT(GOL7CONTENT object) {
				return createGOL7CONTENTAdapter();
			}
			@Override
			public Adapter caseGOL8CONTENT(GOL8CONTENT object) {
				return createGOL8CONTENTAdapter();
			}
			@Override
			public Adapter caseGOL9CONTENT(GOL9CONTENT object) {
				return createGOL9CONTENTAdapter();
			}
			@Override
			public Adapter caseGOLCONTENT(GOLCONTENT object) {
				return createGOLCONTENTAdapter();
			}
			@Override
			public Adapter caseGP11CONTENT(GP11CONTENT object) {
				return createGP11CONTENTAdapter();
			}
			@Override
			public Adapter caseGP12CONTENT(GP12CONTENT object) {
				return createGP12CONTENTAdapter();
			}
			@Override
			public Adapter caseGP13CONTENT(GP13CONTENT object) {
				return createGP13CONTENTAdapter();
			}
			@Override
			public Adapter caseGP14CONTENT(GP14CONTENT object) {
				return createGP14CONTENTAdapter();
			}
			@Override
			public Adapter caseGP15CONTENT(GP15CONTENT object) {
				return createGP15CONTENTAdapter();
			}
			@Override
			public Adapter caseGP1CONTENT(GP1CONTENT object) {
				return createGP1CONTENTAdapter();
			}
			@Override
			public Adapter caseGP210CONTENT(GP210CONTENT object) {
				return createGP210CONTENTAdapter();
			}
			@Override
			public Adapter caseGP211CONTENT(GP211CONTENT object) {
				return createGP211CONTENTAdapter();
			}
			@Override
			public Adapter caseGP212CONTENT(GP212CONTENT object) {
				return createGP212CONTENTAdapter();
			}
			@Override
			public Adapter caseGP213CONTENT(GP213CONTENT object) {
				return createGP213CONTENTAdapter();
			}
			@Override
			public Adapter caseGP214CONTENT(GP214CONTENT object) {
				return createGP214CONTENTAdapter();
			}
			@Override
			public Adapter caseGP21CONTENT(GP21CONTENT object) {
				return createGP21CONTENTAdapter();
			}
			@Override
			public Adapter caseGP22CONTENT(GP22CONTENT object) {
				return createGP22CONTENTAdapter();
			}
			@Override
			public Adapter caseGP23CONTENT(GP23CONTENT object) {
				return createGP23CONTENTAdapter();
			}
			@Override
			public Adapter caseGP24CONTENT(GP24CONTENT object) {
				return createGP24CONTENTAdapter();
			}
			@Override
			public Adapter caseGP25CONTENT(GP25CONTENT object) {
				return createGP25CONTENTAdapter();
			}
			@Override
			public Adapter caseGP26CONTENT(GP26CONTENT object) {
				return createGP26CONTENTAdapter();
			}
			@Override
			public Adapter caseGP27CONTENT(GP27CONTENT object) {
				return createGP27CONTENTAdapter();
			}
			@Override
			public Adapter caseGP28CONTENT(GP28CONTENT object) {
				return createGP28CONTENTAdapter();
			}
			@Override
			public Adapter caseGP29CONTENT(GP29CONTENT object) {
				return createGP29CONTENTAdapter();
			}
			@Override
			public Adapter caseGP2CONTENT(GP2CONTENT object) {
				return createGP2CONTENTAdapter();
			}
			@Override
			public Adapter caseGT110CONTENT(GT110CONTENT object) {
				return createGT110CONTENTAdapter();
			}
			@Override
			public Adapter caseGT111CONTENT(GT111CONTENT object) {
				return createGT111CONTENTAdapter();
			}
			@Override
			public Adapter caseGT112CONTENT(GT112CONTENT object) {
				return createGT112CONTENTAdapter();
			}
			@Override
			public Adapter caseGT113CONTENT(GT113CONTENT object) {
				return createGT113CONTENTAdapter();
			}
			@Override
			public Adapter caseGT114CONTENT(GT114CONTENT object) {
				return createGT114CONTENTAdapter();
			}
			@Override
			public Adapter caseGT115CONTENT(GT115CONTENT object) {
				return createGT115CONTENTAdapter();
			}
			@Override
			public Adapter caseGT116CONTENT(GT116CONTENT object) {
				return createGT116CONTENTAdapter();
			}
			@Override
			public Adapter caseGT117CONTENT(GT117CONTENT object) {
				return createGT117CONTENTAdapter();
			}
			@Override
			public Adapter caseGT118CONTENT(GT118CONTENT object) {
				return createGT118CONTENTAdapter();
			}
			@Override
			public Adapter caseGT119CONTENT(GT119CONTENT object) {
				return createGT119CONTENTAdapter();
			}
			@Override
			public Adapter caseGT11CONTENT(GT11CONTENT object) {
				return createGT11CONTENTAdapter();
			}
			@Override
			public Adapter caseGT120CONTENT(GT120CONTENT object) {
				return createGT120CONTENTAdapter();
			}
			@Override
			public Adapter caseGT121CONTENT(GT121CONTENT object) {
				return createGT121CONTENTAdapter();
			}
			@Override
			public Adapter caseGT122CONTENT(GT122CONTENT object) {
				return createGT122CONTENTAdapter();
			}
			@Override
			public Adapter caseGT123CONTENT(GT123CONTENT object) {
				return createGT123CONTENTAdapter();
			}
			@Override
			public Adapter caseGT124CONTENT(GT124CONTENT object) {
				return createGT124CONTENTAdapter();
			}
			@Override
			public Adapter caseGT125CONTENT(GT125CONTENT object) {
				return createGT125CONTENTAdapter();
			}
			@Override
			public Adapter caseGT126CONTENT(GT126CONTENT object) {
				return createGT126CONTENTAdapter();
			}
			@Override
			public Adapter caseGT127CONTENT(GT127CONTENT object) {
				return createGT127CONTENTAdapter();
			}
			@Override
			public Adapter caseGT128CONTENT(GT128CONTENT object) {
				return createGT128CONTENTAdapter();
			}
			@Override
			public Adapter caseGT129CONTENT(GT129CONTENT object) {
				return createGT129CONTENTAdapter();
			}
			@Override
			public Adapter caseGT12CONTENT(GT12CONTENT object) {
				return createGT12CONTENTAdapter();
			}
			@Override
			public Adapter caseGT130CONTENT(GT130CONTENT object) {
				return createGT130CONTENTAdapter();
			}
			@Override
			public Adapter caseGT131CONTENT(GT131CONTENT object) {
				return createGT131CONTENTAdapter();
			}
			@Override
			public Adapter caseGT132CONTENT(GT132CONTENT object) {
				return createGT132CONTENTAdapter();
			}
			@Override
			public Adapter caseGT133CONTENT(GT133CONTENT object) {
				return createGT133CONTENTAdapter();
			}
			@Override
			public Adapter caseGT134CONTENT(GT134CONTENT object) {
				return createGT134CONTENTAdapter();
			}
			@Override
			public Adapter caseGT135CONTENT(GT135CONTENT object) {
				return createGT135CONTENTAdapter();
			}
			@Override
			public Adapter caseGT136CONTENT(GT136CONTENT object) {
				return createGT136CONTENTAdapter();
			}
			@Override
			public Adapter caseGT137CONTENT(GT137CONTENT object) {
				return createGT137CONTENTAdapter();
			}
			@Override
			public Adapter caseGT138CONTENT(GT138CONTENT object) {
				return createGT138CONTENTAdapter();
			}
			@Override
			public Adapter caseGT139CONTENT(GT139CONTENT object) {
				return createGT139CONTENTAdapter();
			}
			@Override
			public Adapter caseGT13CONTENT(GT13CONTENT object) {
				return createGT13CONTENTAdapter();
			}
			@Override
			public Adapter caseGT140CONTENT(GT140CONTENT object) {
				return createGT140CONTENTAdapter();
			}
			@Override
			public Adapter caseGT141CONTENT(GT141CONTENT object) {
				return createGT141CONTENTAdapter();
			}
			@Override
			public Adapter caseGT142CONTENT(GT142CONTENT object) {
				return createGT142CONTENTAdapter();
			}
			@Override
			public Adapter caseGT143CONTENT(GT143CONTENT object) {
				return createGT143CONTENTAdapter();
			}
			@Override
			public Adapter caseGT144CONTENT(GT144CONTENT object) {
				return createGT144CONTENTAdapter();
			}
			@Override
			public Adapter caseGT145CONTENT(GT145CONTENT object) {
				return createGT145CONTENTAdapter();
			}
			@Override
			public Adapter caseGT146CONTENT(GT146CONTENT object) {
				return createGT146CONTENTAdapter();
			}
			@Override
			public Adapter caseGT147CONTENT(GT147CONTENT object) {
				return createGT147CONTENTAdapter();
			}
			@Override
			public Adapter caseGT148CONTENT(GT148CONTENT object) {
				return createGT148CONTENTAdapter();
			}
			@Override
			public Adapter caseGT149CONTENT(GT149CONTENT object) {
				return createGT149CONTENTAdapter();
			}
			@Override
			public Adapter caseGT14CONTENT(GT14CONTENT object) {
				return createGT14CONTENTAdapter();
			}
			@Override
			public Adapter caseGT150CONTENT(GT150CONTENT object) {
				return createGT150CONTENTAdapter();
			}
			@Override
			public Adapter caseGT151CONTENT(GT151CONTENT object) {
				return createGT151CONTENTAdapter();
			}
			@Override
			public Adapter caseGT152CONTENT(GT152CONTENT object) {
				return createGT152CONTENTAdapter();
			}
			@Override
			public Adapter caseGT153CONTENT(GT153CONTENT object) {
				return createGT153CONTENTAdapter();
			}
			@Override
			public Adapter caseGT154CONTENT(GT154CONTENT object) {
				return createGT154CONTENTAdapter();
			}
			@Override
			public Adapter caseGT155CONTENT(GT155CONTENT object) {
				return createGT155CONTENTAdapter();
			}
			@Override
			public Adapter caseGT156CONTENT(GT156CONTENT object) {
				return createGT156CONTENTAdapter();
			}
			@Override
			public Adapter caseGT157CONTENT(GT157CONTENT object) {
				return createGT157CONTENTAdapter();
			}
			@Override
			public Adapter caseGT15CONTENT(GT15CONTENT object) {
				return createGT15CONTENTAdapter();
			}
			@Override
			public Adapter caseGT16CONTENT(GT16CONTENT object) {
				return createGT16CONTENTAdapter();
			}
			@Override
			public Adapter caseGT17CONTENT(GT17CONTENT object) {
				return createGT17CONTENTAdapter();
			}
			@Override
			public Adapter caseGT18CONTENT(GT18CONTENT object) {
				return createGT18CONTENTAdapter();
			}
			@Override
			public Adapter caseGT19CONTENT(GT19CONTENT object) {
				return createGT19CONTENTAdapter();
			}
			@Override
			public Adapter caseGT1CONTENT(GT1CONTENT object) {
				return createGT1CONTENTAdapter();
			}
			@Override
			public Adapter caseHD(HD object) {
				return createHDAdapter();
			}
			@Override
			public Adapter caseHD1CONTENT(HD1CONTENT object) {
				return createHD1CONTENTAdapter();
			}
			@Override
			public Adapter caseHD2CONTENT(HD2CONTENT object) {
				return createHD2CONTENTAdapter();
			}
			@Override
			public Adapter caseHD3CONTENT(HD3CONTENT object) {
				return createHD3CONTENTAdapter();
			}
			@Override
			public Adapter caseIAM10CONTENT(IAM10CONTENT object) {
				return createIAM10CONTENTAdapter();
			}
			@Override
			public Adapter caseIAM11CONTENT(IAM11CONTENT object) {
				return createIAM11CONTENTAdapter();
			}
			@Override
			public Adapter caseIAM12CONTENT(IAM12CONTENT object) {
				return createIAM12CONTENTAdapter();
			}
			@Override
			public Adapter caseIAM13CONTENT(IAM13CONTENT object) {
				return createIAM13CONTENTAdapter();
			}
			@Override
			public Adapter caseIAM14CONTENT(IAM14CONTENT object) {
				return createIAM14CONTENTAdapter();
			}
			@Override
			public Adapter caseIAM15CONTENT(IAM15CONTENT object) {
				return createIAM15CONTENTAdapter();
			}
			@Override
			public Adapter caseIAM16CONTENT(IAM16CONTENT object) {
				return createIAM16CONTENTAdapter();
			}
			@Override
			public Adapter caseIAM17CONTENT(IAM17CONTENT object) {
				return createIAM17CONTENTAdapter();
			}
			@Override
			public Adapter caseIAM18CONTENT(IAM18CONTENT object) {
				return createIAM18CONTENTAdapter();
			}
			@Override
			public Adapter caseIAM19CONTENT(IAM19CONTENT object) {
				return createIAM19CONTENTAdapter();
			}
			@Override
			public Adapter caseIAM1CONTENT(IAM1CONTENT object) {
				return createIAM1CONTENTAdapter();
			}
			@Override
			public Adapter caseIAM20CONTENT(IAM20CONTENT object) {
				return createIAM20CONTENTAdapter();
			}
			@Override
			public Adapter caseIAM2CONTENT(IAM2CONTENT object) {
				return createIAM2CONTENTAdapter();
			}
			@Override
			public Adapter caseIAM3CONTENT(IAM3CONTENT object) {
				return createIAM3CONTENTAdapter();
			}
			@Override
			public Adapter caseIAM4CONTENT(IAM4CONTENT object) {
				return createIAM4CONTENTAdapter();
			}
			@Override
			public Adapter caseIAM5CONTENT(IAM5CONTENT object) {
				return createIAM5CONTENTAdapter();
			}
			@Override
			public Adapter caseIAM6CONTENT(IAM6CONTENT object) {
				return createIAM6CONTENTAdapter();
			}
			@Override
			public Adapter caseIAM7CONTENT(IAM7CONTENT object) {
				return createIAM7CONTENTAdapter();
			}
			@Override
			public Adapter caseIAM8CONTENT(IAM8CONTENT object) {
				return createIAM8CONTENTAdapter();
			}
			@Override
			public Adapter caseIAM9CONTENT(IAM9CONTENT object) {
				return createIAM9CONTENTAdapter();
			}
			@Override
			public Adapter caseIAMCONTENT(IAMCONTENT object) {
				return createIAMCONTENTAdapter();
			}
			@Override
			public Adapter caseICD(ICD object) {
				return createICDAdapter();
			}
			@Override
			public Adapter caseICD1CONTENT(ICD1CONTENT object) {
				return createICD1CONTENTAdapter();
			}
			@Override
			public Adapter caseICD2CONTENT(ICD2CONTENT object) {
				return createICD2CONTENTAdapter();
			}
			@Override
			public Adapter caseICD3CONTENT(ICD3CONTENT object) {
				return createICD3CONTENTAdapter();
			}
			@Override
			public Adapter caseIIM10CONTENT(IIM10CONTENT object) {
				return createIIM10CONTENTAdapter();
			}
			@Override
			public Adapter caseIIM11CONTENT(IIM11CONTENT object) {
				return createIIM11CONTENTAdapter();
			}
			@Override
			public Adapter caseIIM12CONTENT(IIM12CONTENT object) {
				return createIIM12CONTENTAdapter();
			}
			@Override
			public Adapter caseIIM13CONTENT(IIM13CONTENT object) {
				return createIIM13CONTENTAdapter();
			}
			@Override
			public Adapter caseIIM14CONTENT(IIM14CONTENT object) {
				return createIIM14CONTENTAdapter();
			}
			@Override
			public Adapter caseIIM15CONTENT(IIM15CONTENT object) {
				return createIIM15CONTENTAdapter();
			}
			@Override
			public Adapter caseIIM1CONTENT(IIM1CONTENT object) {
				return createIIM1CONTENTAdapter();
			}
			@Override
			public Adapter caseIIM2CONTENT(IIM2CONTENT object) {
				return createIIM2CONTENTAdapter();
			}
			@Override
			public Adapter caseIIM3CONTENT(IIM3CONTENT object) {
				return createIIM3CONTENTAdapter();
			}
			@Override
			public Adapter caseIIM4CONTENT(IIM4CONTENT object) {
				return createIIM4CONTENTAdapter();
			}
			@Override
			public Adapter caseIIM5CONTENT(IIM5CONTENT object) {
				return createIIM5CONTENTAdapter();
			}
			@Override
			public Adapter caseIIM6CONTENT(IIM6CONTENT object) {
				return createIIM6CONTENTAdapter();
			}
			@Override
			public Adapter caseIIM7CONTENT(IIM7CONTENT object) {
				return createIIM7CONTENTAdapter();
			}
			@Override
			public Adapter caseIIM8CONTENT(IIM8CONTENT object) {
				return createIIM8CONTENTAdapter();
			}
			@Override
			public Adapter caseIIM9CONTENT(IIM9CONTENT object) {
				return createIIM9CONTENTAdapter();
			}
			@Override
			public Adapter caseIIMCONTENT(IIMCONTENT object) {
				return createIIMCONTENTAdapter();
			}
			@Override
			public Adapter caseIN110CONTENT(IN110CONTENT object) {
				return createIN110CONTENTAdapter();
			}
			@Override
			public Adapter caseIN111CONTENT(IN111CONTENT object) {
				return createIN111CONTENTAdapter();
			}
			@Override
			public Adapter caseIN112CONTENT(IN112CONTENT object) {
				return createIN112CONTENTAdapter();
			}
			@Override
			public Adapter caseIN113CONTENT(IN113CONTENT object) {
				return createIN113CONTENTAdapter();
			}
			@Override
			public Adapter caseIN114CONTENT(IN114CONTENT object) {
				return createIN114CONTENTAdapter();
			}
			@Override
			public Adapter caseIN115CONTENT(IN115CONTENT object) {
				return createIN115CONTENTAdapter();
			}
			@Override
			public Adapter caseIN116CONTENT(IN116CONTENT object) {
				return createIN116CONTENTAdapter();
			}
			@Override
			public Adapter caseIN117CONTENT(IN117CONTENT object) {
				return createIN117CONTENTAdapter();
			}
			@Override
			public Adapter caseIN118CONTENT(IN118CONTENT object) {
				return createIN118CONTENTAdapter();
			}
			@Override
			public Adapter caseIN119CONTENT(IN119CONTENT object) {
				return createIN119CONTENTAdapter();
			}
			@Override
			public Adapter caseIN11CONTENT(IN11CONTENT object) {
				return createIN11CONTENTAdapter();
			}
			@Override
			public Adapter caseIN120CONTENT(IN120CONTENT object) {
				return createIN120CONTENTAdapter();
			}
			@Override
			public Adapter caseIN121CONTENT(IN121CONTENT object) {
				return createIN121CONTENTAdapter();
			}
			@Override
			public Adapter caseIN122CONTENT(IN122CONTENT object) {
				return createIN122CONTENTAdapter();
			}
			@Override
			public Adapter caseIN123CONTENT(IN123CONTENT object) {
				return createIN123CONTENTAdapter();
			}
			@Override
			public Adapter caseIN124CONTENT(IN124CONTENT object) {
				return createIN124CONTENTAdapter();
			}
			@Override
			public Adapter caseIN125CONTENT(IN125CONTENT object) {
				return createIN125CONTENTAdapter();
			}
			@Override
			public Adapter caseIN126CONTENT(IN126CONTENT object) {
				return createIN126CONTENTAdapter();
			}
			@Override
			public Adapter caseIN127CONTENT(IN127CONTENT object) {
				return createIN127CONTENTAdapter();
			}
			@Override
			public Adapter caseIN128CONTENT(IN128CONTENT object) {
				return createIN128CONTENTAdapter();
			}
			@Override
			public Adapter caseIN129CONTENT(IN129CONTENT object) {
				return createIN129CONTENTAdapter();
			}
			@Override
			public Adapter caseIN12CONTENT(IN12CONTENT object) {
				return createIN12CONTENTAdapter();
			}
			@Override
			public Adapter caseIN130CONTENT(IN130CONTENT object) {
				return createIN130CONTENTAdapter();
			}
			@Override
			public Adapter caseIN131CONTENT(IN131CONTENT object) {
				return createIN131CONTENTAdapter();
			}
			@Override
			public Adapter caseIN132CONTENT(IN132CONTENT object) {
				return createIN132CONTENTAdapter();
			}
			@Override
			public Adapter caseIN133CONTENT(IN133CONTENT object) {
				return createIN133CONTENTAdapter();
			}
			@Override
			public Adapter caseIN134CONTENT(IN134CONTENT object) {
				return createIN134CONTENTAdapter();
			}
			@Override
			public Adapter caseIN135CONTENT(IN135CONTENT object) {
				return createIN135CONTENTAdapter();
			}
			@Override
			public Adapter caseIN136CONTENT(IN136CONTENT object) {
				return createIN136CONTENTAdapter();
			}
			@Override
			public Adapter caseIN137CONTENT(IN137CONTENT object) {
				return createIN137CONTENTAdapter();
			}
			@Override
			public Adapter caseIN138CONTENT(IN138CONTENT object) {
				return createIN138CONTENTAdapter();
			}
			@Override
			public Adapter caseIN139CONTENT(IN139CONTENT object) {
				return createIN139CONTENTAdapter();
			}
			@Override
			public Adapter caseIN13CONTENT(IN13CONTENT object) {
				return createIN13CONTENTAdapter();
			}
			@Override
			public Adapter caseIN140CONTENT(IN140CONTENT object) {
				return createIN140CONTENTAdapter();
			}
			@Override
			public Adapter caseIN141CONTENT(IN141CONTENT object) {
				return createIN141CONTENTAdapter();
			}
			@Override
			public Adapter caseIN142CONTENT(IN142CONTENT object) {
				return createIN142CONTENTAdapter();
			}
			@Override
			public Adapter caseIN143CONTENT(IN143CONTENT object) {
				return createIN143CONTENTAdapter();
			}
			@Override
			public Adapter caseIN144CONTENT(IN144CONTENT object) {
				return createIN144CONTENTAdapter();
			}
			@Override
			public Adapter caseIN145CONTENT(IN145CONTENT object) {
				return createIN145CONTENTAdapter();
			}
			@Override
			public Adapter caseIN146CONTENT(IN146CONTENT object) {
				return createIN146CONTENTAdapter();
			}
			@Override
			public Adapter caseIN147CONTENT(IN147CONTENT object) {
				return createIN147CONTENTAdapter();
			}
			@Override
			public Adapter caseIN148CONTENT(IN148CONTENT object) {
				return createIN148CONTENTAdapter();
			}
			@Override
			public Adapter caseIN149CONTENT(IN149CONTENT object) {
				return createIN149CONTENTAdapter();
			}
			@Override
			public Adapter caseIN14CONTENT(IN14CONTENT object) {
				return createIN14CONTENTAdapter();
			}
			@Override
			public Adapter caseIN150CONTENT(IN150CONTENT object) {
				return createIN150CONTENTAdapter();
			}
			@Override
			public Adapter caseIN151CONTENT(IN151CONTENT object) {
				return createIN151CONTENTAdapter();
			}
			@Override
			public Adapter caseIN152CONTENT(IN152CONTENT object) {
				return createIN152CONTENTAdapter();
			}
			@Override
			public Adapter caseIN153CONTENT(IN153CONTENT object) {
				return createIN153CONTENTAdapter();
			}
			@Override
			public Adapter caseIN15CONTENT(IN15CONTENT object) {
				return createIN15CONTENTAdapter();
			}
			@Override
			public Adapter caseIN16CONTENT(IN16CONTENT object) {
				return createIN16CONTENTAdapter();
			}
			@Override
			public Adapter caseIN17CONTENT(IN17CONTENT object) {
				return createIN17CONTENTAdapter();
			}
			@Override
			public Adapter caseIN18CONTENT(IN18CONTENT object) {
				return createIN18CONTENTAdapter();
			}
			@Override
			public Adapter caseIN19CONTENT(IN19CONTENT object) {
				return createIN19CONTENTAdapter();
			}
			@Override
			public Adapter caseIN1CONTENT(IN1CONTENT object) {
				return createIN1CONTENTAdapter();
			}
			@Override
			public Adapter caseIN210CONTENT(IN210CONTENT object) {
				return createIN210CONTENTAdapter();
			}
			@Override
			public Adapter caseIN211CONTENT(IN211CONTENT object) {
				return createIN211CONTENTAdapter();
			}
			@Override
			public Adapter caseIN212CONTENT(IN212CONTENT object) {
				return createIN212CONTENTAdapter();
			}
			@Override
			public Adapter caseIN213CONTENT(IN213CONTENT object) {
				return createIN213CONTENTAdapter();
			}
			@Override
			public Adapter caseIN214CONTENT(IN214CONTENT object) {
				return createIN214CONTENTAdapter();
			}
			@Override
			public Adapter caseIN215CONTENT(IN215CONTENT object) {
				return createIN215CONTENTAdapter();
			}
			@Override
			public Adapter caseIN216CONTENT(IN216CONTENT object) {
				return createIN216CONTENTAdapter();
			}
			@Override
			public Adapter caseIN217CONTENT(IN217CONTENT object) {
				return createIN217CONTENTAdapter();
			}
			@Override
			public Adapter caseIN218CONTENT(IN218CONTENT object) {
				return createIN218CONTENTAdapter();
			}
			@Override
			public Adapter caseIN219CONTENT(IN219CONTENT object) {
				return createIN219CONTENTAdapter();
			}
			@Override
			public Adapter caseIN21CONTENT(IN21CONTENT object) {
				return createIN21CONTENTAdapter();
			}
			@Override
			public Adapter caseIN220CONTENT(IN220CONTENT object) {
				return createIN220CONTENTAdapter();
			}
			@Override
			public Adapter caseIN221CONTENT(IN221CONTENT object) {
				return createIN221CONTENTAdapter();
			}
			@Override
			public Adapter caseIN222CONTENT(IN222CONTENT object) {
				return createIN222CONTENTAdapter();
			}
			@Override
			public Adapter caseIN223CONTENT(IN223CONTENT object) {
				return createIN223CONTENTAdapter();
			}
			@Override
			public Adapter caseIN224CONTENT(IN224CONTENT object) {
				return createIN224CONTENTAdapter();
			}
			@Override
			public Adapter caseIN225CONTENT(IN225CONTENT object) {
				return createIN225CONTENTAdapter();
			}
			@Override
			public Adapter caseIN226CONTENT(IN226CONTENT object) {
				return createIN226CONTENTAdapter();
			}
			@Override
			public Adapter caseIN227CONTENT(IN227CONTENT object) {
				return createIN227CONTENTAdapter();
			}
			@Override
			public Adapter caseIN228CONTENT(IN228CONTENT object) {
				return createIN228CONTENTAdapter();
			}
			@Override
			public Adapter caseIN229CONTENT(IN229CONTENT object) {
				return createIN229CONTENTAdapter();
			}
			@Override
			public Adapter caseIN22CONTENT(IN22CONTENT object) {
				return createIN22CONTENTAdapter();
			}
			@Override
			public Adapter caseIN230CONTENT(IN230CONTENT object) {
				return createIN230CONTENTAdapter();
			}
			@Override
			public Adapter caseIN231CONTENT(IN231CONTENT object) {
				return createIN231CONTENTAdapter();
			}
			@Override
			public Adapter caseIN232CONTENT(IN232CONTENT object) {
				return createIN232CONTENTAdapter();
			}
			@Override
			public Adapter caseIN233CONTENT(IN233CONTENT object) {
				return createIN233CONTENTAdapter();
			}
			@Override
			public Adapter caseIN234CONTENT(IN234CONTENT object) {
				return createIN234CONTENTAdapter();
			}
			@Override
			public Adapter caseIN235CONTENT(IN235CONTENT object) {
				return createIN235CONTENTAdapter();
			}
			@Override
			public Adapter caseIN236CONTENT(IN236CONTENT object) {
				return createIN236CONTENTAdapter();
			}
			@Override
			public Adapter caseIN237CONTENT(IN237CONTENT object) {
				return createIN237CONTENTAdapter();
			}
			@Override
			public Adapter caseIN238CONTENT(IN238CONTENT object) {
				return createIN238CONTENTAdapter();
			}
			@Override
			public Adapter caseIN239CONTENT(IN239CONTENT object) {
				return createIN239CONTENTAdapter();
			}
			@Override
			public Adapter caseIN23CONTENT(IN23CONTENT object) {
				return createIN23CONTENTAdapter();
			}
			@Override
			public Adapter caseIN240CONTENT(IN240CONTENT object) {
				return createIN240CONTENTAdapter();
			}
			@Override
			public Adapter caseIN241CONTENT(IN241CONTENT object) {
				return createIN241CONTENTAdapter();
			}
			@Override
			public Adapter caseIN242CONTENT(IN242CONTENT object) {
				return createIN242CONTENTAdapter();
			}
			@Override
			public Adapter caseIN243CONTENT(IN243CONTENT object) {
				return createIN243CONTENTAdapter();
			}
			@Override
			public Adapter caseIN244CONTENT(IN244CONTENT object) {
				return createIN244CONTENTAdapter();
			}
			@Override
			public Adapter caseIN245CONTENT(IN245CONTENT object) {
				return createIN245CONTENTAdapter();
			}
			@Override
			public Adapter caseIN246CONTENT(IN246CONTENT object) {
				return createIN246CONTENTAdapter();
			}
			@Override
			public Adapter caseIN247CONTENT(IN247CONTENT object) {
				return createIN247CONTENTAdapter();
			}
			@Override
			public Adapter caseIN248CONTENT(IN248CONTENT object) {
				return createIN248CONTENTAdapter();
			}
			@Override
			public Adapter caseIN249CONTENT(IN249CONTENT object) {
				return createIN249CONTENTAdapter();
			}
			@Override
			public Adapter caseIN24CONTENT(IN24CONTENT object) {
				return createIN24CONTENTAdapter();
			}
			@Override
			public Adapter caseIN250CONTENT(IN250CONTENT object) {
				return createIN250CONTENTAdapter();
			}
			@Override
			public Adapter caseIN251CONTENT(IN251CONTENT object) {
				return createIN251CONTENTAdapter();
			}
			@Override
			public Adapter caseIN252CONTENT(IN252CONTENT object) {
				return createIN252CONTENTAdapter();
			}
			@Override
			public Adapter caseIN253CONTENT(IN253CONTENT object) {
				return createIN253CONTENTAdapter();
			}
			@Override
			public Adapter caseIN254CONTENT(IN254CONTENT object) {
				return createIN254CONTENTAdapter();
			}
			@Override
			public Adapter caseIN255CONTENT(IN255CONTENT object) {
				return createIN255CONTENTAdapter();
			}
			@Override
			public Adapter caseIN256CONTENT(IN256CONTENT object) {
				return createIN256CONTENTAdapter();
			}
			@Override
			public Adapter caseIN257CONTENT(IN257CONTENT object) {
				return createIN257CONTENTAdapter();
			}
			@Override
			public Adapter caseIN258CONTENT(IN258CONTENT object) {
				return createIN258CONTENTAdapter();
			}
			@Override
			public Adapter caseIN259CONTENT(IN259CONTENT object) {
				return createIN259CONTENTAdapter();
			}
			@Override
			public Adapter caseIN25CONTENT(IN25CONTENT object) {
				return createIN25CONTENTAdapter();
			}
			@Override
			public Adapter caseIN260CONTENT(IN260CONTENT object) {
				return createIN260CONTENTAdapter();
			}
			@Override
			public Adapter caseIN261CONTENT(IN261CONTENT object) {
				return createIN261CONTENTAdapter();
			}
			@Override
			public Adapter caseIN262CONTENT(IN262CONTENT object) {
				return createIN262CONTENTAdapter();
			}
			@Override
			public Adapter caseIN263CONTENT(IN263CONTENT object) {
				return createIN263CONTENTAdapter();
			}
			@Override
			public Adapter caseIN264CONTENT(IN264CONTENT object) {
				return createIN264CONTENTAdapter();
			}
			@Override
			public Adapter caseIN265CONTENT(IN265CONTENT object) {
				return createIN265CONTENTAdapter();
			}
			@Override
			public Adapter caseIN266CONTENT(IN266CONTENT object) {
				return createIN266CONTENTAdapter();
			}
			@Override
			public Adapter caseIN267CONTENT(IN267CONTENT object) {
				return createIN267CONTENTAdapter();
			}
			@Override
			public Adapter caseIN268CONTENT(IN268CONTENT object) {
				return createIN268CONTENTAdapter();
			}
			@Override
			public Adapter caseIN269CONTENT(IN269CONTENT object) {
				return createIN269CONTENTAdapter();
			}
			@Override
			public Adapter caseIN26CONTENT(IN26CONTENT object) {
				return createIN26CONTENTAdapter();
			}
			@Override
			public Adapter caseIN270CONTENT(IN270CONTENT object) {
				return createIN270CONTENTAdapter();
			}
			@Override
			public Adapter caseIN271CONTENT(IN271CONTENT object) {
				return createIN271CONTENTAdapter();
			}
			@Override
			public Adapter caseIN272CONTENT(IN272CONTENT object) {
				return createIN272CONTENTAdapter();
			}
			@Override
			public Adapter caseIN27CONTENT(IN27CONTENT object) {
				return createIN27CONTENTAdapter();
			}
			@Override
			public Adapter caseIN28CONTENT(IN28CONTENT object) {
				return createIN28CONTENTAdapter();
			}
			@Override
			public Adapter caseIN29CONTENT(IN29CONTENT object) {
				return createIN29CONTENTAdapter();
			}
			@Override
			public Adapter caseIN2CONTENT(IN2CONTENT object) {
				return createIN2CONTENTAdapter();
			}
			@Override
			public Adapter caseIN310CONTENT(IN310CONTENT object) {
				return createIN310CONTENTAdapter();
			}
			@Override
			public Adapter caseIN311CONTENT(IN311CONTENT object) {
				return createIN311CONTENTAdapter();
			}
			@Override
			public Adapter caseIN312CONTENT(IN312CONTENT object) {
				return createIN312CONTENTAdapter();
			}
			@Override
			public Adapter caseIN313CONTENT(IN313CONTENT object) {
				return createIN313CONTENTAdapter();
			}
			@Override
			public Adapter caseIN314CONTENT(IN314CONTENT object) {
				return createIN314CONTENTAdapter();
			}
			@Override
			public Adapter caseIN315CONTENT(IN315CONTENT object) {
				return createIN315CONTENTAdapter();
			}
			@Override
			public Adapter caseIN316CONTENT(IN316CONTENT object) {
				return createIN316CONTENTAdapter();
			}
			@Override
			public Adapter caseIN317CONTENT(IN317CONTENT object) {
				return createIN317CONTENTAdapter();
			}
			@Override
			public Adapter caseIN318CONTENT(IN318CONTENT object) {
				return createIN318CONTENTAdapter();
			}
			@Override
			public Adapter caseIN319CONTENT(IN319CONTENT object) {
				return createIN319CONTENTAdapter();
			}
			@Override
			public Adapter caseIN31CONTENT(IN31CONTENT object) {
				return createIN31CONTENTAdapter();
			}
			@Override
			public Adapter caseIN320CONTENT(IN320CONTENT object) {
				return createIN320CONTENTAdapter();
			}
			@Override
			public Adapter caseIN321CONTENT(IN321CONTENT object) {
				return createIN321CONTENTAdapter();
			}
			@Override
			public Adapter caseIN322CONTENT(IN322CONTENT object) {
				return createIN322CONTENTAdapter();
			}
			@Override
			public Adapter caseIN323CONTENT(IN323CONTENT object) {
				return createIN323CONTENTAdapter();
			}
			@Override
			public Adapter caseIN324CONTENT(IN324CONTENT object) {
				return createIN324CONTENTAdapter();
			}
			@Override
			public Adapter caseIN325CONTENT(IN325CONTENT object) {
				return createIN325CONTENTAdapter();
			}
			@Override
			public Adapter caseIN32CONTENT(IN32CONTENT object) {
				return createIN32CONTENTAdapter();
			}
			@Override
			public Adapter caseIN33CONTENT(IN33CONTENT object) {
				return createIN33CONTENTAdapter();
			}
			@Override
			public Adapter caseIN34CONTENT(IN34CONTENT object) {
				return createIN34CONTENTAdapter();
			}
			@Override
			public Adapter caseIN35CONTENT(IN35CONTENT object) {
				return createIN35CONTENTAdapter();
			}
			@Override
			public Adapter caseIN36CONTENT(IN36CONTENT object) {
				return createIN36CONTENTAdapter();
			}
			@Override
			public Adapter caseIN37CONTENT(IN37CONTENT object) {
				return createIN37CONTENTAdapter();
			}
			@Override
			public Adapter caseIN38CONTENT(IN38CONTENT object) {
				return createIN38CONTENTAdapter();
			}
			@Override
			public Adapter caseIN39CONTENT(IN39CONTENT object) {
				return createIN39CONTENTAdapter();
			}
			@Override
			public Adapter caseIN3CONTENT(IN3CONTENT object) {
				return createIN3CONTENTAdapter();
			}
			@Override
			public Adapter caseINV10CONTENT(INV10CONTENT object) {
				return createINV10CONTENTAdapter();
			}
			@Override
			public Adapter caseINV11CONTENT(INV11CONTENT object) {
				return createINV11CONTENTAdapter();
			}
			@Override
			public Adapter caseINV12CONTENT(INV12CONTENT object) {
				return createINV12CONTENTAdapter();
			}
			@Override
			public Adapter caseINV13CONTENT(INV13CONTENT object) {
				return createINV13CONTENTAdapter();
			}
			@Override
			public Adapter caseINV14CONTENT(INV14CONTENT object) {
				return createINV14CONTENTAdapter();
			}
			@Override
			public Adapter caseINV15CONTENT(INV15CONTENT object) {
				return createINV15CONTENTAdapter();
			}
			@Override
			public Adapter caseINV16CONTENT(INV16CONTENT object) {
				return createINV16CONTENTAdapter();
			}
			@Override
			public Adapter caseINV17CONTENT(INV17CONTENT object) {
				return createINV17CONTENTAdapter();
			}
			@Override
			public Adapter caseINV18CONTENT(INV18CONTENT object) {
				return createINV18CONTENTAdapter();
			}
			@Override
			public Adapter caseINV19CONTENT(INV19CONTENT object) {
				return createINV19CONTENTAdapter();
			}
			@Override
			public Adapter caseINV1CONTENT(INV1CONTENT object) {
				return createINV1CONTENTAdapter();
			}
			@Override
			public Adapter caseINV20CONTENT(INV20CONTENT object) {
				return createINV20CONTENTAdapter();
			}
			@Override
			public Adapter caseINV2CONTENT(INV2CONTENT object) {
				return createINV2CONTENTAdapter();
			}
			@Override
			public Adapter caseINV3CONTENT(INV3CONTENT object) {
				return createINV3CONTENTAdapter();
			}
			@Override
			public Adapter caseINV4CONTENT(INV4CONTENT object) {
				return createINV4CONTENTAdapter();
			}
			@Override
			public Adapter caseINV5CONTENT(INV5CONTENT object) {
				return createINV5CONTENTAdapter();
			}
			@Override
			public Adapter caseINV6CONTENT(INV6CONTENT object) {
				return createINV6CONTENTAdapter();
			}
			@Override
			public Adapter caseINV7CONTENT(INV7CONTENT object) {
				return createINV7CONTENTAdapter();
			}
			@Override
			public Adapter caseINV8CONTENT(INV8CONTENT object) {
				return createINV8CONTENTAdapter();
			}
			@Override
			public Adapter caseINV9CONTENT(INV9CONTENT object) {
				return createINV9CONTENTAdapter();
			}
			@Override
			public Adapter caseINVCONTENT(INVCONTENT object) {
				return createINVCONTENTAdapter();
			}
			@Override
			public Adapter caseIPC1CONTENT(IPC1CONTENT object) {
				return createIPC1CONTENTAdapter();
			}
			@Override
			public Adapter caseIPC2CONTENT(IPC2CONTENT object) {
				return createIPC2CONTENTAdapter();
			}
			@Override
			public Adapter caseIPC3CONTENT(IPC3CONTENT object) {
				return createIPC3CONTENTAdapter();
			}
			@Override
			public Adapter caseIPC4CONTENT(IPC4CONTENT object) {
				return createIPC4CONTENTAdapter();
			}
			@Override
			public Adapter caseIPC5CONTENT(IPC5CONTENT object) {
				return createIPC5CONTENTAdapter();
			}
			@Override
			public Adapter caseIPC6CONTENT(IPC6CONTENT object) {
				return createIPC6CONTENTAdapter();
			}
			@Override
			public Adapter caseIPC7CONTENT(IPC7CONTENT object) {
				return createIPC7CONTENTAdapter();
			}
			@Override
			public Adapter caseIPC8CONTENT(IPC8CONTENT object) {
				return createIPC8CONTENTAdapter();
			}
			@Override
			public Adapter caseIPC9CONTENT(IPC9CONTENT object) {
				return createIPC9CONTENTAdapter();
			}
			@Override
			public Adapter caseIPCCONTENT(IPCCONTENT object) {
				return createIPCCONTENTAdapter();
			}
			@Override
			public Adapter caseISD1CONTENT(ISD1CONTENT object) {
				return createISD1CONTENTAdapter();
			}
			@Override
			public Adapter caseISD2CONTENT(ISD2CONTENT object) {
				return createISD2CONTENTAdapter();
			}
			@Override
			public Adapter caseISD3CONTENT(ISD3CONTENT object) {
				return createISD3CONTENTAdapter();
			}
			@Override
			public Adapter caseISDCONTENT(ISDCONTENT object) {
				return createISDCONTENTAdapter();
			}
			@Override
			public Adapter caseJCC(JCC object) {
				return createJCCAdapter();
			}
			@Override
			public Adapter caseJCC1CONTENT(JCC1CONTENT object) {
				return createJCC1CONTENTAdapter();
			}
			@Override
			public Adapter caseJCC2CONTENT(JCC2CONTENT object) {
				return createJCC2CONTENTAdapter();
			}
			@Override
			public Adapter caseJCC3CONTENT(JCC3CONTENT object) {
				return createJCC3CONTENTAdapter();
			}
			@Override
			public Adapter caseLA1(LA1 object) {
				return createLA1Adapter();
			}
			@Override
			public Adapter caseLA11CONTENT(LA11CONTENT object) {
				return createLA11CONTENTAdapter();
			}
			@Override
			public Adapter caseLA12CONTENT(LA12CONTENT object) {
				return createLA12CONTENTAdapter();
			}
			@Override
			public Adapter caseLA13CONTENT(LA13CONTENT object) {
				return createLA13CONTENTAdapter();
			}
			@Override
			public Adapter caseLA14CONTENT(LA14CONTENT object) {
				return createLA14CONTENTAdapter();
			}
			@Override
			public Adapter caseLA15CONTENT(LA15CONTENT object) {
				return createLA15CONTENTAdapter();
			}
			@Override
			public Adapter caseLA16CONTENT(LA16CONTENT object) {
				return createLA16CONTENTAdapter();
			}
			@Override
			public Adapter caseLA17CONTENT(LA17CONTENT object) {
				return createLA17CONTENTAdapter();
			}
			@Override
			public Adapter caseLA18CONTENT(LA18CONTENT object) {
				return createLA18CONTENTAdapter();
			}
			@Override
			public Adapter caseLA19CONTENT(LA19CONTENT object) {
				return createLA19CONTENTAdapter();
			}
			@Override
			public Adapter caseLA2(LA2 object) {
				return createLA2Adapter();
			}
			@Override
			public Adapter caseLA210CONTENT(LA210CONTENT object) {
				return createLA210CONTENTAdapter();
			}
			@Override
			public Adapter caseLA211CONTENT(LA211CONTENT object) {
				return createLA211CONTENTAdapter();
			}
			@Override
			public Adapter caseLA212CONTENT(LA212CONTENT object) {
				return createLA212CONTENTAdapter();
			}
			@Override
			public Adapter caseLA213CONTENT(LA213CONTENT object) {
				return createLA213CONTENTAdapter();
			}
			@Override
			public Adapter caseLA214CONTENT(LA214CONTENT object) {
				return createLA214CONTENTAdapter();
			}
			@Override
			public Adapter caseLA215CONTENT(LA215CONTENT object) {
				return createLA215CONTENTAdapter();
			}
			@Override
			public Adapter caseLA216CONTENT(LA216CONTENT object) {
				return createLA216CONTENTAdapter();
			}
			@Override
			public Adapter caseLA21CONTENT(LA21CONTENT object) {
				return createLA21CONTENTAdapter();
			}
			@Override
			public Adapter caseLA22CONTENT(LA22CONTENT object) {
				return createLA22CONTENTAdapter();
			}
			@Override
			public Adapter caseLA23CONTENT(LA23CONTENT object) {
				return createLA23CONTENTAdapter();
			}
			@Override
			public Adapter caseLA24CONTENT(LA24CONTENT object) {
				return createLA24CONTENTAdapter();
			}
			@Override
			public Adapter caseLA25CONTENT(LA25CONTENT object) {
				return createLA25CONTENTAdapter();
			}
			@Override
			public Adapter caseLA26CONTENT(LA26CONTENT object) {
				return createLA26CONTENTAdapter();
			}
			@Override
			public Adapter caseLA27CONTENT(LA27CONTENT object) {
				return createLA27CONTENTAdapter();
			}
			@Override
			public Adapter caseLA28CONTENT(LA28CONTENT object) {
				return createLA28CONTENTAdapter();
			}
			@Override
			public Adapter caseLA29CONTENT(LA29CONTENT object) {
				return createLA29CONTENTAdapter();
			}
			@Override
			public Adapter caseLAN1CONTENT(LAN1CONTENT object) {
				return createLAN1CONTENTAdapter();
			}
			@Override
			public Adapter caseLAN2CONTENT(LAN2CONTENT object) {
				return createLAN2CONTENTAdapter();
			}
			@Override
			public Adapter caseLAN3CONTENT(LAN3CONTENT object) {
				return createLAN3CONTENTAdapter();
			}
			@Override
			public Adapter caseLAN4CONTENT(LAN4CONTENT object) {
				return createLAN4CONTENTAdapter();
			}
			@Override
			public Adapter caseLANCONTENT(LANCONTENT object) {
				return createLANCONTENTAdapter();
			}
			@Override
			public Adapter caseLCC1CONTENT(LCC1CONTENT object) {
				return createLCC1CONTENTAdapter();
			}
			@Override
			public Adapter caseLCC2CONTENT(LCC2CONTENT object) {
				return createLCC2CONTENTAdapter();
			}
			@Override
			public Adapter caseLCC3CONTENT(LCC3CONTENT object) {
				return createLCC3CONTENTAdapter();
			}
			@Override
			public Adapter caseLCC4CONTENT(LCC4CONTENT object) {
				return createLCC4CONTENTAdapter();
			}
			@Override
			public Adapter caseLCCCONTENT(LCCCONTENT object) {
				return createLCCCONTENTAdapter();
			}
			@Override
			public Adapter caseLCH1CONTENT(LCH1CONTENT object) {
				return createLCH1CONTENTAdapter();
			}
			@Override
			public Adapter caseLCH2CONTENT(LCH2CONTENT object) {
				return createLCH2CONTENTAdapter();
			}
			@Override
			public Adapter caseLCH3CONTENT(LCH3CONTENT object) {
				return createLCH3CONTENTAdapter();
			}
			@Override
			public Adapter caseLCH4CONTENT(LCH4CONTENT object) {
				return createLCH4CONTENTAdapter();
			}
			@Override
			public Adapter caseLCH5CONTENT(LCH5CONTENT object) {
				return createLCH5CONTENTAdapter();
			}
			@Override
			public Adapter caseLCHCONTENT(LCHCONTENT object) {
				return createLCHCONTENTAdapter();
			}
			@Override
			public Adapter caseLDP10CONTENT(LDP10CONTENT object) {
				return createLDP10CONTENTAdapter();
			}
			@Override
			public Adapter caseLDP11CONTENT(LDP11CONTENT object) {
				return createLDP11CONTENTAdapter();
			}
			@Override
			public Adapter caseLDP12CONTENT(LDP12CONTENT object) {
				return createLDP12CONTENTAdapter();
			}
			@Override
			public Adapter caseLDP1CONTENT(LDP1CONTENT object) {
				return createLDP1CONTENTAdapter();
			}
			@Override
			public Adapter caseLDP2CONTENT(LDP2CONTENT object) {
				return createLDP2CONTENTAdapter();
			}
			@Override
			public Adapter caseLDP3CONTENT(LDP3CONTENT object) {
				return createLDP3CONTENTAdapter();
			}
			@Override
			public Adapter caseLDP4CONTENT(LDP4CONTENT object) {
				return createLDP4CONTENTAdapter();
			}
			@Override
			public Adapter caseLDP5CONTENT(LDP5CONTENT object) {
				return createLDP5CONTENTAdapter();
			}
			@Override
			public Adapter caseLDP6CONTENT(LDP6CONTENT object) {
				return createLDP6CONTENTAdapter();
			}
			@Override
			public Adapter caseLDP7CONTENT(LDP7CONTENT object) {
				return createLDP7CONTENTAdapter();
			}
			@Override
			public Adapter caseLDP8CONTENT(LDP8CONTENT object) {
				return createLDP8CONTENTAdapter();
			}
			@Override
			public Adapter caseLDP9CONTENT(LDP9CONTENT object) {
				return createLDP9CONTENTAdapter();
			}
			@Override
			public Adapter caseLDPCONTENT(LDPCONTENT object) {
				return createLDPCONTENTAdapter();
			}
			@Override
			public Adapter caseLOC1CONTENT(LOC1CONTENT object) {
				return createLOC1CONTENTAdapter();
			}
			@Override
			public Adapter caseLOC2CONTENT(LOC2CONTENT object) {
				return createLOC2CONTENTAdapter();
			}
			@Override
			public Adapter caseLOC3CONTENT(LOC3CONTENT object) {
				return createLOC3CONTENTAdapter();
			}
			@Override
			public Adapter caseLOC4CONTENT(LOC4CONTENT object) {
				return createLOC4CONTENTAdapter();
			}
			@Override
			public Adapter caseLOC5CONTENT(LOC5CONTENT object) {
				return createLOC5CONTENTAdapter();
			}
			@Override
			public Adapter caseLOC6CONTENT(LOC6CONTENT object) {
				return createLOC6CONTENTAdapter();
			}
			@Override
			public Adapter caseLOC7CONTENT(LOC7CONTENT object) {
				return createLOC7CONTENTAdapter();
			}
			@Override
			public Adapter caseLOC8CONTENT(LOC8CONTENT object) {
				return createLOC8CONTENTAdapter();
			}
			@Override
			public Adapter caseLOC9CONTENT(LOC9CONTENT object) {
				return createLOC9CONTENTAdapter();
			}
			@Override
			public Adapter caseLOCCONTENT(LOCCONTENT object) {
				return createLOCCONTENTAdapter();
			}
			@Override
			public Adapter caseLRL1CONTENT(LRL1CONTENT object) {
				return createLRL1CONTENTAdapter();
			}
			@Override
			public Adapter caseLRL2CONTENT(LRL2CONTENT object) {
				return createLRL2CONTENTAdapter();
			}
			@Override
			public Adapter caseLRL3CONTENT(LRL3CONTENT object) {
				return createLRL3CONTENTAdapter();
			}
			@Override
			public Adapter caseLRL4CONTENT(LRL4CONTENT object) {
				return createLRL4CONTENTAdapter();
			}
			@Override
			public Adapter caseLRL5CONTENT(LRL5CONTENT object) {
				return createLRL5CONTENTAdapter();
			}
			@Override
			public Adapter caseLRL6CONTENT(LRL6CONTENT object) {
				return createLRL6CONTENTAdapter();
			}
			@Override
			public Adapter caseLRLCONTENT(LRLCONTENT object) {
				return createLRLCONTENTAdapter();
			}
			@Override
			public Adapter caseMA(MA object) {
				return createMAAdapter();
			}
			@Override
			public Adapter caseMA1CONTENT(MA1CONTENT object) {
				return createMA1CONTENTAdapter();
			}
			@Override
			public Adapter caseMA2CONTENT(MA2CONTENT object) {
				return createMA2CONTENTAdapter();
			}
			@Override
			public Adapter caseMA3CONTENT(MA3CONTENT object) {
				return createMA3CONTENTAdapter();
			}
			@Override
			public Adapter caseMA4CONTENT(MA4CONTENT object) {
				return createMA4CONTENTAdapter();
			}
			@Override
			public Adapter caseMA5CONTENT(MA5CONTENT object) {
				return createMA5CONTENTAdapter();
			}
			@Override
			public Adapter caseMA6CONTENT(MA6CONTENT object) {
				return createMA6CONTENTAdapter();
			}
			@Override
			public Adapter caseMFA1CONTENT(MFA1CONTENT object) {
				return createMFA1CONTENTAdapter();
			}
			@Override
			public Adapter caseMFA2CONTENT(MFA2CONTENT object) {
				return createMFA2CONTENTAdapter();
			}
			@Override
			public Adapter caseMFA3CONTENT(MFA3CONTENT object) {
				return createMFA3CONTENTAdapter();
			}
			@Override
			public Adapter caseMFA4CONTENT(MFA4CONTENT object) {
				return createMFA4CONTENTAdapter();
			}
			@Override
			public Adapter caseMFA5CONTENT(MFA5CONTENT object) {
				return createMFA5CONTENTAdapter();
			}
			@Override
			public Adapter caseMFA6CONTENT(MFA6CONTENT object) {
				return createMFA6CONTENTAdapter();
			}
			@Override
			public Adapter caseMFACONTENT(MFACONTENT object) {
				return createMFACONTENTAdapter();
			}
			@Override
			public Adapter caseMFE1CONTENT(MFE1CONTENT object) {
				return createMFE1CONTENTAdapter();
			}
			@Override
			public Adapter caseMFE2CONTENT(MFE2CONTENT object) {
				return createMFE2CONTENTAdapter();
			}
			@Override
			public Adapter caseMFE3CONTENT(MFE3CONTENT object) {
				return createMFE3CONTENTAdapter();
			}
			@Override
			public Adapter caseMFE4CONTENT(MFE4CONTENT object) {
				return createMFE4CONTENTAdapter();
			}
			@Override
			public Adapter caseMFE5CONTENT(MFE5CONTENT object) {
				return createMFE5CONTENTAdapter();
			}
			@Override
			public Adapter caseMFECONTENT(MFECONTENT object) {
				return createMFECONTENTAdapter();
			}
			@Override
			public Adapter caseMFI1CONTENT(MFI1CONTENT object) {
				return createMFI1CONTENTAdapter();
			}
			@Override
			public Adapter caseMFI2CONTENT(MFI2CONTENT object) {
				return createMFI2CONTENTAdapter();
			}
			@Override
			public Adapter caseMFI3CONTENT(MFI3CONTENT object) {
				return createMFI3CONTENTAdapter();
			}
			@Override
			public Adapter caseMFI4CONTENT(MFI4CONTENT object) {
				return createMFI4CONTENTAdapter();
			}
			@Override
			public Adapter caseMFI5CONTENT(MFI5CONTENT object) {
				return createMFI5CONTENTAdapter();
			}
			@Override
			public Adapter caseMFI6CONTENT(MFI6CONTENT object) {
				return createMFI6CONTENTAdapter();
			}
			@Override
			public Adapter caseMFICONTENT(MFICONTENT object) {
				return createMFICONTENTAdapter();
			}
			@Override
			public Adapter caseMO(MO object) {
				return createMOAdapter();
			}
			@Override
			public Adapter caseMO1CONTENT(MO1CONTENT object) {
				return createMO1CONTENTAdapter();
			}
			@Override
			public Adapter caseMO2CONTENT(MO2CONTENT object) {
				return createMO2CONTENTAdapter();
			}
			@Override
			public Adapter caseMOC(MOC object) {
				return createMOCAdapter();
			}
			@Override
			public Adapter caseMOC1CONTENT(MOC1CONTENT object) {
				return createMOC1CONTENTAdapter();
			}
			@Override
			public Adapter caseMOC2CONTENT(MOC2CONTENT object) {
				return createMOC2CONTENTAdapter();
			}
			@Override
			public Adapter caseMOP(MOP object) {
				return createMOPAdapter();
			}
			@Override
			public Adapter caseMOP1CONTENT(MOP1CONTENT object) {
				return createMOP1CONTENTAdapter();
			}
			@Override
			public Adapter caseMOP2CONTENT(MOP2CONTENT object) {
				return createMOP2CONTENTAdapter();
			}
			@Override
			public Adapter caseMOP3CONTENT(MOP3CONTENT object) {
				return createMOP3CONTENTAdapter();
			}
			@Override
			public Adapter caseMRG1CONTENT(MRG1CONTENT object) {
				return createMRG1CONTENTAdapter();
			}
			@Override
			public Adapter caseMRG2CONTENT(MRG2CONTENT object) {
				return createMRG2CONTENTAdapter();
			}
			@Override
			public Adapter caseMRG3CONTENT(MRG3CONTENT object) {
				return createMRG3CONTENTAdapter();
			}
			@Override
			public Adapter caseMRG4CONTENT(MRG4CONTENT object) {
				return createMRG4CONTENTAdapter();
			}
			@Override
			public Adapter caseMRG5CONTENT(MRG5CONTENT object) {
				return createMRG5CONTENTAdapter();
			}
			@Override
			public Adapter caseMRG6CONTENT(MRG6CONTENT object) {
				return createMRG6CONTENTAdapter();
			}
			@Override
			public Adapter caseMRG7CONTENT(MRG7CONTENT object) {
				return createMRG7CONTENTAdapter();
			}
			@Override
			public Adapter caseMRGCONTENT(MRGCONTENT object) {
				return createMRGCONTENTAdapter();
			}
			@Override
			public Adapter caseMSA1CONTENT(MSA1CONTENT object) {
				return createMSA1CONTENTAdapter();
			}
			@Override
			public Adapter caseMSA2CONTENT(MSA2CONTENT object) {
				return createMSA2CONTENTAdapter();
			}
			@Override
			public Adapter caseMSA3CONTENT(MSA3CONTENT object) {
				return createMSA3CONTENTAdapter();
			}
			@Override
			public Adapter caseMSA4CONTENT(MSA4CONTENT object) {
				return createMSA4CONTENTAdapter();
			}
			@Override
			public Adapter caseMSA5CONTENT(MSA5CONTENT object) {
				return createMSA5CONTENTAdapter();
			}
			@Override
			public Adapter caseMSA6CONTENT(MSA6CONTENT object) {
				return createMSA6CONTENTAdapter();
			}
			@Override
			public Adapter caseMSACONTENT(MSACONTENT object) {
				return createMSACONTENTAdapter();
			}
			@Override
			public Adapter caseMSG(MSG object) {
				return createMSGAdapter();
			}
			@Override
			public Adapter caseMSG1CONTENT(MSG1CONTENT object) {
				return createMSG1CONTENTAdapter();
			}
			@Override
			public Adapter caseMSG2CONTENT(MSG2CONTENT object) {
				return createMSG2CONTENTAdapter();
			}
			@Override
			public Adapter caseMSG3CONTENT(MSG3CONTENT object) {
				return createMSG3CONTENTAdapter();
			}
			@Override
			public Adapter caseMSH10CONTENT(MSH10CONTENT object) {
				return createMSH10CONTENTAdapter();
			}
			@Override
			public Adapter caseMSH11CONTENT(MSH11CONTENT object) {
				return createMSH11CONTENTAdapter();
			}
			@Override
			public Adapter caseMSH12CONTENT(MSH12CONTENT object) {
				return createMSH12CONTENTAdapter();
			}
			@Override
			public Adapter caseMSH13CONTENT(MSH13CONTENT object) {
				return createMSH13CONTENTAdapter();
			}
			@Override
			public Adapter caseMSH14CONTENT(MSH14CONTENT object) {
				return createMSH14CONTENTAdapter();
			}
			@Override
			public Adapter caseMSH15CONTENT(MSH15CONTENT object) {
				return createMSH15CONTENTAdapter();
			}
			@Override
			public Adapter caseMSH16CONTENT(MSH16CONTENT object) {
				return createMSH16CONTENTAdapter();
			}
			@Override
			public Adapter caseMSH17CONTENT(MSH17CONTENT object) {
				return createMSH17CONTENTAdapter();
			}
			@Override
			public Adapter caseMSH18CONTENT(MSH18CONTENT object) {
				return createMSH18CONTENTAdapter();
			}
			@Override
			public Adapter caseMSH19CONTENT(MSH19CONTENT object) {
				return createMSH19CONTENTAdapter();
			}
			@Override
			public Adapter caseMSH1CONTENT(MSH1CONTENT object) {
				return createMSH1CONTENTAdapter();
			}
			@Override
			public Adapter caseMSH20CONTENT(MSH20CONTENT object) {
				return createMSH20CONTENTAdapter();
			}
			@Override
			public Adapter caseMSH21CONTENT(MSH21CONTENT object) {
				return createMSH21CONTENTAdapter();
			}
			@Override
			public Adapter caseMSH2CONTENT(MSH2CONTENT object) {
				return createMSH2CONTENTAdapter();
			}
			@Override
			public Adapter caseMSH3CONTENT(MSH3CONTENT object) {
				return createMSH3CONTENTAdapter();
			}
			@Override
			public Adapter caseMSH4CONTENT(MSH4CONTENT object) {
				return createMSH4CONTENTAdapter();
			}
			@Override
			public Adapter caseMSH5CONTENT(MSH5CONTENT object) {
				return createMSH5CONTENTAdapter();
			}
			@Override
			public Adapter caseMSH6CONTENT(MSH6CONTENT object) {
				return createMSH6CONTENTAdapter();
			}
			@Override
			public Adapter caseMSH7CONTENT(MSH7CONTENT object) {
				return createMSH7CONTENTAdapter();
			}
			@Override
			public Adapter caseMSH8CONTENT(MSH8CONTENT object) {
				return createMSH8CONTENTAdapter();
			}
			@Override
			public Adapter caseMSH9CONTENT(MSH9CONTENT object) {
				return createMSH9CONTENTAdapter();
			}
			@Override
			public Adapter caseMSHCONTENT(MSHCONTENT object) {
				return createMSHCONTENTAdapter();
			}
			@Override
			public Adapter caseNA(NA object) {
				return createNAAdapter();
			}
			@Override
			public Adapter caseNA1CONTENT(NA1CONTENT object) {
				return createNA1CONTENTAdapter();
			}
			@Override
			public Adapter caseNA2CONTENT(NA2CONTENT object) {
				return createNA2CONTENTAdapter();
			}
			@Override
			public Adapter caseNA3CONTENT(NA3CONTENT object) {
				return createNA3CONTENTAdapter();
			}
			@Override
			public Adapter caseNA4CONTENT(NA4CONTENT object) {
				return createNA4CONTENTAdapter();
			}
			@Override
			public Adapter caseNCK1CONTENT(NCK1CONTENT object) {
				return createNCK1CONTENTAdapter();
			}
			@Override
			public Adapter caseNCKCONTENT(NCKCONTENT object) {
				return createNCKCONTENTAdapter();
			}
			@Override
			public Adapter caseNDL(NDL object) {
				return createNDLAdapter();
			}
			@Override
			public Adapter caseNDL10CONTENT(NDL10CONTENT object) {
				return createNDL10CONTENTAdapter();
			}
			@Override
			public Adapter caseNDL11CONTENT(NDL11CONTENT object) {
				return createNDL11CONTENTAdapter();
			}
			@Override
			public Adapter caseNDL1CONTENT(NDL1CONTENT object) {
				return createNDL1CONTENTAdapter();
			}
			@Override
			public Adapter caseNDL2CONTENT(NDL2CONTENT object) {
				return createNDL2CONTENTAdapter();
			}
			@Override
			public Adapter caseNDL3CONTENT(NDL3CONTENT object) {
				return createNDL3CONTENTAdapter();
			}
			@Override
			public Adapter caseNDL4CONTENT(NDL4CONTENT object) {
				return createNDL4CONTENTAdapter();
			}
			@Override
			public Adapter caseNDL5CONTENT(NDL5CONTENT object) {
				return createNDL5CONTENTAdapter();
			}
			@Override
			public Adapter caseNDL6CONTENT(NDL6CONTENT object) {
				return createNDL6CONTENTAdapter();
			}
			@Override
			public Adapter caseNDL7CONTENT(NDL7CONTENT object) {
				return createNDL7CONTENTAdapter();
			}
			@Override
			public Adapter caseNDL8CONTENT(NDL8CONTENT object) {
				return createNDL8CONTENTAdapter();
			}
			@Override
			public Adapter caseNDL9CONTENT(NDL9CONTENT object) {
				return createNDL9CONTENTAdapter();
			}
			@Override
			public Adapter caseNDS1CONTENT(NDS1CONTENT object) {
				return createNDS1CONTENTAdapter();
			}
			@Override
			public Adapter caseNDS2CONTENT(NDS2CONTENT object) {
				return createNDS2CONTENTAdapter();
			}
			@Override
			public Adapter caseNDS3CONTENT(NDS3CONTENT object) {
				return createNDS3CONTENTAdapter();
			}
			@Override
			public Adapter caseNDS4CONTENT(NDS4CONTENT object) {
				return createNDS4CONTENTAdapter();
			}
			@Override
			public Adapter caseNDSCONTENT(NDSCONTENT object) {
				return createNDSCONTENTAdapter();
			}
			@Override
			public Adapter caseNK110CONTENT(NK110CONTENT object) {
				return createNK110CONTENTAdapter();
			}
			@Override
			public Adapter caseNK111CONTENT(NK111CONTENT object) {
				return createNK111CONTENTAdapter();
			}
			@Override
			public Adapter caseNK112CONTENT(NK112CONTENT object) {
				return createNK112CONTENTAdapter();
			}
			@Override
			public Adapter caseNK113CONTENT(NK113CONTENT object) {
				return createNK113CONTENTAdapter();
			}
			@Override
			public Adapter caseNK114CONTENT(NK114CONTENT object) {
				return createNK114CONTENTAdapter();
			}
			@Override
			public Adapter caseNK115CONTENT(NK115CONTENT object) {
				return createNK115CONTENTAdapter();
			}
			@Override
			public Adapter caseNK116CONTENT(NK116CONTENT object) {
				return createNK116CONTENTAdapter();
			}
			@Override
			public Adapter caseNK117CONTENT(NK117CONTENT object) {
				return createNK117CONTENTAdapter();
			}
			@Override
			public Adapter caseNK118CONTENT(NK118CONTENT object) {
				return createNK118CONTENTAdapter();
			}
			@Override
			public Adapter caseNK119CONTENT(NK119CONTENT object) {
				return createNK119CONTENTAdapter();
			}
			@Override
			public Adapter caseNK11CONTENT(NK11CONTENT object) {
				return createNK11CONTENTAdapter();
			}
			@Override
			public Adapter caseNK120CONTENT(NK120CONTENT object) {
				return createNK120CONTENTAdapter();
			}
			@Override
			public Adapter caseNK121CONTENT(NK121CONTENT object) {
				return createNK121CONTENTAdapter();
			}
			@Override
			public Adapter caseNK122CONTENT(NK122CONTENT object) {
				return createNK122CONTENTAdapter();
			}
			@Override
			public Adapter caseNK123CONTENT(NK123CONTENT object) {
				return createNK123CONTENTAdapter();
			}
			@Override
			public Adapter caseNK124CONTENT(NK124CONTENT object) {
				return createNK124CONTENTAdapter();
			}
			@Override
			public Adapter caseNK125CONTENT(NK125CONTENT object) {
				return createNK125CONTENTAdapter();
			}
			@Override
			public Adapter caseNK126CONTENT(NK126CONTENT object) {
				return createNK126CONTENTAdapter();
			}
			@Override
			public Adapter caseNK127CONTENT(NK127CONTENT object) {
				return createNK127CONTENTAdapter();
			}
			@Override
			public Adapter caseNK128CONTENT(NK128CONTENT object) {
				return createNK128CONTENTAdapter();
			}
			@Override
			public Adapter caseNK129CONTENT(NK129CONTENT object) {
				return createNK129CONTENTAdapter();
			}
			@Override
			public Adapter caseNK12CONTENT(NK12CONTENT object) {
				return createNK12CONTENTAdapter();
			}
			@Override
			public Adapter caseNK130CONTENT(NK130CONTENT object) {
				return createNK130CONTENTAdapter();
			}
			@Override
			public Adapter caseNK131CONTENT(NK131CONTENT object) {
				return createNK131CONTENTAdapter();
			}
			@Override
			public Adapter caseNK132CONTENT(NK132CONTENT object) {
				return createNK132CONTENTAdapter();
			}
			@Override
			public Adapter caseNK133CONTENT(NK133CONTENT object) {
				return createNK133CONTENTAdapter();
			}
			@Override
			public Adapter caseNK134CONTENT(NK134CONTENT object) {
				return createNK134CONTENTAdapter();
			}
			@Override
			public Adapter caseNK135CONTENT(NK135CONTENT object) {
				return createNK135CONTENTAdapter();
			}
			@Override
			public Adapter caseNK136CONTENT(NK136CONTENT object) {
				return createNK136CONTENTAdapter();
			}
			@Override
			public Adapter caseNK137CONTENT(NK137CONTENT object) {
				return createNK137CONTENTAdapter();
			}
			@Override
			public Adapter caseNK138CONTENT(NK138CONTENT object) {
				return createNK138CONTENTAdapter();
			}
			@Override
			public Adapter caseNK139CONTENT(NK139CONTENT object) {
				return createNK139CONTENTAdapter();
			}
			@Override
			public Adapter caseNK13CONTENT(NK13CONTENT object) {
				return createNK13CONTENTAdapter();
			}
			@Override
			public Adapter caseNK14CONTENT(NK14CONTENT object) {
				return createNK14CONTENTAdapter();
			}
			@Override
			public Adapter caseNK15CONTENT(NK15CONTENT object) {
				return createNK15CONTENTAdapter();
			}
			@Override
			public Adapter caseNK16CONTENT(NK16CONTENT object) {
				return createNK16CONTENTAdapter();
			}
			@Override
			public Adapter caseNK17CONTENT(NK17CONTENT object) {
				return createNK17CONTENTAdapter();
			}
			@Override
			public Adapter caseNK18CONTENT(NK18CONTENT object) {
				return createNK18CONTENTAdapter();
			}
			@Override
			public Adapter caseNK19CONTENT(NK19CONTENT object) {
				return createNK19CONTENTAdapter();
			}
			@Override
			public Adapter caseNK1CONTENT(NK1CONTENT object) {
				return createNK1CONTENTAdapter();
			}
			@Override
			public Adapter caseNPU1CONTENT(NPU1CONTENT object) {
				return createNPU1CONTENTAdapter();
			}
			@Override
			public Adapter caseNPU2CONTENT(NPU2CONTENT object) {
				return createNPU2CONTENTAdapter();
			}
			@Override
			public Adapter caseNPUCONTENT(NPUCONTENT object) {
				return createNPUCONTENTAdapter();
			}
			@Override
			public Adapter caseNR(NR object) {
				return createNRAdapter();
			}
			@Override
			public Adapter caseNR1CONTENT(NR1CONTENT object) {
				return createNR1CONTENTAdapter();
			}
			@Override
			public Adapter caseNR2CONTENT(NR2CONTENT object) {
				return createNR2CONTENTAdapter();
			}
			@Override
			public Adapter caseNSC1CONTENT(NSC1CONTENT object) {
				return createNSC1CONTENTAdapter();
			}
			@Override
			public Adapter caseNSC2CONTENT(NSC2CONTENT object) {
				return createNSC2CONTENTAdapter();
			}
			@Override
			public Adapter caseNSC3CONTENT(NSC3CONTENT object) {
				return createNSC3CONTENTAdapter();
			}
			@Override
			public Adapter caseNSC4CONTENT(NSC4CONTENT object) {
				return createNSC4CONTENTAdapter();
			}
			@Override
			public Adapter caseNSC5CONTENT(NSC5CONTENT object) {
				return createNSC5CONTENTAdapter();
			}
			@Override
			public Adapter caseNSC6CONTENT(NSC6CONTENT object) {
				return createNSC6CONTENTAdapter();
			}
			@Override
			public Adapter caseNSC7CONTENT(NSC7CONTENT object) {
				return createNSC7CONTENTAdapter();
			}
			@Override
			public Adapter caseNSC8CONTENT(NSC8CONTENT object) {
				return createNSC8CONTENTAdapter();
			}
			@Override
			public Adapter caseNSC9CONTENT(NSC9CONTENT object) {
				return createNSC9CONTENTAdapter();
			}
			@Override
			public Adapter caseNSCCONTENT(NSCCONTENT object) {
				return createNSCCONTENTAdapter();
			}
			@Override
			public Adapter caseNST10CONTENT(NST10CONTENT object) {
				return createNST10CONTENTAdapter();
			}
			@Override
			public Adapter caseNST11CONTENT(NST11CONTENT object) {
				return createNST11CONTENTAdapter();
			}
			@Override
			public Adapter caseNST12CONTENT(NST12CONTENT object) {
				return createNST12CONTENTAdapter();
			}
			@Override
			public Adapter caseNST13CONTENT(NST13CONTENT object) {
				return createNST13CONTENTAdapter();
			}
			@Override
			public Adapter caseNST14CONTENT(NST14CONTENT object) {
				return createNST14CONTENTAdapter();
			}
			@Override
			public Adapter caseNST15CONTENT(NST15CONTENT object) {
				return createNST15CONTENTAdapter();
			}
			@Override
			public Adapter caseNST1CONTENT(NST1CONTENT object) {
				return createNST1CONTENTAdapter();
			}
			@Override
			public Adapter caseNST2CONTENT(NST2CONTENT object) {
				return createNST2CONTENTAdapter();
			}
			@Override
			public Adapter caseNST3CONTENT(NST3CONTENT object) {
				return createNST3CONTENTAdapter();
			}
			@Override
			public Adapter caseNST4CONTENT(NST4CONTENT object) {
				return createNST4CONTENTAdapter();
			}
			@Override
			public Adapter caseNST5CONTENT(NST5CONTENT object) {
				return createNST5CONTENTAdapter();
			}
			@Override
			public Adapter caseNST6CONTENT(NST6CONTENT object) {
				return createNST6CONTENTAdapter();
			}
			@Override
			public Adapter caseNST7CONTENT(NST7CONTENT object) {
				return createNST7CONTENTAdapter();
			}
			@Override
			public Adapter caseNST8CONTENT(NST8CONTENT object) {
				return createNST8CONTENTAdapter();
			}
			@Override
			public Adapter caseNST9CONTENT(NST9CONTENT object) {
				return createNST9CONTENTAdapter();
			}
			@Override
			public Adapter caseNSTCONTENT(NSTCONTENT object) {
				return createNSTCONTENTAdapter();
			}
			@Override
			public Adapter caseNTE1CONTENT(NTE1CONTENT object) {
				return createNTE1CONTENTAdapter();
			}
			@Override
			public Adapter caseNTE2CONTENT(NTE2CONTENT object) {
				return createNTE2CONTENTAdapter();
			}
			@Override
			public Adapter caseNTE3CONTENT(NTE3CONTENT object) {
				return createNTE3CONTENTAdapter();
			}
			@Override
			public Adapter caseNTE4CONTENT(NTE4CONTENT object) {
				return createNTE4CONTENTAdapter();
			}
			@Override
			public Adapter caseNTECONTENT(NTECONTENT object) {
				return createNTECONTENTAdapter();
			}
			@Override
			public Adapter caseOBR10CONTENT(OBR10CONTENT object) {
				return createOBR10CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR11CONTENT(OBR11CONTENT object) {
				return createOBR11CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR12CONTENT(OBR12CONTENT object) {
				return createOBR12CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR13CONTENT(OBR13CONTENT object) {
				return createOBR13CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR14CONTENT(OBR14CONTENT object) {
				return createOBR14CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR15CONTENT(OBR15CONTENT object) {
				return createOBR15CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR16CONTENT(OBR16CONTENT object) {
				return createOBR16CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR17CONTENT(OBR17CONTENT object) {
				return createOBR17CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR18CONTENT(OBR18CONTENT object) {
				return createOBR18CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR19CONTENT(OBR19CONTENT object) {
				return createOBR19CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR1CONTENT(OBR1CONTENT object) {
				return createOBR1CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR20CONTENT(OBR20CONTENT object) {
				return createOBR20CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR21CONTENT(OBR21CONTENT object) {
				return createOBR21CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR22CONTENT(OBR22CONTENT object) {
				return createOBR22CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR23CONTENT(OBR23CONTENT object) {
				return createOBR23CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR24CONTENT(OBR24CONTENT object) {
				return createOBR24CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR25CONTENT(OBR25CONTENT object) {
				return createOBR25CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR26CONTENT(OBR26CONTENT object) {
				return createOBR26CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR27CONTENT(OBR27CONTENT object) {
				return createOBR27CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR28CONTENT(OBR28CONTENT object) {
				return createOBR28CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR29CONTENT(OBR29CONTENT object) {
				return createOBR29CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR2CONTENT(OBR2CONTENT object) {
				return createOBR2CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR30CONTENT(OBR30CONTENT object) {
				return createOBR30CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR31CONTENT(OBR31CONTENT object) {
				return createOBR31CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR32CONTENT(OBR32CONTENT object) {
				return createOBR32CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR33CONTENT(OBR33CONTENT object) {
				return createOBR33CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR34CONTENT(OBR34CONTENT object) {
				return createOBR34CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR35CONTENT(OBR35CONTENT object) {
				return createOBR35CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR36CONTENT(OBR36CONTENT object) {
				return createOBR36CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR37CONTENT(OBR37CONTENT object) {
				return createOBR37CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR38CONTENT(OBR38CONTENT object) {
				return createOBR38CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR39CONTENT(OBR39CONTENT object) {
				return createOBR39CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR3CONTENT(OBR3CONTENT object) {
				return createOBR3CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR40CONTENT(OBR40CONTENT object) {
				return createOBR40CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR41CONTENT(OBR41CONTENT object) {
				return createOBR41CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR42CONTENT(OBR42CONTENT object) {
				return createOBR42CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR43CONTENT(OBR43CONTENT object) {
				return createOBR43CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR44CONTENT(OBR44CONTENT object) {
				return createOBR44CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR45CONTENT(OBR45CONTENT object) {
				return createOBR45CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR46CONTENT(OBR46CONTENT object) {
				return createOBR46CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR47CONTENT(OBR47CONTENT object) {
				return createOBR47CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR48CONTENT(OBR48CONTENT object) {
				return createOBR48CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR49CONTENT(OBR49CONTENT object) {
				return createOBR49CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR4CONTENT(OBR4CONTENT object) {
				return createOBR4CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR5CONTENT(OBR5CONTENT object) {
				return createOBR5CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR6CONTENT(OBR6CONTENT object) {
				return createOBR6CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR7CONTENT(OBR7CONTENT object) {
				return createOBR7CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR8CONTENT(OBR8CONTENT object) {
				return createOBR8CONTENTAdapter();
			}
			@Override
			public Adapter caseOBR9CONTENT(OBR9CONTENT object) {
				return createOBR9CONTENTAdapter();
			}
			@Override
			public Adapter caseOBRCONTENT(OBRCONTENT object) {
				return createOBRCONTENTAdapter();
			}
			@Override
			public Adapter caseOBX10CONTENT(OBX10CONTENT object) {
				return createOBX10CONTENTAdapter();
			}
			@Override
			public Adapter caseOBX11CONTENT(OBX11CONTENT object) {
				return createOBX11CONTENTAdapter();
			}
			@Override
			public Adapter caseOBX12CONTENT(OBX12CONTENT object) {
				return createOBX12CONTENTAdapter();
			}
			@Override
			public Adapter caseOBX13CONTENT(OBX13CONTENT object) {
				return createOBX13CONTENTAdapter();
			}
			@Override
			public Adapter caseOBX14CONTENT(OBX14CONTENT object) {
				return createOBX14CONTENTAdapter();
			}
			@Override
			public Adapter caseOBX15CONTENT(OBX15CONTENT object) {
				return createOBX15CONTENTAdapter();
			}
			@Override
			public Adapter caseOBX16CONTENT(OBX16CONTENT object) {
				return createOBX16CONTENTAdapter();
			}
			@Override
			public Adapter caseOBX17CONTENT(OBX17CONTENT object) {
				return createOBX17CONTENTAdapter();
			}
			@Override
			public Adapter caseOBX18CONTENT(OBX18CONTENT object) {
				return createOBX18CONTENTAdapter();
			}
			@Override
			public Adapter caseOBX19CONTENT(OBX19CONTENT object) {
				return createOBX19CONTENTAdapter();
			}
			@Override
			public Adapter caseOBX1CONTENT(OBX1CONTENT object) {
				return createOBX1CONTENTAdapter();
			}
			@Override
			public Adapter caseOBX2CONTENT(OBX2CONTENT object) {
				return createOBX2CONTENTAdapter();
			}
			@Override
			public Adapter caseOBX3CONTENT(OBX3CONTENT object) {
				return createOBX3CONTENTAdapter();
			}
			@Override
			public Adapter caseOBX4CONTENT(OBX4CONTENT object) {
				return createOBX4CONTENTAdapter();
			}
			@Override
			public Adapter caseOBX5CONTENT(OBX5CONTENT object) {
				return createOBX5CONTENTAdapter();
			}
			@Override
			public Adapter caseOBX6CONTENT(OBX6CONTENT object) {
				return createOBX6CONTENTAdapter();
			}
			@Override
			public Adapter caseOBX7CONTENT(OBX7CONTENT object) {
				return createOBX7CONTENTAdapter();
			}
			@Override
			public Adapter caseOBX8CONTENT(OBX8CONTENT object) {
				return createOBX8CONTENTAdapter();
			}
			@Override
			public Adapter caseOBX9CONTENT(OBX9CONTENT object) {
				return createOBX9CONTENTAdapter();
			}
			@Override
			public Adapter caseOBXCONTENT(OBXCONTENT object) {
				return createOBXCONTENTAdapter();
			}
			@Override
			public Adapter caseOCD(OCD object) {
				return createOCDAdapter();
			}
			@Override
			public Adapter caseOCD1CONTENT(OCD1CONTENT object) {
				return createOCD1CONTENTAdapter();
			}
			@Override
			public Adapter caseOCD2CONTENT(OCD2CONTENT object) {
				return createOCD2CONTENTAdapter();
			}
			@Override
			public Adapter caseODS1CONTENT(ODS1CONTENT object) {
				return createODS1CONTENTAdapter();
			}
			@Override
			public Adapter caseODS2CONTENT(ODS2CONTENT object) {
				return createODS2CONTENTAdapter();
			}
			@Override
			public Adapter caseODS3CONTENT(ODS3CONTENT object) {
				return createODS3CONTENTAdapter();
			}
			@Override
			public Adapter caseODS4CONTENT(ODS4CONTENT object) {
				return createODS4CONTENTAdapter();
			}
			@Override
			public Adapter caseODSCONTENT(ODSCONTENT object) {
				return createODSCONTENTAdapter();
			}
			@Override
			public Adapter caseODT1CONTENT(ODT1CONTENT object) {
				return createODT1CONTENTAdapter();
			}
			@Override
			public Adapter caseODT2CONTENT(ODT2CONTENT object) {
				return createODT2CONTENTAdapter();
			}
			@Override
			public Adapter caseODT3CONTENT(ODT3CONTENT object) {
				return createODT3CONTENTAdapter();
			}
			@Override
			public Adapter caseODTCONTENT(ODTCONTENT object) {
				return createODTCONTENTAdapter();
			}
			@Override
			public Adapter caseOM110CONTENT(OM110CONTENT object) {
				return createOM110CONTENTAdapter();
			}
			@Override
			public Adapter caseOM111CONTENT(OM111CONTENT object) {
				return createOM111CONTENTAdapter();
			}
			@Override
			public Adapter caseOM112CONTENT(OM112CONTENT object) {
				return createOM112CONTENTAdapter();
			}
			@Override
			public Adapter caseOM113CONTENT(OM113CONTENT object) {
				return createOM113CONTENTAdapter();
			}
			@Override
			public Adapter caseOM114CONTENT(OM114CONTENT object) {
				return createOM114CONTENTAdapter();
			}
			@Override
			public Adapter caseOM115CONTENT(OM115CONTENT object) {
				return createOM115CONTENTAdapter();
			}
			@Override
			public Adapter caseOM116CONTENT(OM116CONTENT object) {
				return createOM116CONTENTAdapter();
			}
			@Override
			public Adapter caseOM117CONTENT(OM117CONTENT object) {
				return createOM117CONTENTAdapter();
			}
			@Override
			public Adapter caseOM118CONTENT(OM118CONTENT object) {
				return createOM118CONTENTAdapter();
			}
			@Override
			public Adapter caseOM119CONTENT(OM119CONTENT object) {
				return createOM119CONTENTAdapter();
			}
			@Override
			public Adapter caseOM11CONTENT(OM11CONTENT object) {
				return createOM11CONTENTAdapter();
			}
			@Override
			public Adapter caseOM120CONTENT(OM120CONTENT object) {
				return createOM120CONTENTAdapter();
			}
			@Override
			public Adapter caseOM121CONTENT(OM121CONTENT object) {
				return createOM121CONTENTAdapter();
			}
			@Override
			public Adapter caseOM122CONTENT(OM122CONTENT object) {
				return createOM122CONTENTAdapter();
			}
			@Override
			public Adapter caseOM123CONTENT(OM123CONTENT object) {
				return createOM123CONTENTAdapter();
			}
			@Override
			public Adapter caseOM124CONTENT(OM124CONTENT object) {
				return createOM124CONTENTAdapter();
			}
			@Override
			public Adapter caseOM125CONTENT(OM125CONTENT object) {
				return createOM125CONTENTAdapter();
			}
			@Override
			public Adapter caseOM126CONTENT(OM126CONTENT object) {
				return createOM126CONTENTAdapter();
			}
			@Override
			public Adapter caseOM127CONTENT(OM127CONTENT object) {
				return createOM127CONTENTAdapter();
			}
			@Override
			public Adapter caseOM128CONTENT(OM128CONTENT object) {
				return createOM128CONTENTAdapter();
			}
			@Override
			public Adapter caseOM129CONTENT(OM129CONTENT object) {
				return createOM129CONTENTAdapter();
			}
			@Override
			public Adapter caseOM12CONTENT(OM12CONTENT object) {
				return createOM12CONTENTAdapter();
			}
			@Override
			public Adapter caseOM130CONTENT(OM130CONTENT object) {
				return createOM130CONTENTAdapter();
			}
			@Override
			public Adapter caseOM131CONTENT(OM131CONTENT object) {
				return createOM131CONTENTAdapter();
			}
			@Override
			public Adapter caseOM132CONTENT(OM132CONTENT object) {
				return createOM132CONTENTAdapter();
			}
			@Override
			public Adapter caseOM133CONTENT(OM133CONTENT object) {
				return createOM133CONTENTAdapter();
			}
			@Override
			public Adapter caseOM134CONTENT(OM134CONTENT object) {
				return createOM134CONTENTAdapter();
			}
			@Override
			public Adapter caseOM135CONTENT(OM135CONTENT object) {
				return createOM135CONTENTAdapter();
			}
			@Override
			public Adapter caseOM136CONTENT(OM136CONTENT object) {
				return createOM136CONTENTAdapter();
			}
			@Override
			public Adapter caseOM137CONTENT(OM137CONTENT object) {
				return createOM137CONTENTAdapter();
			}
			@Override
			public Adapter caseOM138CONTENT(OM138CONTENT object) {
				return createOM138CONTENTAdapter();
			}
			@Override
			public Adapter caseOM139CONTENT(OM139CONTENT object) {
				return createOM139CONTENTAdapter();
			}
			@Override
			public Adapter caseOM13CONTENT(OM13CONTENT object) {
				return createOM13CONTENTAdapter();
			}
			@Override
			public Adapter caseOM140CONTENT(OM140CONTENT object) {
				return createOM140CONTENTAdapter();
			}
			@Override
			public Adapter caseOM141CONTENT(OM141CONTENT object) {
				return createOM141CONTENTAdapter();
			}
			@Override
			public Adapter caseOM142CONTENT(OM142CONTENT object) {
				return createOM142CONTENTAdapter();
			}
			@Override
			public Adapter caseOM143CONTENT(OM143CONTENT object) {
				return createOM143CONTENTAdapter();
			}
			@Override
			public Adapter caseOM144CONTENT(OM144CONTENT object) {
				return createOM144CONTENTAdapter();
			}
			@Override
			public Adapter caseOM145CONTENT(OM145CONTENT object) {
				return createOM145CONTENTAdapter();
			}
			@Override
			public Adapter caseOM146CONTENT(OM146CONTENT object) {
				return createOM146CONTENTAdapter();
			}
			@Override
			public Adapter caseOM147CONTENT(OM147CONTENT object) {
				return createOM147CONTENTAdapter();
			}
			@Override
			public Adapter caseOM14CONTENT(OM14CONTENT object) {
				return createOM14CONTENTAdapter();
			}
			@Override
			public Adapter caseOM15CONTENT(OM15CONTENT object) {
				return createOM15CONTENTAdapter();
			}
			@Override
			public Adapter caseOM16CONTENT(OM16CONTENT object) {
				return createOM16CONTENTAdapter();
			}
			@Override
			public Adapter caseOM17CONTENT(OM17CONTENT object) {
				return createOM17CONTENTAdapter();
			}
			@Override
			public Adapter caseOM18CONTENT(OM18CONTENT object) {
				return createOM18CONTENTAdapter();
			}
			@Override
			public Adapter caseOM19CONTENT(OM19CONTENT object) {
				return createOM19CONTENTAdapter();
			}
			@Override
			public Adapter caseOM1CONTENT(OM1CONTENT object) {
				return createOM1CONTENTAdapter();
			}
			@Override
			public Adapter caseOM210CONTENT(OM210CONTENT object) {
				return createOM210CONTENTAdapter();
			}
			@Override
			public Adapter caseOM21CONTENT(OM21CONTENT object) {
				return createOM21CONTENTAdapter();
			}
			@Override
			public Adapter caseOM22CONTENT(OM22CONTENT object) {
				return createOM22CONTENTAdapter();
			}
			@Override
			public Adapter caseOM23CONTENT(OM23CONTENT object) {
				return createOM23CONTENTAdapter();
			}
			@Override
			public Adapter caseOM24CONTENT(OM24CONTENT object) {
				return createOM24CONTENTAdapter();
			}
			@Override
			public Adapter caseOM25CONTENT(OM25CONTENT object) {
				return createOM25CONTENTAdapter();
			}
			@Override
			public Adapter caseOM26CONTENT(OM26CONTENT object) {
				return createOM26CONTENTAdapter();
			}
			@Override
			public Adapter caseOM27CONTENT(OM27CONTENT object) {
				return createOM27CONTENTAdapter();
			}
			@Override
			public Adapter caseOM28CONTENT(OM28CONTENT object) {
				return createOM28CONTENTAdapter();
			}
			@Override
			public Adapter caseOM29CONTENT(OM29CONTENT object) {
				return createOM29CONTENTAdapter();
			}
			@Override
			public Adapter caseOM2CONTENT(OM2CONTENT object) {
				return createOM2CONTENTAdapter();
			}
			@Override
			public Adapter caseOM31CONTENT(OM31CONTENT object) {
				return createOM31CONTENTAdapter();
			}
			@Override
			public Adapter caseOM32CONTENT(OM32CONTENT object) {
				return createOM32CONTENTAdapter();
			}
			@Override
			public Adapter caseOM33CONTENT(OM33CONTENT object) {
				return createOM33CONTENTAdapter();
			}
			@Override
			public Adapter caseOM34CONTENT(OM34CONTENT object) {
				return createOM34CONTENTAdapter();
			}
			@Override
			public Adapter caseOM35CONTENT(OM35CONTENT object) {
				return createOM35CONTENTAdapter();
			}
			@Override
			public Adapter caseOM36CONTENT(OM36CONTENT object) {
				return createOM36CONTENTAdapter();
			}
			@Override
			public Adapter caseOM37CONTENT(OM37CONTENT object) {
				return createOM37CONTENTAdapter();
			}
			@Override
			public Adapter caseOM3CONTENT(OM3CONTENT object) {
				return createOM3CONTENTAdapter();
			}
			@Override
			public Adapter caseOM410CONTENT(OM410CONTENT object) {
				return createOM410CONTENTAdapter();
			}
			@Override
			public Adapter caseOM411CONTENT(OM411CONTENT object) {
				return createOM411CONTENTAdapter();
			}
			@Override
			public Adapter caseOM412CONTENT(OM412CONTENT object) {
				return createOM412CONTENTAdapter();
			}
			@Override
			public Adapter caseOM413CONTENT(OM413CONTENT object) {
				return createOM413CONTENTAdapter();
			}
			@Override
			public Adapter caseOM414CONTENT(OM414CONTENT object) {
				return createOM414CONTENTAdapter();
			}
			@Override
			public Adapter caseOM41CONTENT(OM41CONTENT object) {
				return createOM41CONTENTAdapter();
			}
			@Override
			public Adapter caseOM42CONTENT(OM42CONTENT object) {
				return createOM42CONTENTAdapter();
			}
			@Override
			public Adapter caseOM43CONTENT(OM43CONTENT object) {
				return createOM43CONTENTAdapter();
			}
			@Override
			public Adapter caseOM44CONTENT(OM44CONTENT object) {
				return createOM44CONTENTAdapter();
			}
			@Override
			public Adapter caseOM45CONTENT(OM45CONTENT object) {
				return createOM45CONTENTAdapter();
			}
			@Override
			public Adapter caseOM46CONTENT(OM46CONTENT object) {
				return createOM46CONTENTAdapter();
			}
			@Override
			public Adapter caseOM47CONTENT(OM47CONTENT object) {
				return createOM47CONTENTAdapter();
			}
			@Override
			public Adapter caseOM48CONTENT(OM48CONTENT object) {
				return createOM48CONTENTAdapter();
			}
			@Override
			public Adapter caseOM49CONTENT(OM49CONTENT object) {
				return createOM49CONTENTAdapter();
			}
			@Override
			public Adapter caseOM4CONTENT(OM4CONTENT object) {
				return createOM4CONTENTAdapter();
			}
			@Override
			public Adapter caseOM51CONTENT(OM51CONTENT object) {
				return createOM51CONTENTAdapter();
			}
			@Override
			public Adapter caseOM52CONTENT(OM52CONTENT object) {
				return createOM52CONTENTAdapter();
			}
			@Override
			public Adapter caseOM53CONTENT(OM53CONTENT object) {
				return createOM53CONTENTAdapter();
			}
			@Override
			public Adapter caseOM5CONTENT(OM5CONTENT object) {
				return createOM5CONTENTAdapter();
			}
			@Override
			public Adapter caseOM61CONTENT(OM61CONTENT object) {
				return createOM61CONTENTAdapter();
			}
			@Override
			public Adapter caseOM62CONTENT(OM62CONTENT object) {
				return createOM62CONTENTAdapter();
			}
			@Override
			public Adapter caseOM6CONTENT(OM6CONTENT object) {
				return createOM6CONTENTAdapter();
			}
			@Override
			public Adapter caseOM710CONTENT(OM710CONTENT object) {
				return createOM710CONTENTAdapter();
			}
			@Override
			public Adapter caseOM711CONTENT(OM711CONTENT object) {
				return createOM711CONTENTAdapter();
			}
			@Override
			public Adapter caseOM712CONTENT(OM712CONTENT object) {
				return createOM712CONTENTAdapter();
			}
			@Override
			public Adapter caseOM713CONTENT(OM713CONTENT object) {
				return createOM713CONTENTAdapter();
			}
			@Override
			public Adapter caseOM714CONTENT(OM714CONTENT object) {
				return createOM714CONTENTAdapter();
			}
			@Override
			public Adapter caseOM715CONTENT(OM715CONTENT object) {
				return createOM715CONTENTAdapter();
			}
			@Override
			public Adapter caseOM716CONTENT(OM716CONTENT object) {
				return createOM716CONTENTAdapter();
			}
			@Override
			public Adapter caseOM717CONTENT(OM717CONTENT object) {
				return createOM717CONTENTAdapter();
			}
			@Override
			public Adapter caseOM718CONTENT(OM718CONTENT object) {
				return createOM718CONTENTAdapter();
			}
			@Override
			public Adapter caseOM719CONTENT(OM719CONTENT object) {
				return createOM719CONTENTAdapter();
			}
			@Override
			public Adapter caseOM71CONTENT(OM71CONTENT object) {
				return createOM71CONTENTAdapter();
			}
			@Override
			public Adapter caseOM720CONTENT(OM720CONTENT object) {
				return createOM720CONTENTAdapter();
			}
			@Override
			public Adapter caseOM721CONTENT(OM721CONTENT object) {
				return createOM721CONTENTAdapter();
			}
			@Override
			public Adapter caseOM722CONTENT(OM722CONTENT object) {
				return createOM722CONTENTAdapter();
			}
			@Override
			public Adapter caseOM723CONTENT(OM723CONTENT object) {
				return createOM723CONTENTAdapter();
			}
			@Override
			public Adapter caseOM724CONTENT(OM724CONTENT object) {
				return createOM724CONTENTAdapter();
			}
			@Override
			public Adapter caseOM72CONTENT(OM72CONTENT object) {
				return createOM72CONTENTAdapter();
			}
			@Override
			public Adapter caseOM73CONTENT(OM73CONTENT object) {
				return createOM73CONTENTAdapter();
			}
			@Override
			public Adapter caseOM74CONTENT(OM74CONTENT object) {
				return createOM74CONTENTAdapter();
			}
			@Override
			public Adapter caseOM75CONTENT(OM75CONTENT object) {
				return createOM75CONTENTAdapter();
			}
			@Override
			public Adapter caseOM76CONTENT(OM76CONTENT object) {
				return createOM76CONTENTAdapter();
			}
			@Override
			public Adapter caseOM77CONTENT(OM77CONTENT object) {
				return createOM77CONTENTAdapter();
			}
			@Override
			public Adapter caseOM78CONTENT(OM78CONTENT object) {
				return createOM78CONTENTAdapter();
			}
			@Override
			public Adapter caseOM79CONTENT(OM79CONTENT object) {
				return createOM79CONTENTAdapter();
			}
			@Override
			public Adapter caseOM7CONTENT(OM7CONTENT object) {
				return createOM7CONTENTAdapter();
			}
			@Override
			public Adapter caseORC10CONTENT(ORC10CONTENT object) {
				return createORC10CONTENTAdapter();
			}
			@Override
			public Adapter caseORC11CONTENT(ORC11CONTENT object) {
				return createORC11CONTENTAdapter();
			}
			@Override
			public Adapter caseORC12CONTENT(ORC12CONTENT object) {
				return createORC12CONTENTAdapter();
			}
			@Override
			public Adapter caseORC13CONTENT(ORC13CONTENT object) {
				return createORC13CONTENTAdapter();
			}
			@Override
			public Adapter caseORC14CONTENT(ORC14CONTENT object) {
				return createORC14CONTENTAdapter();
			}
			@Override
			public Adapter caseORC15CONTENT(ORC15CONTENT object) {
				return createORC15CONTENTAdapter();
			}
			@Override
			public Adapter caseORC16CONTENT(ORC16CONTENT object) {
				return createORC16CONTENTAdapter();
			}
			@Override
			public Adapter caseORC17CONTENT(ORC17CONTENT object) {
				return createORC17CONTENTAdapter();
			}
			@Override
			public Adapter caseORC18CONTENT(ORC18CONTENT object) {
				return createORC18CONTENTAdapter();
			}
			@Override
			public Adapter caseORC19CONTENT(ORC19CONTENT object) {
				return createORC19CONTENTAdapter();
			}
			@Override
			public Adapter caseORC1CONTENT(ORC1CONTENT object) {
				return createORC1CONTENTAdapter();
			}
			@Override
			public Adapter caseORC20CONTENT(ORC20CONTENT object) {
				return createORC20CONTENTAdapter();
			}
			@Override
			public Adapter caseORC21CONTENT(ORC21CONTENT object) {
				return createORC21CONTENTAdapter();
			}
			@Override
			public Adapter caseORC22CONTENT(ORC22CONTENT object) {
				return createORC22CONTENTAdapter();
			}
			@Override
			public Adapter caseORC23CONTENT(ORC23CONTENT object) {
				return createORC23CONTENTAdapter();
			}
			@Override
			public Adapter caseORC24CONTENT(ORC24CONTENT object) {
				return createORC24CONTENTAdapter();
			}
			@Override
			public Adapter caseORC25CONTENT(ORC25CONTENT object) {
				return createORC25CONTENTAdapter();
			}
			@Override
			public Adapter caseORC26CONTENT(ORC26CONTENT object) {
				return createORC26CONTENTAdapter();
			}
			@Override
			public Adapter caseORC27CONTENT(ORC27CONTENT object) {
				return createORC27CONTENTAdapter();
			}
			@Override
			public Adapter caseORC28CONTENT(ORC28CONTENT object) {
				return createORC28CONTENTAdapter();
			}
			@Override
			public Adapter caseORC29CONTENT(ORC29CONTENT object) {
				return createORC29CONTENTAdapter();
			}
			@Override
			public Adapter caseORC2CONTENT(ORC2CONTENT object) {
				return createORC2CONTENTAdapter();
			}
			@Override
			public Adapter caseORC30CONTENT(ORC30CONTENT object) {
				return createORC30CONTENTAdapter();
			}
			@Override
			public Adapter caseORC3CONTENT(ORC3CONTENT object) {
				return createORC3CONTENTAdapter();
			}
			@Override
			public Adapter caseORC4CONTENT(ORC4CONTENT object) {
				return createORC4CONTENTAdapter();
			}
			@Override
			public Adapter caseORC5CONTENT(ORC5CONTENT object) {
				return createORC5CONTENTAdapter();
			}
			@Override
			public Adapter caseORC6CONTENT(ORC6CONTENT object) {
				return createORC6CONTENTAdapter();
			}
			@Override
			public Adapter caseORC7CONTENT(ORC7CONTENT object) {
				return createORC7CONTENTAdapter();
			}
			@Override
			public Adapter caseORC8CONTENT(ORC8CONTENT object) {
				return createORC8CONTENTAdapter();
			}
			@Override
			public Adapter caseORC9CONTENT(ORC9CONTENT object) {
				return createORC9CONTENTAdapter();
			}
			@Override
			public Adapter caseORCCONTENT(ORCCONTENT object) {
				return createORCCONTENTAdapter();
			}
			@Override
			public Adapter caseORG10CONTENT(ORG10CONTENT object) {
				return createORG10CONTENTAdapter();
			}
			@Override
			public Adapter caseORG11CONTENT(ORG11CONTENT object) {
				return createORG11CONTENTAdapter();
			}
			@Override
			public Adapter caseORG12CONTENT(ORG12CONTENT object) {
				return createORG12CONTENTAdapter();
			}
			@Override
			public Adapter caseORG1CONTENT(ORG1CONTENT object) {
				return createORG1CONTENTAdapter();
			}
			@Override
			public Adapter caseORG2CONTENT(ORG2CONTENT object) {
				return createORG2CONTENTAdapter();
			}
			@Override
			public Adapter caseORG3CONTENT(ORG3CONTENT object) {
				return createORG3CONTENTAdapter();
			}
			@Override
			public Adapter caseORG4CONTENT(ORG4CONTENT object) {
				return createORG4CONTENTAdapter();
			}
			@Override
			public Adapter caseORG5CONTENT(ORG5CONTENT object) {
				return createORG5CONTENTAdapter();
			}
			@Override
			public Adapter caseORG6CONTENT(ORG6CONTENT object) {
				return createORG6CONTENTAdapter();
			}
			@Override
			public Adapter caseORG7CONTENT(ORG7CONTENT object) {
				return createORG7CONTENTAdapter();
			}
			@Override
			public Adapter caseORG8CONTENT(ORG8CONTENT object) {
				return createORG8CONTENTAdapter();
			}
			@Override
			public Adapter caseORG9CONTENT(ORG9CONTENT object) {
				return createORG9CONTENTAdapter();
			}
			@Override
			public Adapter caseORGCONTENT(ORGCONTENT object) {
				return createORGCONTENTAdapter();
			}
			@Override
			public Adapter caseOSD(OSD object) {
				return createOSDAdapter();
			}
			@Override
			public Adapter caseOSD10CONTENT(OSD10CONTENT object) {
				return createOSD10CONTENTAdapter();
			}
			@Override
			public Adapter caseOSD11CONTENT(OSD11CONTENT object) {
				return createOSD11CONTENTAdapter();
			}
			@Override
			public Adapter caseOSD1CONTENT(OSD1CONTENT object) {
				return createOSD1CONTENTAdapter();
			}
			@Override
			public Adapter caseOSD2CONTENT(OSD2CONTENT object) {
				return createOSD2CONTENTAdapter();
			}
			@Override
			public Adapter caseOSD3CONTENT(OSD3CONTENT object) {
				return createOSD3CONTENTAdapter();
			}
			@Override
			public Adapter caseOSD4CONTENT(OSD4CONTENT object) {
				return createOSD4CONTENTAdapter();
			}
			@Override
			public Adapter caseOSD5CONTENT(OSD5CONTENT object) {
				return createOSD5CONTENTAdapter();
			}
			@Override
			public Adapter caseOSD6CONTENT(OSD6CONTENT object) {
				return createOSD6CONTENTAdapter();
			}
			@Override
			public Adapter caseOSD7CONTENT(OSD7CONTENT object) {
				return createOSD7CONTENTAdapter();
			}
			@Override
			public Adapter caseOSD8CONTENT(OSD8CONTENT object) {
				return createOSD8CONTENTAdapter();
			}
			@Override
			public Adapter caseOSD9CONTENT(OSD9CONTENT object) {
				return createOSD9CONTENTAdapter();
			}
			@Override
			public Adapter caseOSP(OSP object) {
				return createOSPAdapter();
			}
			@Override
			public Adapter caseOSP1CONTENT(OSP1CONTENT object) {
				return createOSP1CONTENTAdapter();
			}
			@Override
			public Adapter caseOSP2CONTENT(OSP2CONTENT object) {
				return createOSP2CONTENTAdapter();
			}
			@Override
			public Adapter caseOSP3CONTENT(OSP3CONTENT object) {
				return createOSP3CONTENTAdapter();
			}
			@Override
			public Adapter caseOVR1CONTENT(OVR1CONTENT object) {
				return createOVR1CONTENTAdapter();
			}
			@Override
			public Adapter caseOVR2CONTENT(OVR2CONTENT object) {
				return createOVR2CONTENTAdapter();
			}
			@Override
			public Adapter caseOVR3CONTENT(OVR3CONTENT object) {
				return createOVR3CONTENTAdapter();
			}
			@Override
			public Adapter caseOVR4CONTENT(OVR4CONTENT object) {
				return createOVR4CONTENTAdapter();
			}
			@Override
			public Adapter caseOVR5CONTENT(OVR5CONTENT object) {
				return createOVR5CONTENTAdapter();
			}
			@Override
			public Adapter caseOVRCONTENT(OVRCONTENT object) {
				return createOVRCONTENTAdapter();
			}
			@Override
			public Adapter casePCR10CONTENT(PCR10CONTENT object) {
				return createPCR10CONTENTAdapter();
			}
			@Override
			public Adapter casePCR11CONTENT(PCR11CONTENT object) {
				return createPCR11CONTENTAdapter();
			}
			@Override
			public Adapter casePCR12CONTENT(PCR12CONTENT object) {
				return createPCR12CONTENTAdapter();
			}
			@Override
			public Adapter casePCR13CONTENT(PCR13CONTENT object) {
				return createPCR13CONTENTAdapter();
			}
			@Override
			public Adapter casePCR14CONTENT(PCR14CONTENT object) {
				return createPCR14CONTENTAdapter();
			}
			@Override
			public Adapter casePCR15CONTENT(PCR15CONTENT object) {
				return createPCR15CONTENTAdapter();
			}
			@Override
			public Adapter casePCR16CONTENT(PCR16CONTENT object) {
				return createPCR16CONTENTAdapter();
			}
			@Override
			public Adapter casePCR17CONTENT(PCR17CONTENT object) {
				return createPCR17CONTENTAdapter();
			}
			@Override
			public Adapter casePCR18CONTENT(PCR18CONTENT object) {
				return createPCR18CONTENTAdapter();
			}
			@Override
			public Adapter casePCR19CONTENT(PCR19CONTENT object) {
				return createPCR19CONTENTAdapter();
			}
			@Override
			public Adapter casePCR1CONTENT(PCR1CONTENT object) {
				return createPCR1CONTENTAdapter();
			}
			@Override
			public Adapter casePCR20CONTENT(PCR20CONTENT object) {
				return createPCR20CONTENTAdapter();
			}
			@Override
			public Adapter casePCR21CONTENT(PCR21CONTENT object) {
				return createPCR21CONTENTAdapter();
			}
			@Override
			public Adapter casePCR22CONTENT(PCR22CONTENT object) {
				return createPCR22CONTENTAdapter();
			}
			@Override
			public Adapter casePCR23CONTENT(PCR23CONTENT object) {
				return createPCR23CONTENTAdapter();
			}
			@Override
			public Adapter casePCR2CONTENT(PCR2CONTENT object) {
				return createPCR2CONTENTAdapter();
			}
			@Override
			public Adapter casePCR3CONTENT(PCR3CONTENT object) {
				return createPCR3CONTENTAdapter();
			}
			@Override
			public Adapter casePCR4CONTENT(PCR4CONTENT object) {
				return createPCR4CONTENTAdapter();
			}
			@Override
			public Adapter casePCR5CONTENT(PCR5CONTENT object) {
				return createPCR5CONTENTAdapter();
			}
			@Override
			public Adapter casePCR6CONTENT(PCR6CONTENT object) {
				return createPCR6CONTENTAdapter();
			}
			@Override
			public Adapter casePCR7CONTENT(PCR7CONTENT object) {
				return createPCR7CONTENTAdapter();
			}
			@Override
			public Adapter casePCR8CONTENT(PCR8CONTENT object) {
				return createPCR8CONTENTAdapter();
			}
			@Override
			public Adapter casePCR9CONTENT(PCR9CONTENT object) {
				return createPCR9CONTENTAdapter();
			}
			@Override
			public Adapter casePCRCONTENT(PCRCONTENT object) {
				return createPCRCONTENTAdapter();
			}
			@Override
			public Adapter casePD110CONTENT(PD110CONTENT object) {
				return createPD110CONTENTAdapter();
			}
			@Override
			public Adapter casePD111CONTENT(PD111CONTENT object) {
				return createPD111CONTENTAdapter();
			}
			@Override
			public Adapter casePD112CONTENT(PD112CONTENT object) {
				return createPD112CONTENTAdapter();
			}
			@Override
			public Adapter casePD113CONTENT(PD113CONTENT object) {
				return createPD113CONTENTAdapter();
			}
			@Override
			public Adapter casePD114CONTENT(PD114CONTENT object) {
				return createPD114CONTENTAdapter();
			}
			@Override
			public Adapter casePD115CONTENT(PD115CONTENT object) {
				return createPD115CONTENTAdapter();
			}
			@Override
			public Adapter casePD116CONTENT(PD116CONTENT object) {
				return createPD116CONTENTAdapter();
			}
			@Override
			public Adapter casePD117CONTENT(PD117CONTENT object) {
				return createPD117CONTENTAdapter();
			}
			@Override
			public Adapter casePD118CONTENT(PD118CONTENT object) {
				return createPD118CONTENTAdapter();
			}
			@Override
			public Adapter casePD119CONTENT(PD119CONTENT object) {
				return createPD119CONTENTAdapter();
			}
			@Override
			public Adapter casePD11CONTENT(PD11CONTENT object) {
				return createPD11CONTENTAdapter();
			}
			@Override
			public Adapter casePD120CONTENT(PD120CONTENT object) {
				return createPD120CONTENTAdapter();
			}
			@Override
			public Adapter casePD121CONTENT(PD121CONTENT object) {
				return createPD121CONTENTAdapter();
			}
			@Override
			public Adapter casePD12CONTENT(PD12CONTENT object) {
				return createPD12CONTENTAdapter();
			}
			@Override
			public Adapter casePD13CONTENT(PD13CONTENT object) {
				return createPD13CONTENTAdapter();
			}
			@Override
			public Adapter casePD14CONTENT(PD14CONTENT object) {
				return createPD14CONTENTAdapter();
			}
			@Override
			public Adapter casePD15CONTENT(PD15CONTENT object) {
				return createPD15CONTENTAdapter();
			}
			@Override
			public Adapter casePD16CONTENT(PD16CONTENT object) {
				return createPD16CONTENTAdapter();
			}
			@Override
			public Adapter casePD17CONTENT(PD17CONTENT object) {
				return createPD17CONTENTAdapter();
			}
			@Override
			public Adapter casePD18CONTENT(PD18CONTENT object) {
				return createPD18CONTENTAdapter();
			}
			@Override
			public Adapter casePD19CONTENT(PD19CONTENT object) {
				return createPD19CONTENTAdapter();
			}
			@Override
			public Adapter casePD1CONTENT(PD1CONTENT object) {
				return createPD1CONTENTAdapter();
			}
			@Override
			public Adapter casePDA1CONTENT(PDA1CONTENT object) {
				return createPDA1CONTENTAdapter();
			}
			@Override
			public Adapter casePDA2CONTENT(PDA2CONTENT object) {
				return createPDA2CONTENTAdapter();
			}
			@Override
			public Adapter casePDA3CONTENT(PDA3CONTENT object) {
				return createPDA3CONTENTAdapter();
			}
			@Override
			public Adapter casePDA4CONTENT(PDA4CONTENT object) {
				return createPDA4CONTENTAdapter();
			}
			@Override
			public Adapter casePDA5CONTENT(PDA5CONTENT object) {
				return createPDA5CONTENTAdapter();
			}
			@Override
			public Adapter casePDA6CONTENT(PDA6CONTENT object) {
				return createPDA6CONTENTAdapter();
			}
			@Override
			public Adapter casePDA7CONTENT(PDA7CONTENT object) {
				return createPDA7CONTENTAdapter();
			}
			@Override
			public Adapter casePDA8CONTENT(PDA8CONTENT object) {
				return createPDA8CONTENTAdapter();
			}
			@Override
			public Adapter casePDA9CONTENT(PDA9CONTENT object) {
				return createPDA9CONTENTAdapter();
			}
			@Override
			public Adapter casePDACONTENT(PDACONTENT object) {
				return createPDACONTENTAdapter();
			}
			@Override
			public Adapter casePDC10CONTENT(PDC10CONTENT object) {
				return createPDC10CONTENTAdapter();
			}
			@Override
			public Adapter casePDC11CONTENT(PDC11CONTENT object) {
				return createPDC11CONTENTAdapter();
			}
			@Override
			public Adapter casePDC12CONTENT(PDC12CONTENT object) {
				return createPDC12CONTENTAdapter();
			}
			@Override
			public Adapter casePDC13CONTENT(PDC13CONTENT object) {
				return createPDC13CONTENTAdapter();
			}
			@Override
			public Adapter casePDC14CONTENT(PDC14CONTENT object) {
				return createPDC14CONTENTAdapter();
			}
			@Override
			public Adapter casePDC15CONTENT(PDC15CONTENT object) {
				return createPDC15CONTENTAdapter();
			}
			@Override
			public Adapter casePDC1CONTENT(PDC1CONTENT object) {
				return createPDC1CONTENTAdapter();
			}
			@Override
			public Adapter casePDC2CONTENT(PDC2CONTENT object) {
				return createPDC2CONTENTAdapter();
			}
			@Override
			public Adapter casePDC3CONTENT(PDC3CONTENT object) {
				return createPDC3CONTENTAdapter();
			}
			@Override
			public Adapter casePDC4CONTENT(PDC4CONTENT object) {
				return createPDC4CONTENTAdapter();
			}
			@Override
			public Adapter casePDC5CONTENT(PDC5CONTENT object) {
				return createPDC5CONTENTAdapter();
			}
			@Override
			public Adapter casePDC6CONTENT(PDC6CONTENT object) {
				return createPDC6CONTENTAdapter();
			}
			@Override
			public Adapter casePDC7CONTENT(PDC7CONTENT object) {
				return createPDC7CONTENTAdapter();
			}
			@Override
			public Adapter casePDC8CONTENT(PDC8CONTENT object) {
				return createPDC8CONTENTAdapter();
			}
			@Override
			public Adapter casePDC9CONTENT(PDC9CONTENT object) {
				return createPDC9CONTENTAdapter();
			}
			@Override
			public Adapter casePDCCONTENT(PDCCONTENT object) {
				return createPDCCONTENTAdapter();
			}
			@Override
			public Adapter casePEO10CONTENT(PEO10CONTENT object) {
				return createPEO10CONTENTAdapter();
			}
			@Override
			public Adapter casePEO11CONTENT(PEO11CONTENT object) {
				return createPEO11CONTENTAdapter();
			}
			@Override
			public Adapter casePEO12CONTENT(PEO12CONTENT object) {
				return createPEO12CONTENTAdapter();
			}
			@Override
			public Adapter casePEO13CONTENT(PEO13CONTENT object) {
				return createPEO13CONTENTAdapter();
			}
			@Override
			public Adapter casePEO14CONTENT(PEO14CONTENT object) {
				return createPEO14CONTENTAdapter();
			}
			@Override
			public Adapter casePEO15CONTENT(PEO15CONTENT object) {
				return createPEO15CONTENTAdapter();
			}
			@Override
			public Adapter casePEO16CONTENT(PEO16CONTENT object) {
				return createPEO16CONTENTAdapter();
			}
			@Override
			public Adapter casePEO17CONTENT(PEO17CONTENT object) {
				return createPEO17CONTENTAdapter();
			}
			@Override
			public Adapter casePEO18CONTENT(PEO18CONTENT object) {
				return createPEO18CONTENTAdapter();
			}
			@Override
			public Adapter casePEO19CONTENT(PEO19CONTENT object) {
				return createPEO19CONTENTAdapter();
			}
			@Override
			public Adapter casePEO1CONTENT(PEO1CONTENT object) {
				return createPEO1CONTENTAdapter();
			}
			@Override
			public Adapter casePEO20CONTENT(PEO20CONTENT object) {
				return createPEO20CONTENTAdapter();
			}
			@Override
			public Adapter casePEO21CONTENT(PEO21CONTENT object) {
				return createPEO21CONTENTAdapter();
			}
			@Override
			public Adapter casePEO22CONTENT(PEO22CONTENT object) {
				return createPEO22CONTENTAdapter();
			}
			@Override
			public Adapter casePEO23CONTENT(PEO23CONTENT object) {
				return createPEO23CONTENTAdapter();
			}
			@Override
			public Adapter casePEO24CONTENT(PEO24CONTENT object) {
				return createPEO24CONTENTAdapter();
			}
			@Override
			public Adapter casePEO25CONTENT(PEO25CONTENT object) {
				return createPEO25CONTENTAdapter();
			}
			@Override
			public Adapter casePEO2CONTENT(PEO2CONTENT object) {
				return createPEO2CONTENTAdapter();
			}
			@Override
			public Adapter casePEO3CONTENT(PEO3CONTENT object) {
				return createPEO3CONTENTAdapter();
			}
			@Override
			public Adapter casePEO4CONTENT(PEO4CONTENT object) {
				return createPEO4CONTENTAdapter();
			}
			@Override
			public Adapter casePEO5CONTENT(PEO5CONTENT object) {
				return createPEO5CONTENTAdapter();
			}
			@Override
			public Adapter casePEO6CONTENT(PEO6CONTENT object) {
				return createPEO6CONTENTAdapter();
			}
			@Override
			public Adapter casePEO7CONTENT(PEO7CONTENT object) {
				return createPEO7CONTENTAdapter();
			}
			@Override
			public Adapter casePEO8CONTENT(PEO8CONTENT object) {
				return createPEO8CONTENTAdapter();
			}
			@Override
			public Adapter casePEO9CONTENT(PEO9CONTENT object) {
				return createPEO9CONTENTAdapter();
			}
			@Override
			public Adapter casePEOCONTENT(PEOCONTENT object) {
				return createPEOCONTENTAdapter();
			}
			@Override
			public Adapter casePES10CONTENT(PES10CONTENT object) {
				return createPES10CONTENTAdapter();
			}
			@Override
			public Adapter casePES11CONTENT(PES11CONTENT object) {
				return createPES11CONTENTAdapter();
			}
			@Override
			public Adapter casePES12CONTENT(PES12CONTENT object) {
				return createPES12CONTENTAdapter();
			}
			@Override
			public Adapter casePES13CONTENT(PES13CONTENT object) {
				return createPES13CONTENTAdapter();
			}
			@Override
			public Adapter casePES1CONTENT(PES1CONTENT object) {
				return createPES1CONTENTAdapter();
			}
			@Override
			public Adapter casePES2CONTENT(PES2CONTENT object) {
				return createPES2CONTENTAdapter();
			}
			@Override
			public Adapter casePES3CONTENT(PES3CONTENT object) {
				return createPES3CONTENTAdapter();
			}
			@Override
			public Adapter casePES4CONTENT(PES4CONTENT object) {
				return createPES4CONTENTAdapter();
			}
			@Override
			public Adapter casePES5CONTENT(PES5CONTENT object) {
				return createPES5CONTENTAdapter();
			}
			@Override
			public Adapter casePES6CONTENT(PES6CONTENT object) {
				return createPES6CONTENTAdapter();
			}
			@Override
			public Adapter casePES7CONTENT(PES7CONTENT object) {
				return createPES7CONTENTAdapter();
			}
			@Override
			public Adapter casePES8CONTENT(PES8CONTENT object) {
				return createPES8CONTENTAdapter();
			}
			@Override
			public Adapter casePES9CONTENT(PES9CONTENT object) {
				return createPES9CONTENTAdapter();
			}
			@Override
			public Adapter casePESCONTENT(PESCONTENT object) {
				return createPESCONTENTAdapter();
			}
			@Override
			public Adapter casePID10CONTENT(PID10CONTENT object) {
				return createPID10CONTENTAdapter();
			}
			@Override
			public Adapter casePID11CONTENT(PID11CONTENT object) {
				return createPID11CONTENTAdapter();
			}
			@Override
			public Adapter casePID12CONTENT(PID12CONTENT object) {
				return createPID12CONTENTAdapter();
			}
			@Override
			public Adapter casePID13CONTENT(PID13CONTENT object) {
				return createPID13CONTENTAdapter();
			}
			@Override
			public Adapter casePID14CONTENT(PID14CONTENT object) {
				return createPID14CONTENTAdapter();
			}
			@Override
			public Adapter casePID15CONTENT(PID15CONTENT object) {
				return createPID15CONTENTAdapter();
			}
			@Override
			public Adapter casePID16CONTENT(PID16CONTENT object) {
				return createPID16CONTENTAdapter();
			}
			@Override
			public Adapter casePID17CONTENT(PID17CONTENT object) {
				return createPID17CONTENTAdapter();
			}
			@Override
			public Adapter casePID18CONTENT(PID18CONTENT object) {
				return createPID18CONTENTAdapter();
			}
			@Override
			public Adapter casePID19CONTENT(PID19CONTENT object) {
				return createPID19CONTENTAdapter();
			}
			@Override
			public Adapter casePID1CONTENT(PID1CONTENT object) {
				return createPID1CONTENTAdapter();
			}
			@Override
			public Adapter casePID20CONTENT(PID20CONTENT object) {
				return createPID20CONTENTAdapter();
			}
			@Override
			public Adapter casePID21CONTENT(PID21CONTENT object) {
				return createPID21CONTENTAdapter();
			}
			@Override
			public Adapter casePID22CONTENT(PID22CONTENT object) {
				return createPID22CONTENTAdapter();
			}
			@Override
			public Adapter casePID23CONTENT(PID23CONTENT object) {
				return createPID23CONTENTAdapter();
			}
			@Override
			public Adapter casePID24CONTENT(PID24CONTENT object) {
				return createPID24CONTENTAdapter();
			}
			@Override
			public Adapter casePID25CONTENT(PID25CONTENT object) {
				return createPID25CONTENTAdapter();
			}
			@Override
			public Adapter casePID26CONTENT(PID26CONTENT object) {
				return createPID26CONTENTAdapter();
			}
			@Override
			public Adapter casePID27CONTENT(PID27CONTENT object) {
				return createPID27CONTENTAdapter();
			}
			@Override
			public Adapter casePID28CONTENT(PID28CONTENT object) {
				return createPID28CONTENTAdapter();
			}
			@Override
			public Adapter casePID29CONTENT(PID29CONTENT object) {
				return createPID29CONTENTAdapter();
			}
			@Override
			public Adapter casePID2CONTENT(PID2CONTENT object) {
				return createPID2CONTENTAdapter();
			}
			@Override
			public Adapter casePID30CONTENT(PID30CONTENT object) {
				return createPID30CONTENTAdapter();
			}
			@Override
			public Adapter casePID31CONTENT(PID31CONTENT object) {
				return createPID31CONTENTAdapter();
			}
			@Override
			public Adapter casePID32CONTENT(PID32CONTENT object) {
				return createPID32CONTENTAdapter();
			}
			@Override
			public Adapter casePID33CONTENT(PID33CONTENT object) {
				return createPID33CONTENTAdapter();
			}
			@Override
			public Adapter casePID34CONTENT(PID34CONTENT object) {
				return createPID34CONTENTAdapter();
			}
			@Override
			public Adapter casePID35CONTENT(PID35CONTENT object) {
				return createPID35CONTENTAdapter();
			}
			@Override
			public Adapter casePID36CONTENT(PID36CONTENT object) {
				return createPID36CONTENTAdapter();
			}
			@Override
			public Adapter casePID37CONTENT(PID37CONTENT object) {
				return createPID37CONTENTAdapter();
			}
			@Override
			public Adapter casePID38CONTENT(PID38CONTENT object) {
				return createPID38CONTENTAdapter();
			}
			@Override
			public Adapter casePID39CONTENT(PID39CONTENT object) {
				return createPID39CONTENTAdapter();
			}
			@Override
			public Adapter casePID3CONTENT(PID3CONTENT object) {
				return createPID3CONTENTAdapter();
			}
			@Override
			public Adapter casePID4CONTENT(PID4CONTENT object) {
				return createPID4CONTENTAdapter();
			}
			@Override
			public Adapter casePID5CONTENT(PID5CONTENT object) {
				return createPID5CONTENTAdapter();
			}
			@Override
			public Adapter casePID6CONTENT(PID6CONTENT object) {
				return createPID6CONTENTAdapter();
			}
			@Override
			public Adapter casePID7CONTENT(PID7CONTENT object) {
				return createPID7CONTENTAdapter();
			}
			@Override
			public Adapter casePID8CONTENT(PID8CONTENT object) {
				return createPID8CONTENTAdapter();
			}
			@Override
			public Adapter casePID9CONTENT(PID9CONTENT object) {
				return createPID9CONTENTAdapter();
			}
			@Override
			public Adapter casePIDCONTENT(PIDCONTENT object) {
				return createPIDCONTENTAdapter();
			}
			@Override
			public Adapter casePIP(PIP object) {
				return createPIPAdapter();
			}
			@Override
			public Adapter casePIP1CONTENT(PIP1CONTENT object) {
				return createPIP1CONTENTAdapter();
			}
			@Override
			public Adapter casePIP2CONTENT(PIP2CONTENT object) {
				return createPIP2CONTENTAdapter();
			}
			@Override
			public Adapter casePIP3CONTENT(PIP3CONTENT object) {
				return createPIP3CONTENTAdapter();
			}
			@Override
			public Adapter casePIP4CONTENT(PIP4CONTENT object) {
				return createPIP4CONTENTAdapter();
			}
			@Override
			public Adapter casePIP5CONTENT(PIP5CONTENT object) {
				return createPIP5CONTENTAdapter();
			}
			@Override
			public Adapter casePL(PL object) {
				return createPLAdapter();
			}
			@Override
			public Adapter casePL10CONTENT(PL10CONTENT object) {
				return createPL10CONTENTAdapter();
			}
			@Override
			public Adapter casePL11CONTENT(PL11CONTENT object) {
				return createPL11CONTENTAdapter();
			}
			@Override
			public Adapter casePL1CONTENT(PL1CONTENT object) {
				return createPL1CONTENTAdapter();
			}
			@Override
			public Adapter casePL2CONTENT(PL2CONTENT object) {
				return createPL2CONTENTAdapter();
			}
			@Override
			public Adapter casePL3CONTENT(PL3CONTENT object) {
				return createPL3CONTENTAdapter();
			}
			@Override
			public Adapter casePL4CONTENT(PL4CONTENT object) {
				return createPL4CONTENTAdapter();
			}
			@Override
			public Adapter casePL5CONTENT(PL5CONTENT object) {
				return createPL5CONTENTAdapter();
			}
			@Override
			public Adapter casePL6CONTENT(PL6CONTENT object) {
				return createPL6CONTENTAdapter();
			}
			@Override
			public Adapter casePL7CONTENT(PL7CONTENT object) {
				return createPL7CONTENTAdapter();
			}
			@Override
			public Adapter casePL8CONTENT(PL8CONTENT object) {
				return createPL8CONTENTAdapter();
			}
			@Override
			public Adapter casePL9CONTENT(PL9CONTENT object) {
				return createPL9CONTENTAdapter();
			}
			@Override
			public Adapter casePLN(PLN object) {
				return createPLNAdapter();
			}
			@Override
			public Adapter casePLN1CONTENT(PLN1CONTENT object) {
				return createPLN1CONTENTAdapter();
			}
			@Override
			public Adapter casePLN2CONTENT(PLN2CONTENT object) {
				return createPLN2CONTENTAdapter();
			}
			@Override
			public Adapter casePLN3CONTENT(PLN3CONTENT object) {
				return createPLN3CONTENTAdapter();
			}
			@Override
			public Adapter casePLN4CONTENT(PLN4CONTENT object) {
				return createPLN4CONTENTAdapter();
			}
			@Override
			public Adapter casePPN(PPN object) {
				return createPPNAdapter();
			}
			@Override
			public Adapter casePPN10CONTENT(PPN10CONTENT object) {
				return createPPN10CONTENTAdapter();
			}
			@Override
			public Adapter casePPN11CONTENT(PPN11CONTENT object) {
				return createPPN11CONTENTAdapter();
			}
			@Override
			public Adapter casePPN12CONTENT(PPN12CONTENT object) {
				return createPPN12CONTENTAdapter();
			}
			@Override
			public Adapter casePPN13CONTENT(PPN13CONTENT object) {
				return createPPN13CONTENTAdapter();
			}
			@Override
			public Adapter casePPN14CONTENT(PPN14CONTENT object) {
				return createPPN14CONTENTAdapter();
			}
			@Override
			public Adapter casePPN15CONTENT(PPN15CONTENT object) {
				return createPPN15CONTENTAdapter();
			}
			@Override
			public Adapter casePPN16CONTENT(PPN16CONTENT object) {
				return createPPN16CONTENTAdapter();
			}
			@Override
			public Adapter casePPN17CONTENT(PPN17CONTENT object) {
				return createPPN17CONTENTAdapter();
			}
			@Override
			public Adapter casePPN18CONTENT(PPN18CONTENT object) {
				return createPPN18CONTENTAdapter();
			}
			@Override
			public Adapter casePPN19CONTENT(PPN19CONTENT object) {
				return createPPN19CONTENTAdapter();
			}
			@Override
			public Adapter casePPN1CONTENT(PPN1CONTENT object) {
				return createPPN1CONTENTAdapter();
			}
			@Override
			public Adapter casePPN20CONTENT(PPN20CONTENT object) {
				return createPPN20CONTENTAdapter();
			}
			@Override
			public Adapter casePPN21CONTENT(PPN21CONTENT object) {
				return createPPN21CONTENTAdapter();
			}
			@Override
			public Adapter casePPN22CONTENT(PPN22CONTENT object) {
				return createPPN22CONTENTAdapter();
			}
			@Override
			public Adapter casePPN23CONTENT(PPN23CONTENT object) {
				return createPPN23CONTENTAdapter();
			}
			@Override
			public Adapter casePPN24CONTENT(PPN24CONTENT object) {
				return createPPN24CONTENTAdapter();
			}
			@Override
			public Adapter casePPN2CONTENT(PPN2CONTENT object) {
				return createPPN2CONTENTAdapter();
			}
			@Override
			public Adapter casePPN3CONTENT(PPN3CONTENT object) {
				return createPPN3CONTENTAdapter();
			}
			@Override
			public Adapter casePPN4CONTENT(PPN4CONTENT object) {
				return createPPN4CONTENTAdapter();
			}
			@Override
			public Adapter casePPN5CONTENT(PPN5CONTENT object) {
				return createPPN5CONTENTAdapter();
			}
			@Override
			public Adapter casePPN6CONTENT(PPN6CONTENT object) {
				return createPPN6CONTENTAdapter();
			}
			@Override
			public Adapter casePPN7CONTENT(PPN7CONTENT object) {
				return createPPN7CONTENTAdapter();
			}
			@Override
			public Adapter casePPN8CONTENT(PPN8CONTENT object) {
				return createPPN8CONTENTAdapter();
			}
			@Override
			public Adapter casePPN9CONTENT(PPN9CONTENT object) {
				return createPPN9CONTENTAdapter();
			}
			@Override
			public Adapter casePR110CONTENT(PR110CONTENT object) {
				return createPR110CONTENTAdapter();
			}
			@Override
			public Adapter casePR111CONTENT(PR111CONTENT object) {
				return createPR111CONTENTAdapter();
			}
			@Override
			public Adapter casePR112CONTENT(PR112CONTENT object) {
				return createPR112CONTENTAdapter();
			}
			@Override
			public Adapter casePR113CONTENT(PR113CONTENT object) {
				return createPR113CONTENTAdapter();
			}
			@Override
			public Adapter casePR114CONTENT(PR114CONTENT object) {
				return createPR114CONTENTAdapter();
			}
			@Override
			public Adapter casePR115CONTENT(PR115CONTENT object) {
				return createPR115CONTENTAdapter();
			}
			@Override
			public Adapter casePR116CONTENT(PR116CONTENT object) {
				return createPR116CONTENTAdapter();
			}
			@Override
			public Adapter casePR117CONTENT(PR117CONTENT object) {
				return createPR117CONTENTAdapter();
			}
			@Override
			public Adapter casePR118CONTENT(PR118CONTENT object) {
				return createPR118CONTENTAdapter();
			}
			@Override
			public Adapter casePR119CONTENT(PR119CONTENT object) {
				return createPR119CONTENTAdapter();
			}
			@Override
			public Adapter casePR11CONTENT(PR11CONTENT object) {
				return createPR11CONTENTAdapter();
			}
			@Override
			public Adapter casePR120CONTENT(PR120CONTENT object) {
				return createPR120CONTENTAdapter();
			}
			@Override
			public Adapter casePR12CONTENT(PR12CONTENT object) {
				return createPR12CONTENTAdapter();
			}
			@Override
			public Adapter casePR13CONTENT(PR13CONTENT object) {
				return createPR13CONTENTAdapter();
			}
			@Override
			public Adapter casePR14CONTENT(PR14CONTENT object) {
				return createPR14CONTENTAdapter();
			}
			@Override
			public Adapter casePR15CONTENT(PR15CONTENT object) {
				return createPR15CONTENTAdapter();
			}
			@Override
			public Adapter casePR16CONTENT(PR16CONTENT object) {
				return createPR16CONTENTAdapter();
			}
			@Override
			public Adapter casePR17CONTENT(PR17CONTENT object) {
				return createPR17CONTENTAdapter();
			}
			@Override
			public Adapter casePR18CONTENT(PR18CONTENT object) {
				return createPR18CONTENTAdapter();
			}
			@Override
			public Adapter casePR19CONTENT(PR19CONTENT object) {
				return createPR19CONTENTAdapter();
			}
			@Override
			public Adapter casePR1CONTENT(PR1CONTENT object) {
				return createPR1CONTENTAdapter();
			}
			@Override
			public Adapter casePRA10CONTENT(PRA10CONTENT object) {
				return createPRA10CONTENTAdapter();
			}
			@Override
			public Adapter casePRA11CONTENT(PRA11CONTENT object) {
				return createPRA11CONTENTAdapter();
			}
			@Override
			public Adapter casePRA12CONTENT(PRA12CONTENT object) {
				return createPRA12CONTENTAdapter();
			}
			@Override
			public Adapter casePRA1CONTENT(PRA1CONTENT object) {
				return createPRA1CONTENTAdapter();
			}
			@Override
			public Adapter casePRA2CONTENT(PRA2CONTENT object) {
				return createPRA2CONTENTAdapter();
			}
			@Override
			public Adapter casePRA3CONTENT(PRA3CONTENT object) {
				return createPRA3CONTENTAdapter();
			}
			@Override
			public Adapter casePRA4CONTENT(PRA4CONTENT object) {
				return createPRA4CONTENTAdapter();
			}
			@Override
			public Adapter casePRA5CONTENT(PRA5CONTENT object) {
				return createPRA5CONTENTAdapter();
			}
			@Override
			public Adapter casePRA6CONTENT(PRA6CONTENT object) {
				return createPRA6CONTENTAdapter();
			}
			@Override
			public Adapter casePRA7CONTENT(PRA7CONTENT object) {
				return createPRA7CONTENTAdapter();
			}
			@Override
			public Adapter casePRA8CONTENT(PRA8CONTENT object) {
				return createPRA8CONTENTAdapter();
			}
			@Override
			public Adapter casePRA9CONTENT(PRA9CONTENT object) {
				return createPRA9CONTENTAdapter();
			}
			@Override
			public Adapter casePRACONTENT(PRACONTENT object) {
				return createPRACONTENTAdapter();
			}
			@Override
			public Adapter casePRB10CONTENT(PRB10CONTENT object) {
				return createPRB10CONTENTAdapter();
			}
			@Override
			public Adapter casePRB11CONTENT(PRB11CONTENT object) {
				return createPRB11CONTENTAdapter();
			}
			@Override
			public Adapter casePRB12CONTENT(PRB12CONTENT object) {
				return createPRB12CONTENTAdapter();
			}
			@Override
			public Adapter casePRB13CONTENT(PRB13CONTENT object) {
				return createPRB13CONTENTAdapter();
			}
			@Override
			public Adapter casePRB14CONTENT(PRB14CONTENT object) {
				return createPRB14CONTENTAdapter();
			}
			@Override
			public Adapter casePRB15CONTENT(PRB15CONTENT object) {
				return createPRB15CONTENTAdapter();
			}
			@Override
			public Adapter casePRB16CONTENT(PRB16CONTENT object) {
				return createPRB16CONTENTAdapter();
			}
			@Override
			public Adapter casePRB17CONTENT(PRB17CONTENT object) {
				return createPRB17CONTENTAdapter();
			}
			@Override
			public Adapter casePRB18CONTENT(PRB18CONTENT object) {
				return createPRB18CONTENTAdapter();
			}
			@Override
			public Adapter casePRB19CONTENT(PRB19CONTENT object) {
				return createPRB19CONTENTAdapter();
			}
			@Override
			public Adapter casePRB1CONTENT(PRB1CONTENT object) {
				return createPRB1CONTENTAdapter();
			}
			@Override
			public Adapter casePRB20CONTENT(PRB20CONTENT object) {
				return createPRB20CONTENTAdapter();
			}
			@Override
			public Adapter casePRB21CONTENT(PRB21CONTENT object) {
				return createPRB21CONTENTAdapter();
			}
			@Override
			public Adapter casePRB22CONTENT(PRB22CONTENT object) {
				return createPRB22CONTENTAdapter();
			}
			@Override
			public Adapter casePRB23CONTENT(PRB23CONTENT object) {
				return createPRB23CONTENTAdapter();
			}
			@Override
			public Adapter casePRB24CONTENT(PRB24CONTENT object) {
				return createPRB24CONTENTAdapter();
			}
			@Override
			public Adapter casePRB25CONTENT(PRB25CONTENT object) {
				return createPRB25CONTENTAdapter();
			}
			@Override
			public Adapter casePRB2CONTENT(PRB2CONTENT object) {
				return createPRB2CONTENTAdapter();
			}
			@Override
			public Adapter casePRB3CONTENT(PRB3CONTENT object) {
				return createPRB3CONTENTAdapter();
			}
			@Override
			public Adapter casePRB4CONTENT(PRB4CONTENT object) {
				return createPRB4CONTENTAdapter();
			}
			@Override
			public Adapter casePRB5CONTENT(PRB5CONTENT object) {
				return createPRB5CONTENTAdapter();
			}
			@Override
			public Adapter casePRB6CONTENT(PRB6CONTENT object) {
				return createPRB6CONTENTAdapter();
			}
			@Override
			public Adapter casePRB7CONTENT(PRB7CONTENT object) {
				return createPRB7CONTENTAdapter();
			}
			@Override
			public Adapter casePRB8CONTENT(PRB8CONTENT object) {
				return createPRB8CONTENTAdapter();
			}
			@Override
			public Adapter casePRB9CONTENT(PRB9CONTENT object) {
				return createPRB9CONTENTAdapter();
			}
			@Override
			public Adapter casePRBCONTENT(PRBCONTENT object) {
				return createPRBCONTENTAdapter();
			}
			@Override
			public Adapter casePRC10CONTENT(PRC10CONTENT object) {
				return createPRC10CONTENTAdapter();
			}
			@Override
			public Adapter casePRC11CONTENT(PRC11CONTENT object) {
				return createPRC11CONTENTAdapter();
			}
			@Override
			public Adapter casePRC12CONTENT(PRC12CONTENT object) {
				return createPRC12CONTENTAdapter();
			}
			@Override
			public Adapter casePRC13CONTENT(PRC13CONTENT object) {
				return createPRC13CONTENTAdapter();
			}
			@Override
			public Adapter casePRC14CONTENT(PRC14CONTENT object) {
				return createPRC14CONTENTAdapter();
			}
			@Override
			public Adapter casePRC15CONTENT(PRC15CONTENT object) {
				return createPRC15CONTENTAdapter();
			}
			@Override
			public Adapter casePRC16CONTENT(PRC16CONTENT object) {
				return createPRC16CONTENTAdapter();
			}
			@Override
			public Adapter casePRC17CONTENT(PRC17CONTENT object) {
				return createPRC17CONTENTAdapter();
			}
			@Override
			public Adapter casePRC18CONTENT(PRC18CONTENT object) {
				return createPRC18CONTENTAdapter();
			}
			@Override
			public Adapter casePRC1CONTENT(PRC1CONTENT object) {
				return createPRC1CONTENTAdapter();
			}
			@Override
			public Adapter casePRC2CONTENT(PRC2CONTENT object) {
				return createPRC2CONTENTAdapter();
			}
			@Override
			public Adapter casePRC3CONTENT(PRC3CONTENT object) {
				return createPRC3CONTENTAdapter();
			}
			@Override
			public Adapter casePRC4CONTENT(PRC4CONTENT object) {
				return createPRC4CONTENTAdapter();
			}
			@Override
			public Adapter casePRC5CONTENT(PRC5CONTENT object) {
				return createPRC5CONTENTAdapter();
			}
			@Override
			public Adapter casePRC6CONTENT(PRC6CONTENT object) {
				return createPRC6CONTENTAdapter();
			}
			@Override
			public Adapter casePRC7CONTENT(PRC7CONTENT object) {
				return createPRC7CONTENTAdapter();
			}
			@Override
			public Adapter casePRC8CONTENT(PRC8CONTENT object) {
				return createPRC8CONTENTAdapter();
			}
			@Override
			public Adapter casePRC9CONTENT(PRC9CONTENT object) {
				return createPRC9CONTENTAdapter();
			}
			@Override
			public Adapter casePRCCONTENT(PRCCONTENT object) {
				return createPRCCONTENTAdapter();
			}
			@Override
			public Adapter casePRD1CONTENT(PRD1CONTENT object) {
				return createPRD1CONTENTAdapter();
			}
			@Override
			public Adapter casePRD2CONTENT(PRD2CONTENT object) {
				return createPRD2CONTENTAdapter();
			}
			@Override
			public Adapter casePRD3CONTENT(PRD3CONTENT object) {
				return createPRD3CONTENTAdapter();
			}
			@Override
			public Adapter casePRD4CONTENT(PRD4CONTENT object) {
				return createPRD4CONTENTAdapter();
			}
			@Override
			public Adapter casePRD5CONTENT(PRD5CONTENT object) {
				return createPRD5CONTENTAdapter();
			}
			@Override
			public Adapter casePRD6CONTENT(PRD6CONTENT object) {
				return createPRD6CONTENTAdapter();
			}
			@Override
			public Adapter casePRD7CONTENT(PRD7CONTENT object) {
				return createPRD7CONTENTAdapter();
			}
			@Override
			public Adapter casePRD8CONTENT(PRD8CONTENT object) {
				return createPRD8CONTENTAdapter();
			}
			@Override
			public Adapter casePRD9CONTENT(PRD9CONTENT object) {
				return createPRD9CONTENTAdapter();
			}
			@Override
			public Adapter casePRDCONTENT(PRDCONTENT object) {
				return createPRDCONTENTAdapter();
			}
			@Override
			public Adapter casePRL(PRL object) {
				return createPRLAdapter();
			}
			@Override
			public Adapter casePRL1CONTENT(PRL1CONTENT object) {
				return createPRL1CONTENTAdapter();
			}
			@Override
			public Adapter casePRL2CONTENT(PRL2CONTENT object) {
				return createPRL2CONTENTAdapter();
			}
			@Override
			public Adapter casePRL3CONTENT(PRL3CONTENT object) {
				return createPRL3CONTENTAdapter();
			}
			@Override
			public Adapter casePSH10CONTENT(PSH10CONTENT object) {
				return createPSH10CONTENTAdapter();
			}
			@Override
			public Adapter casePSH11CONTENT(PSH11CONTENT object) {
				return createPSH11CONTENTAdapter();
			}
			@Override
			public Adapter casePSH12CONTENT(PSH12CONTENT object) {
				return createPSH12CONTENTAdapter();
			}
			@Override
			public Adapter casePSH13CONTENT(PSH13CONTENT object) {
				return createPSH13CONTENTAdapter();
			}
			@Override
			public Adapter casePSH14CONTENT(PSH14CONTENT object) {
				return createPSH14CONTENTAdapter();
			}
			@Override
			public Adapter casePSH1CONTENT(PSH1CONTENT object) {
				return createPSH1CONTENTAdapter();
			}
			@Override
			public Adapter casePSH2CONTENT(PSH2CONTENT object) {
				return createPSH2CONTENTAdapter();
			}
			@Override
			public Adapter casePSH3CONTENT(PSH3CONTENT object) {
				return createPSH3CONTENTAdapter();
			}
			@Override
			public Adapter casePSH4CONTENT(PSH4CONTENT object) {
				return createPSH4CONTENTAdapter();
			}
			@Override
			public Adapter casePSH5CONTENT(PSH5CONTENT object) {
				return createPSH5CONTENTAdapter();
			}
			@Override
			public Adapter casePSH6CONTENT(PSH6CONTENT object) {
				return createPSH6CONTENTAdapter();
			}
			@Override
			public Adapter casePSH7CONTENT(PSH7CONTENT object) {
				return createPSH7CONTENTAdapter();
			}
			@Override
			public Adapter casePSH8CONTENT(PSH8CONTENT object) {
				return createPSH8CONTENTAdapter();
			}
			@Override
			public Adapter casePSH9CONTENT(PSH9CONTENT object) {
				return createPSH9CONTENTAdapter();
			}
			@Override
			public Adapter casePSHCONTENT(PSHCONTENT object) {
				return createPSHCONTENTAdapter();
			}
			@Override
			public Adapter casePT(PT object) {
				return createPTAdapter();
			}
			@Override
			public Adapter casePT1CONTENT(PT1CONTENT object) {
				return createPT1CONTENTAdapter();
			}
			@Override
			public Adapter casePT2CONTENT(PT2CONTENT object) {
				return createPT2CONTENTAdapter();
			}
			@Override
			public Adapter casePTA(PTA object) {
				return createPTAAdapter();
			}
			@Override
			public Adapter casePTA1CONTENT(PTA1CONTENT object) {
				return createPTA1CONTENTAdapter();
			}
			@Override
			public Adapter casePTA2CONTENT(PTA2CONTENT object) {
				return createPTA2CONTENTAdapter();
			}
			@Override
			public Adapter casePTA3CONTENT(PTA3CONTENT object) {
				return createPTA3CONTENTAdapter();
			}
			@Override
			public Adapter casePTA4CONTENT(PTA4CONTENT object) {
				return createPTA4CONTENTAdapter();
			}
			@Override
			public Adapter casePTH1CONTENT(PTH1CONTENT object) {
				return createPTH1CONTENTAdapter();
			}
			@Override
			public Adapter casePTH2CONTENT(PTH2CONTENT object) {
				return createPTH2CONTENTAdapter();
			}
			@Override
			public Adapter casePTH3CONTENT(PTH3CONTENT object) {
				return createPTH3CONTENTAdapter();
			}
			@Override
			public Adapter casePTH4CONTENT(PTH4CONTENT object) {
				return createPTH4CONTENTAdapter();
			}
			@Override
			public Adapter casePTH5CONTENT(PTH5CONTENT object) {
				return createPTH5CONTENTAdapter();
			}
			@Override
			public Adapter casePTH6CONTENT(PTH6CONTENT object) {
				return createPTH6CONTENTAdapter();
			}
			@Override
			public Adapter casePTHCONTENT(PTHCONTENT object) {
				return createPTHCONTENTAdapter();
			}
			@Override
			public Adapter casePV110CONTENT(PV110CONTENT object) {
				return createPV110CONTENTAdapter();
			}
			@Override
			public Adapter casePV111CONTENT(PV111CONTENT object) {
				return createPV111CONTENTAdapter();
			}
			@Override
			public Adapter casePV112CONTENT(PV112CONTENT object) {
				return createPV112CONTENTAdapter();
			}
			@Override
			public Adapter casePV113CONTENT(PV113CONTENT object) {
				return createPV113CONTENTAdapter();
			}
			@Override
			public Adapter casePV114CONTENT(PV114CONTENT object) {
				return createPV114CONTENTAdapter();
			}
			@Override
			public Adapter casePV115CONTENT(PV115CONTENT object) {
				return createPV115CONTENTAdapter();
			}
			@Override
			public Adapter casePV116CONTENT(PV116CONTENT object) {
				return createPV116CONTENTAdapter();
			}
			@Override
			public Adapter casePV117CONTENT(PV117CONTENT object) {
				return createPV117CONTENTAdapter();
			}
			@Override
			public Adapter casePV118CONTENT(PV118CONTENT object) {
				return createPV118CONTENTAdapter();
			}
			@Override
			public Adapter casePV119CONTENT(PV119CONTENT object) {
				return createPV119CONTENTAdapter();
			}
			@Override
			public Adapter casePV11CONTENT(PV11CONTENT object) {
				return createPV11CONTENTAdapter();
			}
			@Override
			public Adapter casePV120CONTENT(PV120CONTENT object) {
				return createPV120CONTENTAdapter();
			}
			@Override
			public Adapter casePV121CONTENT(PV121CONTENT object) {
				return createPV121CONTENTAdapter();
			}
			@Override
			public Adapter casePV122CONTENT(PV122CONTENT object) {
				return createPV122CONTENTAdapter();
			}
			@Override
			public Adapter casePV123CONTENT(PV123CONTENT object) {
				return createPV123CONTENTAdapter();
			}
			@Override
			public Adapter casePV124CONTENT(PV124CONTENT object) {
				return createPV124CONTENTAdapter();
			}
			@Override
			public Adapter casePV125CONTENT(PV125CONTENT object) {
				return createPV125CONTENTAdapter();
			}
			@Override
			public Adapter casePV126CONTENT(PV126CONTENT object) {
				return createPV126CONTENTAdapter();
			}
			@Override
			public Adapter casePV127CONTENT(PV127CONTENT object) {
				return createPV127CONTENTAdapter();
			}
			@Override
			public Adapter casePV128CONTENT(PV128CONTENT object) {
				return createPV128CONTENTAdapter();
			}
			@Override
			public Adapter casePV129CONTENT(PV129CONTENT object) {
				return createPV129CONTENTAdapter();
			}
			@Override
			public Adapter casePV12CONTENT(PV12CONTENT object) {
				return createPV12CONTENTAdapter();
			}
			@Override
			public Adapter casePV130CONTENT(PV130CONTENT object) {
				return createPV130CONTENTAdapter();
			}
			@Override
			public Adapter casePV131CONTENT(PV131CONTENT object) {
				return createPV131CONTENTAdapter();
			}
			@Override
			public Adapter casePV132CONTENT(PV132CONTENT object) {
				return createPV132CONTENTAdapter();
			}
			@Override
			public Adapter casePV133CONTENT(PV133CONTENT object) {
				return createPV133CONTENTAdapter();
			}
			@Override
			public Adapter casePV134CONTENT(PV134CONTENT object) {
				return createPV134CONTENTAdapter();
			}
			@Override
			public Adapter casePV135CONTENT(PV135CONTENT object) {
				return createPV135CONTENTAdapter();
			}
			@Override
			public Adapter casePV136CONTENT(PV136CONTENT object) {
				return createPV136CONTENTAdapter();
			}
			@Override
			public Adapter casePV137CONTENT(PV137CONTENT object) {
				return createPV137CONTENTAdapter();
			}
			@Override
			public Adapter casePV138CONTENT(PV138CONTENT object) {
				return createPV138CONTENTAdapter();
			}
			@Override
			public Adapter casePV139CONTENT(PV139CONTENT object) {
				return createPV139CONTENTAdapter();
			}
			@Override
			public Adapter casePV13CONTENT(PV13CONTENT object) {
				return createPV13CONTENTAdapter();
			}
			@Override
			public Adapter casePV140CONTENT(PV140CONTENT object) {
				return createPV140CONTENTAdapter();
			}
			@Override
			public Adapter casePV141CONTENT(PV141CONTENT object) {
				return createPV141CONTENTAdapter();
			}
			@Override
			public Adapter casePV142CONTENT(PV142CONTENT object) {
				return createPV142CONTENTAdapter();
			}
			@Override
			public Adapter casePV143CONTENT(PV143CONTENT object) {
				return createPV143CONTENTAdapter();
			}
			@Override
			public Adapter casePV144CONTENT(PV144CONTENT object) {
				return createPV144CONTENTAdapter();
			}
			@Override
			public Adapter casePV145CONTENT(PV145CONTENT object) {
				return createPV145CONTENTAdapter();
			}
			@Override
			public Adapter casePV146CONTENT(PV146CONTENT object) {
				return createPV146CONTENTAdapter();
			}
			@Override
			public Adapter casePV147CONTENT(PV147CONTENT object) {
				return createPV147CONTENTAdapter();
			}
			@Override
			public Adapter casePV148CONTENT(PV148CONTENT object) {
				return createPV148CONTENTAdapter();
			}
			@Override
			public Adapter casePV149CONTENT(PV149CONTENT object) {
				return createPV149CONTENTAdapter();
			}
			@Override
			public Adapter casePV14CONTENT(PV14CONTENT object) {
				return createPV14CONTENTAdapter();
			}
			@Override
			public Adapter casePV150CONTENT(PV150CONTENT object) {
				return createPV150CONTENTAdapter();
			}
			@Override
			public Adapter casePV151CONTENT(PV151CONTENT object) {
				return createPV151CONTENTAdapter();
			}
			@Override
			public Adapter casePV152CONTENT(PV152CONTENT object) {
				return createPV152CONTENTAdapter();
			}
			@Override
			public Adapter casePV15CONTENT(PV15CONTENT object) {
				return createPV15CONTENTAdapter();
			}
			@Override
			public Adapter casePV16CONTENT(PV16CONTENT object) {
				return createPV16CONTENTAdapter();
			}
			@Override
			public Adapter casePV17CONTENT(PV17CONTENT object) {
				return createPV17CONTENTAdapter();
			}
			@Override
			public Adapter casePV18CONTENT(PV18CONTENT object) {
				return createPV18CONTENTAdapter();
			}
			@Override
			public Adapter casePV19CONTENT(PV19CONTENT object) {
				return createPV19CONTENTAdapter();
			}
			@Override
			public Adapter casePV1CONTENT(PV1CONTENT object) {
				return createPV1CONTENTAdapter();
			}
			@Override
			public Adapter casePV210CONTENT(PV210CONTENT object) {
				return createPV210CONTENTAdapter();
			}
			@Override
			public Adapter casePV211CONTENT(PV211CONTENT object) {
				return createPV211CONTENTAdapter();
			}
			@Override
			public Adapter casePV212CONTENT(PV212CONTENT object) {
				return createPV212CONTENTAdapter();
			}
			@Override
			public Adapter casePV213CONTENT(PV213CONTENT object) {
				return createPV213CONTENTAdapter();
			}
			@Override
			public Adapter casePV214CONTENT(PV214CONTENT object) {
				return createPV214CONTENTAdapter();
			}
			@Override
			public Adapter casePV215CONTENT(PV215CONTENT object) {
				return createPV215CONTENTAdapter();
			}
			@Override
			public Adapter casePV216CONTENT(PV216CONTENT object) {
				return createPV216CONTENTAdapter();
			}
			@Override
			public Adapter casePV217CONTENT(PV217CONTENT object) {
				return createPV217CONTENTAdapter();
			}
			@Override
			public Adapter casePV218CONTENT(PV218CONTENT object) {
				return createPV218CONTENTAdapter();
			}
			@Override
			public Adapter casePV219CONTENT(PV219CONTENT object) {
				return createPV219CONTENTAdapter();
			}
			@Override
			public Adapter casePV21CONTENT(PV21CONTENT object) {
				return createPV21CONTENTAdapter();
			}
			@Override
			public Adapter casePV220CONTENT(PV220CONTENT object) {
				return createPV220CONTENTAdapter();
			}
			@Override
			public Adapter casePV221CONTENT(PV221CONTENT object) {
				return createPV221CONTENTAdapter();
			}
			@Override
			public Adapter casePV222CONTENT(PV222CONTENT object) {
				return createPV222CONTENTAdapter();
			}
			@Override
			public Adapter casePV223CONTENT(PV223CONTENT object) {
				return createPV223CONTENTAdapter();
			}
			@Override
			public Adapter casePV224CONTENT(PV224CONTENT object) {
				return createPV224CONTENTAdapter();
			}
			@Override
			public Adapter casePV225CONTENT(PV225CONTENT object) {
				return createPV225CONTENTAdapter();
			}
			@Override
			public Adapter casePV226CONTENT(PV226CONTENT object) {
				return createPV226CONTENTAdapter();
			}
			@Override
			public Adapter casePV227CONTENT(PV227CONTENT object) {
				return createPV227CONTENTAdapter();
			}
			@Override
			public Adapter casePV228CONTENT(PV228CONTENT object) {
				return createPV228CONTENTAdapter();
			}
			@Override
			public Adapter casePV229CONTENT(PV229CONTENT object) {
				return createPV229CONTENTAdapter();
			}
			@Override
			public Adapter casePV22CONTENT(PV22CONTENT object) {
				return createPV22CONTENTAdapter();
			}
			@Override
			public Adapter casePV230CONTENT(PV230CONTENT object) {
				return createPV230CONTENTAdapter();
			}
			@Override
			public Adapter casePV231CONTENT(PV231CONTENT object) {
				return createPV231CONTENTAdapter();
			}
			@Override
			public Adapter casePV232CONTENT(PV232CONTENT object) {
				return createPV232CONTENTAdapter();
			}
			@Override
			public Adapter casePV233CONTENT(PV233CONTENT object) {
				return createPV233CONTENTAdapter();
			}
			@Override
			public Adapter casePV234CONTENT(PV234CONTENT object) {
				return createPV234CONTENTAdapter();
			}
			@Override
			public Adapter casePV235CONTENT(PV235CONTENT object) {
				return createPV235CONTENTAdapter();
			}
			@Override
			public Adapter casePV236CONTENT(PV236CONTENT object) {
				return createPV236CONTENTAdapter();
			}
			@Override
			public Adapter casePV237CONTENT(PV237CONTENT object) {
				return createPV237CONTENTAdapter();
			}
			@Override
			public Adapter casePV238CONTENT(PV238CONTENT object) {
				return createPV238CONTENTAdapter();
			}
			@Override
			public Adapter casePV239CONTENT(PV239CONTENT object) {
				return createPV239CONTENTAdapter();
			}
			@Override
			public Adapter casePV23CONTENT(PV23CONTENT object) {
				return createPV23CONTENTAdapter();
			}
			@Override
			public Adapter casePV240CONTENT(PV240CONTENT object) {
				return createPV240CONTENTAdapter();
			}
			@Override
			public Adapter casePV241CONTENT(PV241CONTENT object) {
				return createPV241CONTENTAdapter();
			}
			@Override
			public Adapter casePV242CONTENT(PV242CONTENT object) {
				return createPV242CONTENTAdapter();
			}
			@Override
			public Adapter casePV243CONTENT(PV243CONTENT object) {
				return createPV243CONTENTAdapter();
			}
			@Override
			public Adapter casePV244CONTENT(PV244CONTENT object) {
				return createPV244CONTENTAdapter();
			}
			@Override
			public Adapter casePV245CONTENT(PV245CONTENT object) {
				return createPV245CONTENTAdapter();
			}
			@Override
			public Adapter casePV246CONTENT(PV246CONTENT object) {
				return createPV246CONTENTAdapter();
			}
			@Override
			public Adapter casePV247CONTENT(PV247CONTENT object) {
				return createPV247CONTENTAdapter();
			}
			@Override
			public Adapter casePV248CONTENT(PV248CONTENT object) {
				return createPV248CONTENTAdapter();
			}
			@Override
			public Adapter casePV249CONTENT(PV249CONTENT object) {
				return createPV249CONTENTAdapter();
			}
			@Override
			public Adapter casePV24CONTENT(PV24CONTENT object) {
				return createPV24CONTENTAdapter();
			}
			@Override
			public Adapter casePV25CONTENT(PV25CONTENT object) {
				return createPV25CONTENTAdapter();
			}
			@Override
			public Adapter casePV26CONTENT(PV26CONTENT object) {
				return createPV26CONTENTAdapter();
			}
			@Override
			public Adapter casePV27CONTENT(PV27CONTENT object) {
				return createPV27CONTENTAdapter();
			}
			@Override
			public Adapter casePV28CONTENT(PV28CONTENT object) {
				return createPV28CONTENTAdapter();
			}
			@Override
			public Adapter casePV29CONTENT(PV29CONTENT object) {
				return createPV29CONTENTAdapter();
			}
			@Override
			public Adapter casePV2CONTENT(PV2CONTENT object) {
				return createPV2CONTENTAdapter();
			}
			@Override
			public Adapter caseQAK1CONTENT(QAK1CONTENT object) {
				return createQAK1CONTENTAdapter();
			}
			@Override
			public Adapter caseQAK2CONTENT(QAK2CONTENT object) {
				return createQAK2CONTENTAdapter();
			}
			@Override
			public Adapter caseQAK3CONTENT(QAK3CONTENT object) {
				return createQAK3CONTENTAdapter();
			}
			@Override
			public Adapter caseQAK4CONTENT(QAK4CONTENT object) {
				return createQAK4CONTENTAdapter();
			}
			@Override
			public Adapter caseQAK5CONTENT(QAK5CONTENT object) {
				return createQAK5CONTENTAdapter();
			}
			@Override
			public Adapter caseQAK6CONTENT(QAK6CONTENT object) {
				return createQAK6CONTENTAdapter();
			}
			@Override
			public Adapter caseQAKCONTENT(QAKCONTENT object) {
				return createQAKCONTENTAdapter();
			}
			@Override
			public Adapter caseQID1CONTENT(QID1CONTENT object) {
				return createQID1CONTENTAdapter();
			}
			@Override
			public Adapter caseQID2CONTENT(QID2CONTENT object) {
				return createQID2CONTENTAdapter();
			}
			@Override
			public Adapter caseQIDCONTENT(QIDCONTENT object) {
				return createQIDCONTENTAdapter();
			}
			@Override
			public Adapter caseQIP(QIP object) {
				return createQIPAdapter();
			}
			@Override
			public Adapter caseQIP1CONTENT(QIP1CONTENT object) {
				return createQIP1CONTENTAdapter();
			}
			@Override
			public Adapter caseQIP2CONTENT(QIP2CONTENT object) {
				return createQIP2CONTENTAdapter();
			}
			@Override
			public Adapter caseQPD1CONTENT(QPD1CONTENT object) {
				return createQPD1CONTENTAdapter();
			}
			@Override
			public Adapter caseQPD2CONTENT(QPD2CONTENT object) {
				return createQPD2CONTENTAdapter();
			}
			@Override
			public Adapter caseQPD3CONTENT(QPD3CONTENT object) {
				return createQPD3CONTENTAdapter();
			}
			@Override
			public Adapter caseQPDCONTENT(QPDCONTENT object) {
				return createQPDCONTENTAdapter();
			}
			@Override
			public Adapter caseQRD10CONTENT(QRD10CONTENT object) {
				return createQRD10CONTENTAdapter();
			}
			@Override
			public Adapter caseQRD11CONTENT(QRD11CONTENT object) {
				return createQRD11CONTENTAdapter();
			}
			@Override
			public Adapter caseQRD12CONTENT(QRD12CONTENT object) {
				return createQRD12CONTENTAdapter();
			}
			@Override
			public Adapter caseQRD1CONTENT(QRD1CONTENT object) {
				return createQRD1CONTENTAdapter();
			}
			@Override
			public Adapter caseQRD2CONTENT(QRD2CONTENT object) {
				return createQRD2CONTENTAdapter();
			}
			@Override
			public Adapter caseQRD3CONTENT(QRD3CONTENT object) {
				return createQRD3CONTENTAdapter();
			}
			@Override
			public Adapter caseQRD4CONTENT(QRD4CONTENT object) {
				return createQRD4CONTENTAdapter();
			}
			@Override
			public Adapter caseQRD5CONTENT(QRD5CONTENT object) {
				return createQRD5CONTENTAdapter();
			}
			@Override
			public Adapter caseQRD6CONTENT(QRD6CONTENT object) {
				return createQRD6CONTENTAdapter();
			}
			@Override
			public Adapter caseQRD7CONTENT(QRD7CONTENT object) {
				return createQRD7CONTENTAdapter();
			}
			@Override
			public Adapter caseQRD8CONTENT(QRD8CONTENT object) {
				return createQRD8CONTENTAdapter();
			}
			@Override
			public Adapter caseQRD9CONTENT(QRD9CONTENT object) {
				return createQRD9CONTENTAdapter();
			}
			@Override
			public Adapter caseQRDCONTENT(QRDCONTENT object) {
				return createQRDCONTENTAdapter();
			}
			@Override
			public Adapter caseQRF10CONTENT(QRF10CONTENT object) {
				return createQRF10CONTENTAdapter();
			}
			@Override
			public Adapter caseQRF1CONTENT(QRF1CONTENT object) {
				return createQRF1CONTENTAdapter();
			}
			@Override
			public Adapter caseQRF2CONTENT(QRF2CONTENT object) {
				return createQRF2CONTENTAdapter();
			}
			@Override
			public Adapter caseQRF3CONTENT(QRF3CONTENT object) {
				return createQRF3CONTENTAdapter();
			}
			@Override
			public Adapter caseQRF4CONTENT(QRF4CONTENT object) {
				return createQRF4CONTENTAdapter();
			}
			@Override
			public Adapter caseQRF5CONTENT(QRF5CONTENT object) {
				return createQRF5CONTENTAdapter();
			}
			@Override
			public Adapter caseQRF6CONTENT(QRF6CONTENT object) {
				return createQRF6CONTENTAdapter();
			}
			@Override
			public Adapter caseQRF7CONTENT(QRF7CONTENT object) {
				return createQRF7CONTENTAdapter();
			}
			@Override
			public Adapter caseQRF8CONTENT(QRF8CONTENT object) {
				return createQRF8CONTENTAdapter();
			}
			@Override
			public Adapter caseQRF9CONTENT(QRF9CONTENT object) {
				return createQRF9CONTENTAdapter();
			}
			@Override
			public Adapter caseQRFCONTENT(QRFCONTENT object) {
				return createQRFCONTENTAdapter();
			}
			@Override
			public Adapter caseQRI1CONTENT(QRI1CONTENT object) {
				return createQRI1CONTENTAdapter();
			}
			@Override
			public Adapter caseQRI2CONTENT(QRI2CONTENT object) {
				return createQRI2CONTENTAdapter();
			}
			@Override
			public Adapter caseQRI3CONTENT(QRI3CONTENT object) {
				return createQRI3CONTENTAdapter();
			}
			@Override
			public Adapter caseQRICONTENT(QRICONTENT object) {
				return createQRICONTENTAdapter();
			}
			@Override
			public Adapter caseQSC(QSC object) {
				return createQSCAdapter();
			}
			@Override
			public Adapter caseQSC1CONTENT(QSC1CONTENT object) {
				return createQSC1CONTENTAdapter();
			}
			@Override
			public Adapter caseQSC2CONTENT(QSC2CONTENT object) {
				return createQSC2CONTENTAdapter();
			}
			@Override
			public Adapter caseQSC3CONTENT(QSC3CONTENT object) {
				return createQSC3CONTENTAdapter();
			}
			@Override
			public Adapter caseQSC4CONTENT(QSC4CONTENT object) {
				return createQSC4CONTENTAdapter();
			}
			@Override
			public Adapter caseRCD(RCD object) {
				return createRCDAdapter();
			}
			@Override
			public Adapter caseRCD1CONTENT(RCD1CONTENT object) {
				return createRCD1CONTENTAdapter();
			}
			@Override
			public Adapter caseRCD2CONTENT(RCD2CONTENT object) {
				return createRCD2CONTENTAdapter();
			}
			@Override
			public Adapter caseRCD3CONTENT(RCD3CONTENT object) {
				return createRCD3CONTENTAdapter();
			}
			@Override
			public Adapter caseRCP1CONTENT(RCP1CONTENT object) {
				return createRCP1CONTENTAdapter();
			}
			@Override
			public Adapter caseRCP2CONTENT(RCP2CONTENT object) {
				return createRCP2CONTENTAdapter();
			}
			@Override
			public Adapter caseRCP3CONTENT(RCP3CONTENT object) {
				return createRCP3CONTENTAdapter();
			}
			@Override
			public Adapter caseRCP4CONTENT(RCP4CONTENT object) {
				return createRCP4CONTENTAdapter();
			}
			@Override
			public Adapter caseRCP5CONTENT(RCP5CONTENT object) {
				return createRCP5CONTENTAdapter();
			}
			@Override
			public Adapter caseRCP6CONTENT(RCP6CONTENT object) {
				return createRCP6CONTENTAdapter();
			}
			@Override
			public Adapter caseRCP7CONTENT(RCP7CONTENT object) {
				return createRCP7CONTENTAdapter();
			}
			@Override
			public Adapter caseRCPCONTENT(RCPCONTENT object) {
				return createRCPCONTENTAdapter();
			}
			@Override
			public Adapter caseRDF1CONTENT(RDF1CONTENT object) {
				return createRDF1CONTENTAdapter();
			}
			@Override
			public Adapter caseRDF2CONTENT(RDF2CONTENT object) {
				return createRDF2CONTENTAdapter();
			}
			@Override
			public Adapter caseRDFCONTENT(RDFCONTENT object) {
				return createRDFCONTENTAdapter();
			}
			@Override
			public Adapter caseRDT1CONTENT(RDT1CONTENT object) {
				return createRDT1CONTENTAdapter();
			}
			@Override
			public Adapter caseRDTCONTENT(RDTCONTENT object) {
				return createRDTCONTENTAdapter();
			}
			@Override
			public Adapter caseRF110CONTENT(RF110CONTENT object) {
				return createRF110CONTENTAdapter();
			}
			@Override
			public Adapter caseRF111CONTENT(RF111CONTENT object) {
				return createRF111CONTENTAdapter();
			}
			@Override
			public Adapter caseRF11CONTENT(RF11CONTENT object) {
				return createRF11CONTENTAdapter();
			}
			@Override
			public Adapter caseRF12CONTENT(RF12CONTENT object) {
				return createRF12CONTENTAdapter();
			}
			@Override
			public Adapter caseRF13CONTENT(RF13CONTENT object) {
				return createRF13CONTENTAdapter();
			}
			@Override
			public Adapter caseRF14CONTENT(RF14CONTENT object) {
				return createRF14CONTENTAdapter();
			}
			@Override
			public Adapter caseRF15CONTENT(RF15CONTENT object) {
				return createRF15CONTENTAdapter();
			}
			@Override
			public Adapter caseRF16CONTENT(RF16CONTENT object) {
				return createRF16CONTENTAdapter();
			}
			@Override
			public Adapter caseRF17CONTENT(RF17CONTENT object) {
				return createRF17CONTENTAdapter();
			}
			@Override
			public Adapter caseRF18CONTENT(RF18CONTENT object) {
				return createRF18CONTENTAdapter();
			}
			@Override
			public Adapter caseRF19CONTENT(RF19CONTENT object) {
				return createRF19CONTENTAdapter();
			}
			@Override
			public Adapter caseRF1CONTENT(RF1CONTENT object) {
				return createRF1CONTENTAdapter();
			}
			@Override
			public Adapter caseRFR(RFR object) {
				return createRFRAdapter();
			}
			@Override
			public Adapter caseRFR1CONTENT(RFR1CONTENT object) {
				return createRFR1CONTENTAdapter();
			}
			@Override
			public Adapter caseRFR2CONTENT(RFR2CONTENT object) {
				return createRFR2CONTENTAdapter();
			}
			@Override
			public Adapter caseRFR3CONTENT(RFR3CONTENT object) {
				return createRFR3CONTENTAdapter();
			}
			@Override
			public Adapter caseRFR4CONTENT(RFR4CONTENT object) {
				return createRFR4CONTENTAdapter();
			}
			@Override
			public Adapter caseRFR5CONTENT(RFR5CONTENT object) {
				return createRFR5CONTENTAdapter();
			}
			@Override
			public Adapter caseRFR6CONTENT(RFR6CONTENT object) {
				return createRFR6CONTENTAdapter();
			}
			@Override
			public Adapter caseRFR7CONTENT(RFR7CONTENT object) {
				return createRFR7CONTENTAdapter();
			}
			@Override
			public Adapter caseRGS1CONTENT(RGS1CONTENT object) {
				return createRGS1CONTENTAdapter();
			}
			@Override
			public Adapter caseRGS2CONTENT(RGS2CONTENT object) {
				return createRGS2CONTENTAdapter();
			}
			@Override
			public Adapter caseRGS3CONTENT(RGS3CONTENT object) {
				return createRGS3CONTENTAdapter();
			}
			@Override
			public Adapter caseRGSCONTENT(RGSCONTENT object) {
				return createRGSCONTENTAdapter();
			}
			@Override
			public Adapter caseRI(RI object) {
				return createRIAdapter();
			}
			@Override
			public Adapter caseRI1CONTENT(RI1CONTENT object) {
				return createRI1CONTENTAdapter();
			}
			@Override
			public Adapter caseRI2CONTENT(RI2CONTENT object) {
				return createRI2CONTENTAdapter();
			}
			@Override
			public Adapter caseRMC(RMC object) {
				return createRMCAdapter();
			}
			@Override
			public Adapter caseRMC1CONTENT(RMC1CONTENT object) {
				return createRMC1CONTENTAdapter();
			}
			@Override
			public Adapter caseRMC2CONTENT(RMC2CONTENT object) {
				return createRMC2CONTENTAdapter();
			}
			@Override
			public Adapter caseRMC3CONTENT(RMC3CONTENT object) {
				return createRMC3CONTENTAdapter();
			}
			@Override
			public Adapter caseRMC4CONTENT(RMC4CONTENT object) {
				return createRMC4CONTENTAdapter();
			}
			@Override
			public Adapter caseRMI1CONTENT(RMI1CONTENT object) {
				return createRMI1CONTENTAdapter();
			}
			@Override
			public Adapter caseRMI2CONTENT(RMI2CONTENT object) {
				return createRMI2CONTENTAdapter();
			}
			@Override
			public Adapter caseRMI3CONTENT(RMI3CONTENT object) {
				return createRMI3CONTENTAdapter();
			}
			@Override
			public Adapter caseRMICONTENT(RMICONTENT object) {
				return createRMICONTENTAdapter();
			}
			@Override
			public Adapter caseROL10CONTENT(ROL10CONTENT object) {
				return createROL10CONTENTAdapter();
			}
			@Override
			public Adapter caseROL11CONTENT(ROL11CONTENT object) {
				return createROL11CONTENTAdapter();
			}
			@Override
			public Adapter caseROL12CONTENT(ROL12CONTENT object) {
				return createROL12CONTENTAdapter();
			}
			@Override
			public Adapter caseROL1CONTENT(ROL1CONTENT object) {
				return createROL1CONTENTAdapter();
			}
			@Override
			public Adapter caseROL2CONTENT(ROL2CONTENT object) {
				return createROL2CONTENTAdapter();
			}
			@Override
			public Adapter caseROL3CONTENT(ROL3CONTENT object) {
				return createROL3CONTENTAdapter();
			}
			@Override
			public Adapter caseROL4CONTENT(ROL4CONTENT object) {
				return createROL4CONTENTAdapter();
			}
			@Override
			public Adapter caseROL5CONTENT(ROL5CONTENT object) {
				return createROL5CONTENTAdapter();
			}
			@Override
			public Adapter caseROL6CONTENT(ROL6CONTENT object) {
				return createROL6CONTENTAdapter();
			}
			@Override
			public Adapter caseROL7CONTENT(ROL7CONTENT object) {
				return createROL7CONTENTAdapter();
			}
			@Override
			public Adapter caseROL8CONTENT(ROL8CONTENT object) {
				return createROL8CONTENTAdapter();
			}
			@Override
			public Adapter caseROL9CONTENT(ROL9CONTENT object) {
				return createROL9CONTENTAdapter();
			}
			@Override
			public Adapter caseROLCONTENT(ROLCONTENT object) {
				return createROLCONTENTAdapter();
			}
			@Override
			public Adapter caseRP(RP object) {
				return createRPAdapter();
			}
			@Override
			public Adapter caseRP1CONTENT(RP1CONTENT object) {
				return createRP1CONTENTAdapter();
			}
			@Override
			public Adapter caseRP2CONTENT(RP2CONTENT object) {
				return createRP2CONTENTAdapter();
			}
			@Override
			public Adapter caseRP3CONTENT(RP3CONTENT object) {
				return createRP3CONTENTAdapter();
			}
			@Override
			public Adapter caseRP4CONTENT(RP4CONTENT object) {
				return createRP4CONTENTAdapter();
			}
			@Override
			public Adapter caseRPT(RPT object) {
				return createRPTAdapter();
			}
			@Override
			public Adapter caseRPT10CONTENT(RPT10CONTENT object) {
				return createRPT10CONTENTAdapter();
			}
			@Override
			public Adapter caseRPT11CONTENT(RPT11CONTENT object) {
				return createRPT11CONTENTAdapter();
			}
			@Override
			public Adapter caseRPT1CONTENT(RPT1CONTENT object) {
				return createRPT1CONTENTAdapter();
			}
			@Override
			public Adapter caseRPT2CONTENT(RPT2CONTENT object) {
				return createRPT2CONTENTAdapter();
			}
			@Override
			public Adapter caseRPT3CONTENT(RPT3CONTENT object) {
				return createRPT3CONTENTAdapter();
			}
			@Override
			public Adapter caseRPT4CONTENT(RPT4CONTENT object) {
				return createRPT4CONTENTAdapter();
			}
			@Override
			public Adapter caseRPT5CONTENT(RPT5CONTENT object) {
				return createRPT5CONTENTAdapter();
			}
			@Override
			public Adapter caseRPT6CONTENT(RPT6CONTENT object) {
				return createRPT6CONTENTAdapter();
			}
			@Override
			public Adapter caseRPT7CONTENT(RPT7CONTENT object) {
				return createRPT7CONTENTAdapter();
			}
			@Override
			public Adapter caseRPT8CONTENT(RPT8CONTENT object) {
				return createRPT8CONTENTAdapter();
			}
			@Override
			public Adapter caseRPT9CONTENT(RPT9CONTENT object) {
				return createRPT9CONTENTAdapter();
			}
			@Override
			public Adapter caseRQ11CONTENT(RQ11CONTENT object) {
				return createRQ11CONTENTAdapter();
			}
			@Override
			public Adapter caseRQ12CONTENT(RQ12CONTENT object) {
				return createRQ12CONTENTAdapter();
			}
			@Override
			public Adapter caseRQ13CONTENT(RQ13CONTENT object) {
				return createRQ13CONTENTAdapter();
			}
			@Override
			public Adapter caseRQ14CONTENT(RQ14CONTENT object) {
				return createRQ14CONTENTAdapter();
			}
			@Override
			public Adapter caseRQ15CONTENT(RQ15CONTENT object) {
				return createRQ15CONTENTAdapter();
			}
			@Override
			public Adapter caseRQ16CONTENT(RQ16CONTENT object) {
				return createRQ16CONTENTAdapter();
			}
			@Override
			public Adapter caseRQ17CONTENT(RQ17CONTENT object) {
				return createRQ17CONTENTAdapter();
			}
			@Override
			public Adapter caseRQ1CONTENT(RQ1CONTENT object) {
				return createRQ1CONTENTAdapter();
			}
			@Override
			public Adapter caseRQD10CONTENT(RQD10CONTENT object) {
				return createRQD10CONTENTAdapter();
			}
			@Override
			public Adapter caseRQD1CONTENT(RQD1CONTENT object) {
				return createRQD1CONTENTAdapter();
			}
			@Override
			public Adapter caseRQD2CONTENT(RQD2CONTENT object) {
				return createRQD2CONTENTAdapter();
			}
			@Override
			public Adapter caseRQD3CONTENT(RQD3CONTENT object) {
				return createRQD3CONTENTAdapter();
			}
			@Override
			public Adapter caseRQD4CONTENT(RQD4CONTENT object) {
				return createRQD4CONTENTAdapter();
			}
			@Override
			public Adapter caseRQD5CONTENT(RQD5CONTENT object) {
				return createRQD5CONTENTAdapter();
			}
			@Override
			public Adapter caseRQD6CONTENT(RQD6CONTENT object) {
				return createRQD6CONTENTAdapter();
			}
			@Override
			public Adapter caseRQD7CONTENT(RQD7CONTENT object) {
				return createRQD7CONTENTAdapter();
			}
			@Override
			public Adapter caseRQD8CONTENT(RQD8CONTENT object) {
				return createRQD8CONTENTAdapter();
			}
			@Override
			public Adapter caseRQD9CONTENT(RQD9CONTENT object) {
				return createRQD9CONTENTAdapter();
			}
			@Override
			public Adapter caseRQDCONTENT(RQDCONTENT object) {
				return createRQDCONTENTAdapter();
			}
			@Override
			public Adapter caseRXA10CONTENT(RXA10CONTENT object) {
				return createRXA10CONTENTAdapter();
			}
			@Override
			public Adapter caseRXA11CONTENT(RXA11CONTENT object) {
				return createRXA11CONTENTAdapter();
			}
			@Override
			public Adapter caseRXA12CONTENT(RXA12CONTENT object) {
				return createRXA12CONTENTAdapter();
			}
			@Override
			public Adapter caseRXA13CONTENT(RXA13CONTENT object) {
				return createRXA13CONTENTAdapter();
			}
			@Override
			public Adapter caseRXA14CONTENT(RXA14CONTENT object) {
				return createRXA14CONTENTAdapter();
			}
			@Override
			public Adapter caseRXA15CONTENT(RXA15CONTENT object) {
				return createRXA15CONTENTAdapter();
			}
			@Override
			public Adapter caseRXA16CONTENT(RXA16CONTENT object) {
				return createRXA16CONTENTAdapter();
			}
			@Override
			public Adapter caseRXA17CONTENT(RXA17CONTENT object) {
				return createRXA17CONTENTAdapter();
			}
			@Override
			public Adapter caseRXA18CONTENT(RXA18CONTENT object) {
				return createRXA18CONTENTAdapter();
			}
			@Override
			public Adapter caseRXA19CONTENT(RXA19CONTENT object) {
				return createRXA19CONTENTAdapter();
			}
			@Override
			public Adapter caseRXA1CONTENT(RXA1CONTENT object) {
				return createRXA1CONTENTAdapter();
			}
			@Override
			public Adapter caseRXA20CONTENT(RXA20CONTENT object) {
				return createRXA20CONTENTAdapter();
			}
			@Override
			public Adapter caseRXA21CONTENT(RXA21CONTENT object) {
				return createRXA21CONTENTAdapter();
			}
			@Override
			public Adapter caseRXA22CONTENT(RXA22CONTENT object) {
				return createRXA22CONTENTAdapter();
			}
			@Override
			public Adapter caseRXA23CONTENT(RXA23CONTENT object) {
				return createRXA23CONTENTAdapter();
			}
			@Override
			public Adapter caseRXA24CONTENT(RXA24CONTENT object) {
				return createRXA24CONTENTAdapter();
			}
			@Override
			public Adapter caseRXA25CONTENT(RXA25CONTENT object) {
				return createRXA25CONTENTAdapter();
			}
			@Override
			public Adapter caseRXA26CONTENT(RXA26CONTENT object) {
				return createRXA26CONTENTAdapter();
			}
			@Override
			public Adapter caseRXA2CONTENT(RXA2CONTENT object) {
				return createRXA2CONTENTAdapter();
			}
			@Override
			public Adapter caseRXA3CONTENT(RXA3CONTENT object) {
				return createRXA3CONTENTAdapter();
			}
			@Override
			public Adapter caseRXA4CONTENT(RXA4CONTENT object) {
				return createRXA4CONTENTAdapter();
			}
			@Override
			public Adapter caseRXA5CONTENT(RXA5CONTENT object) {
				return createRXA5CONTENTAdapter();
			}
			@Override
			public Adapter caseRXA6CONTENT(RXA6CONTENT object) {
				return createRXA6CONTENTAdapter();
			}
			@Override
			public Adapter caseRXA7CONTENT(RXA7CONTENT object) {
				return createRXA7CONTENTAdapter();
			}
			@Override
			public Adapter caseRXA8CONTENT(RXA8CONTENT object) {
				return createRXA8CONTENTAdapter();
			}
			@Override
			public Adapter caseRXA9CONTENT(RXA9CONTENT object) {
				return createRXA9CONTENTAdapter();
			}
			@Override
			public Adapter caseRXACONTENT(RXACONTENT object) {
				return createRXACONTENTAdapter();
			}
			@Override
			public Adapter caseRXC1CONTENT(RXC1CONTENT object) {
				return createRXC1CONTENTAdapter();
			}
			@Override
			public Adapter caseRXC2CONTENT(RXC2CONTENT object) {
				return createRXC2CONTENTAdapter();
			}
			@Override
			public Adapter caseRXC3CONTENT(RXC3CONTENT object) {
				return createRXC3CONTENTAdapter();
			}
			@Override
			public Adapter caseRXC4CONTENT(RXC4CONTENT object) {
				return createRXC4CONTENTAdapter();
			}
			@Override
			public Adapter caseRXC5CONTENT(RXC5CONTENT object) {
				return createRXC5CONTENTAdapter();
			}
			@Override
			public Adapter caseRXC6CONTENT(RXC6CONTENT object) {
				return createRXC6CONTENTAdapter();
			}
			@Override
			public Adapter caseRXC7CONTENT(RXC7CONTENT object) {
				return createRXC7CONTENTAdapter();
			}
			@Override
			public Adapter caseRXC8CONTENT(RXC8CONTENT object) {
				return createRXC8CONTENTAdapter();
			}
			@Override
			public Adapter caseRXC9CONTENT(RXC9CONTENT object) {
				return createRXC9CONTENTAdapter();
			}
			@Override
			public Adapter caseRXCCONTENT(RXCCONTENT object) {
				return createRXCCONTENTAdapter();
			}
			@Override
			public Adapter caseRXD10CONTENT(RXD10CONTENT object) {
				return createRXD10CONTENTAdapter();
			}
			@Override
			public Adapter caseRXD11CONTENT(RXD11CONTENT object) {
				return createRXD11CONTENTAdapter();
			}
			@Override
			public Adapter caseRXD12CONTENT(RXD12CONTENT object) {
				return createRXD12CONTENTAdapter();
			}
			@Override
			public Adapter caseRXD13CONTENT(RXD13CONTENT object) {
				return createRXD13CONTENTAdapter();
			}
			@Override
			public Adapter caseRXD14CONTENT(RXD14CONTENT object) {
				return createRXD14CONTENTAdapter();
			}
			@Override
			public Adapter caseRXD15CONTENT(RXD15CONTENT object) {
				return createRXD15CONTENTAdapter();
			}
			@Override
			public Adapter caseRXD16CONTENT(RXD16CONTENT object) {
				return createRXD16CONTENTAdapter();
			}
			@Override
			public Adapter caseRXD17CONTENT(RXD17CONTENT object) {
				return createRXD17CONTENTAdapter();
			}
			@Override
			public Adapter caseRXD18CONTENT(RXD18CONTENT object) {
				return createRXD18CONTENTAdapter();
			}
			@Override
			public Adapter caseRXD19CONTENT(RXD19CONTENT object) {
				return createRXD19CONTENTAdapter();
			}
			@Override
			public Adapter caseRXD1CONTENT(RXD1CONTENT object) {
				return createRXD1CONTENTAdapter();
			}
			@Override
			public Adapter caseRXD20CONTENT(RXD20CONTENT object) {
				return createRXD20CONTENTAdapter();
			}
			@Override
			public Adapter caseRXD21CONTENT(RXD21CONTENT object) {
				return createRXD21CONTENTAdapter();
			}
			@Override
			public Adapter caseRXD22CONTENT(RXD22CONTENT object) {
				return createRXD22CONTENTAdapter();
			}
			@Override
			public Adapter caseRXD23CONTENT(RXD23CONTENT object) {
				return createRXD23CONTENTAdapter();
			}
			@Override
			public Adapter caseRXD24CONTENT(RXD24CONTENT object) {
				return createRXD24CONTENTAdapter();
			}
			@Override
			public Adapter caseRXD25CONTENT(RXD25CONTENT object) {
				return createRXD25CONTENTAdapter();
			}
			@Override
			public Adapter caseRXD26CONTENT(RXD26CONTENT object) {
				return createRXD26CONTENTAdapter();
			}
			@Override
			public Adapter caseRXD27CONTENT(RXD27CONTENT object) {
				return createRXD27CONTENTAdapter();
			}
			@Override
			public Adapter caseRXD28CONTENT(RXD28CONTENT object) {
				return createRXD28CONTENTAdapter();
			}
			@Override
			public Adapter caseRXD29CONTENT(RXD29CONTENT object) {
				return createRXD29CONTENTAdapter();
			}
			@Override
			public Adapter caseRXD2CONTENT(RXD2CONTENT object) {
				return createRXD2CONTENTAdapter();
			}
			@Override
			public Adapter caseRXD30CONTENT(RXD30CONTENT object) {
				return createRXD30CONTENTAdapter();
			}
			@Override
			public Adapter caseRXD31CONTENT(RXD31CONTENT object) {
				return createRXD31CONTENTAdapter();
			}
			@Override
			public Adapter caseRXD32CONTENT(RXD32CONTENT object) {
				return createRXD32CONTENTAdapter();
			}
			@Override
			public Adapter caseRXD33CONTENT(RXD33CONTENT object) {
				return createRXD33CONTENTAdapter();
			}
			@Override
			public Adapter caseRXD3CONTENT(RXD3CONTENT object) {
				return createRXD3CONTENTAdapter();
			}
			@Override
			public Adapter caseRXD4CONTENT(RXD4CONTENT object) {
				return createRXD4CONTENTAdapter();
			}
			@Override
			public Adapter caseRXD5CONTENT(RXD5CONTENT object) {
				return createRXD5CONTENTAdapter();
			}
			@Override
			public Adapter caseRXD6CONTENT(RXD6CONTENT object) {
				return createRXD6CONTENTAdapter();
			}
			@Override
			public Adapter caseRXD7CONTENT(RXD7CONTENT object) {
				return createRXD7CONTENTAdapter();
			}
			@Override
			public Adapter caseRXD8CONTENT(RXD8CONTENT object) {
				return createRXD8CONTENTAdapter();
			}
			@Override
			public Adapter caseRXD9CONTENT(RXD9CONTENT object) {
				return createRXD9CONTENTAdapter();
			}
			@Override
			public Adapter caseRXDCONTENT(RXDCONTENT object) {
				return createRXDCONTENTAdapter();
			}
			@Override
			public Adapter caseRXE10CONTENT(RXE10CONTENT object) {
				return createRXE10CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE11CONTENT(RXE11CONTENT object) {
				return createRXE11CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE12CONTENT(RXE12CONTENT object) {
				return createRXE12CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE13CONTENT(RXE13CONTENT object) {
				return createRXE13CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE14CONTENT(RXE14CONTENT object) {
				return createRXE14CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE15CONTENT(RXE15CONTENT object) {
				return createRXE15CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE16CONTENT(RXE16CONTENT object) {
				return createRXE16CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE17CONTENT(RXE17CONTENT object) {
				return createRXE17CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE18CONTENT(RXE18CONTENT object) {
				return createRXE18CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE19CONTENT(RXE19CONTENT object) {
				return createRXE19CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE1CONTENT(RXE1CONTENT object) {
				return createRXE1CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE20CONTENT(RXE20CONTENT object) {
				return createRXE20CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE21CONTENT(RXE21CONTENT object) {
				return createRXE21CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE22CONTENT(RXE22CONTENT object) {
				return createRXE22CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE23CONTENT(RXE23CONTENT object) {
				return createRXE23CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE24CONTENT(RXE24CONTENT object) {
				return createRXE24CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE25CONTENT(RXE25CONTENT object) {
				return createRXE25CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE26CONTENT(RXE26CONTENT object) {
				return createRXE26CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE27CONTENT(RXE27CONTENT object) {
				return createRXE27CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE28CONTENT(RXE28CONTENT object) {
				return createRXE28CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE29CONTENT(RXE29CONTENT object) {
				return createRXE29CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE2CONTENT(RXE2CONTENT object) {
				return createRXE2CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE30CONTENT(RXE30CONTENT object) {
				return createRXE30CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE31CONTENT(RXE31CONTENT object) {
				return createRXE31CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE32CONTENT(RXE32CONTENT object) {
				return createRXE32CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE33CONTENT(RXE33CONTENT object) {
				return createRXE33CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE34CONTENT(RXE34CONTENT object) {
				return createRXE34CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE35CONTENT(RXE35CONTENT object) {
				return createRXE35CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE36CONTENT(RXE36CONTENT object) {
				return createRXE36CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE37CONTENT(RXE37CONTENT object) {
				return createRXE37CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE38CONTENT(RXE38CONTENT object) {
				return createRXE38CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE39CONTENT(RXE39CONTENT object) {
				return createRXE39CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE3CONTENT(RXE3CONTENT object) {
				return createRXE3CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE40CONTENT(RXE40CONTENT object) {
				return createRXE40CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE41CONTENT(RXE41CONTENT object) {
				return createRXE41CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE42CONTENT(RXE42CONTENT object) {
				return createRXE42CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE43CONTENT(RXE43CONTENT object) {
				return createRXE43CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE44CONTENT(RXE44CONTENT object) {
				return createRXE44CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE4CONTENT(RXE4CONTENT object) {
				return createRXE4CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE5CONTENT(RXE5CONTENT object) {
				return createRXE5CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE6CONTENT(RXE6CONTENT object) {
				return createRXE6CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE7CONTENT(RXE7CONTENT object) {
				return createRXE7CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE8CONTENT(RXE8CONTENT object) {
				return createRXE8CONTENTAdapter();
			}
			@Override
			public Adapter caseRXE9CONTENT(RXE9CONTENT object) {
				return createRXE9CONTENTAdapter();
			}
			@Override
			public Adapter caseRXECONTENT(RXECONTENT object) {
				return createRXECONTENTAdapter();
			}
			@Override
			public Adapter caseRXG10CONTENT(RXG10CONTENT object) {
				return createRXG10CONTENTAdapter();
			}
			@Override
			public Adapter caseRXG11CONTENT(RXG11CONTENT object) {
				return createRXG11CONTENTAdapter();
			}
			@Override
			public Adapter caseRXG12CONTENT(RXG12CONTENT object) {
				return createRXG12CONTENTAdapter();
			}
			@Override
			public Adapter caseRXG13CONTENT(RXG13CONTENT object) {
				return createRXG13CONTENTAdapter();
			}
			@Override
			public Adapter caseRXG14CONTENT(RXG14CONTENT object) {
				return createRXG14CONTENTAdapter();
			}
			@Override
			public Adapter caseRXG15CONTENT(RXG15CONTENT object) {
				return createRXG15CONTENTAdapter();
			}
			@Override
			public Adapter caseRXG16CONTENT(RXG16CONTENT object) {
				return createRXG16CONTENTAdapter();
			}
			@Override
			public Adapter caseRXG17CONTENT(RXG17CONTENT object) {
				return createRXG17CONTENTAdapter();
			}
			@Override
			public Adapter caseRXG18CONTENT(RXG18CONTENT object) {
				return createRXG18CONTENTAdapter();
			}
			@Override
			public Adapter caseRXG19CONTENT(RXG19CONTENT object) {
				return createRXG19CONTENTAdapter();
			}
			@Override
			public Adapter caseRXG1CONTENT(RXG1CONTENT object) {
				return createRXG1CONTENTAdapter();
			}
			@Override
			public Adapter caseRXG20CONTENT(RXG20CONTENT object) {
				return createRXG20CONTENTAdapter();
			}
			@Override
			public Adapter caseRXG21CONTENT(RXG21CONTENT object) {
				return createRXG21CONTENTAdapter();
			}
			@Override
			public Adapter caseRXG22CONTENT(RXG22CONTENT object) {
				return createRXG22CONTENTAdapter();
			}
			@Override
			public Adapter caseRXG23CONTENT(RXG23CONTENT object) {
				return createRXG23CONTENTAdapter();
			}
			@Override
			public Adapter caseRXG24CONTENT(RXG24CONTENT object) {
				return createRXG24CONTENTAdapter();
			}
			@Override
			public Adapter caseRXG25CONTENT(RXG25CONTENT object) {
				return createRXG25CONTENTAdapter();
			}
			@Override
			public Adapter caseRXG26CONTENT(RXG26CONTENT object) {
				return createRXG26CONTENTAdapter();
			}
			@Override
			public Adapter caseRXG2CONTENT(RXG2CONTENT object) {
				return createRXG2CONTENTAdapter();
			}
			@Override
			public Adapter caseRXG3CONTENT(RXG3CONTENT object) {
				return createRXG3CONTENTAdapter();
			}
			@Override
			public Adapter caseRXG4CONTENT(RXG4CONTENT object) {
				return createRXG4CONTENTAdapter();
			}
			@Override
			public Adapter caseRXG5CONTENT(RXG5CONTENT object) {
				return createRXG5CONTENTAdapter();
			}
			@Override
			public Adapter caseRXG6CONTENT(RXG6CONTENT object) {
				return createRXG6CONTENTAdapter();
			}
			@Override
			public Adapter caseRXG7CONTENT(RXG7CONTENT object) {
				return createRXG7CONTENTAdapter();
			}
			@Override
			public Adapter caseRXG8CONTENT(RXG8CONTENT object) {
				return createRXG8CONTENTAdapter();
			}
			@Override
			public Adapter caseRXG9CONTENT(RXG9CONTENT object) {
				return createRXG9CONTENTAdapter();
			}
			@Override
			public Adapter caseRXGCONTENT(RXGCONTENT object) {
				return createRXGCONTENTAdapter();
			}
			@Override
			public Adapter caseRXO10CONTENT(RXO10CONTENT object) {
				return createRXO10CONTENTAdapter();
			}
			@Override
			public Adapter caseRXO11CONTENT(RXO11CONTENT object) {
				return createRXO11CONTENTAdapter();
			}
			@Override
			public Adapter caseRXO12CONTENT(RXO12CONTENT object) {
				return createRXO12CONTENTAdapter();
			}
			@Override
			public Adapter caseRXO13CONTENT(RXO13CONTENT object) {
				return createRXO13CONTENTAdapter();
			}
			@Override
			public Adapter caseRXO14CONTENT(RXO14CONTENT object) {
				return createRXO14CONTENTAdapter();
			}
			@Override
			public Adapter caseRXO15CONTENT(RXO15CONTENT object) {
				return createRXO15CONTENTAdapter();
			}
			@Override
			public Adapter caseRXO16CONTENT(RXO16CONTENT object) {
				return createRXO16CONTENTAdapter();
			}
			@Override
			public Adapter caseRXO17CONTENT(RXO17CONTENT object) {
				return createRXO17CONTENTAdapter();
			}
			@Override
			public Adapter caseRXO18CONTENT(RXO18CONTENT object) {
				return createRXO18CONTENTAdapter();
			}
			@Override
			public Adapter caseRXO19CONTENT(RXO19CONTENT object) {
				return createRXO19CONTENTAdapter();
			}
			@Override
			public Adapter caseRXO1CONTENT(RXO1CONTENT object) {
				return createRXO1CONTENTAdapter();
			}
			@Override
			public Adapter caseRXO20CONTENT(RXO20CONTENT object) {
				return createRXO20CONTENTAdapter();
			}
			@Override
			public Adapter caseRXO21CONTENT(RXO21CONTENT object) {
				return createRXO21CONTENTAdapter();
			}
			@Override
			public Adapter caseRXO22CONTENT(RXO22CONTENT object) {
				return createRXO22CONTENTAdapter();
			}
			@Override
			public Adapter caseRXO23CONTENT(RXO23CONTENT object) {
				return createRXO23CONTENTAdapter();
			}
			@Override
			public Adapter caseRXO24CONTENT(RXO24CONTENT object) {
				return createRXO24CONTENTAdapter();
			}
			@Override
			public Adapter caseRXO25CONTENT(RXO25CONTENT object) {
				return createRXO25CONTENTAdapter();
			}
			@Override
			public Adapter caseRXO26CONTENT(RXO26CONTENT object) {
				return createRXO26CONTENTAdapter();
			}
			@Override
			public Adapter caseRXO27CONTENT(RXO27CONTENT object) {
				return createRXO27CONTENTAdapter();
			}
			@Override
			public Adapter caseRXO28CONTENT(RXO28CONTENT object) {
				return createRXO28CONTENTAdapter();
			}
			@Override
			public Adapter caseRXO2CONTENT(RXO2CONTENT object) {
				return createRXO2CONTENTAdapter();
			}
			@Override
			public Adapter caseRXO3CONTENT(RXO3CONTENT object) {
				return createRXO3CONTENTAdapter();
			}
			@Override
			public Adapter caseRXO4CONTENT(RXO4CONTENT object) {
				return createRXO4CONTENTAdapter();
			}
			@Override
			public Adapter caseRXO5CONTENT(RXO5CONTENT object) {
				return createRXO5CONTENTAdapter();
			}
			@Override
			public Adapter caseRXO6CONTENT(RXO6CONTENT object) {
				return createRXO6CONTENTAdapter();
			}
			@Override
			public Adapter caseRXO7CONTENT(RXO7CONTENT object) {
				return createRXO7CONTENTAdapter();
			}
			@Override
			public Adapter caseRXO8CONTENT(RXO8CONTENT object) {
				return createRXO8CONTENTAdapter();
			}
			@Override
			public Adapter caseRXO9CONTENT(RXO9CONTENT object) {
				return createRXO9CONTENTAdapter();
			}
			@Override
			public Adapter caseRXOCONTENT(RXOCONTENT object) {
				return createRXOCONTENTAdapter();
			}
			@Override
			public Adapter caseRXR1CONTENT(RXR1CONTENT object) {
				return createRXR1CONTENTAdapter();
			}
			@Override
			public Adapter caseRXR2CONTENT(RXR2CONTENT object) {
				return createRXR2CONTENTAdapter();
			}
			@Override
			public Adapter caseRXR3CONTENT(RXR3CONTENT object) {
				return createRXR3CONTENTAdapter();
			}
			@Override
			public Adapter caseRXR4CONTENT(RXR4CONTENT object) {
				return createRXR4CONTENTAdapter();
			}
			@Override
			public Adapter caseRXR5CONTENT(RXR5CONTENT object) {
				return createRXR5CONTENTAdapter();
			}
			@Override
			public Adapter caseRXR6CONTENT(RXR6CONTENT object) {
				return createRXR6CONTENTAdapter();
			}
			@Override
			public Adapter caseRXRCONTENT(RXRCONTENT object) {
				return createRXRCONTENTAdapter();
			}
			@Override
			public Adapter caseSAC10CONTENT(SAC10CONTENT object) {
				return createSAC10CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC11CONTENT(SAC11CONTENT object) {
				return createSAC11CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC12CONTENT(SAC12CONTENT object) {
				return createSAC12CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC13CONTENT(SAC13CONTENT object) {
				return createSAC13CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC14CONTENT(SAC14CONTENT object) {
				return createSAC14CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC15CONTENT(SAC15CONTENT object) {
				return createSAC15CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC16CONTENT(SAC16CONTENT object) {
				return createSAC16CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC17CONTENT(SAC17CONTENT object) {
				return createSAC17CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC18CONTENT(SAC18CONTENT object) {
				return createSAC18CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC19CONTENT(SAC19CONTENT object) {
				return createSAC19CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC1CONTENT(SAC1CONTENT object) {
				return createSAC1CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC20CONTENT(SAC20CONTENT object) {
				return createSAC20CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC21CONTENT(SAC21CONTENT object) {
				return createSAC21CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC22CONTENT(SAC22CONTENT object) {
				return createSAC22CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC23CONTENT(SAC23CONTENT object) {
				return createSAC23CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC24CONTENT(SAC24CONTENT object) {
				return createSAC24CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC25CONTENT(SAC25CONTENT object) {
				return createSAC25CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC26CONTENT(SAC26CONTENT object) {
				return createSAC26CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC27CONTENT(SAC27CONTENT object) {
				return createSAC27CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC28CONTENT(SAC28CONTENT object) {
				return createSAC28CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC29CONTENT(SAC29CONTENT object) {
				return createSAC29CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC2CONTENT(SAC2CONTENT object) {
				return createSAC2CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC30CONTENT(SAC30CONTENT object) {
				return createSAC30CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC31CONTENT(SAC31CONTENT object) {
				return createSAC31CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC32CONTENT(SAC32CONTENT object) {
				return createSAC32CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC33CONTENT(SAC33CONTENT object) {
				return createSAC33CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC34CONTENT(SAC34CONTENT object) {
				return createSAC34CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC35CONTENT(SAC35CONTENT object) {
				return createSAC35CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC36CONTENT(SAC36CONTENT object) {
				return createSAC36CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC37CONTENT(SAC37CONTENT object) {
				return createSAC37CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC38CONTENT(SAC38CONTENT object) {
				return createSAC38CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC39CONTENT(SAC39CONTENT object) {
				return createSAC39CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC3CONTENT(SAC3CONTENT object) {
				return createSAC3CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC40CONTENT(SAC40CONTENT object) {
				return createSAC40CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC41CONTENT(SAC41CONTENT object) {
				return createSAC41CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC42CONTENT(SAC42CONTENT object) {
				return createSAC42CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC43CONTENT(SAC43CONTENT object) {
				return createSAC43CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC44CONTENT(SAC44CONTENT object) {
				return createSAC44CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC4CONTENT(SAC4CONTENT object) {
				return createSAC4CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC5CONTENT(SAC5CONTENT object) {
				return createSAC5CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC6CONTENT(SAC6CONTENT object) {
				return createSAC6CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC7CONTENT(SAC7CONTENT object) {
				return createSAC7CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC8CONTENT(SAC8CONTENT object) {
				return createSAC8CONTENTAdapter();
			}
			@Override
			public Adapter caseSAC9CONTENT(SAC9CONTENT object) {
				return createSAC9CONTENTAdapter();
			}
			@Override
			public Adapter caseSACCONTENT(SACCONTENT object) {
				return createSACCONTENTAdapter();
			}
			@Override
			public Adapter caseSAD(SAD object) {
				return createSADAdapter();
			}
			@Override
			public Adapter caseSAD1CONTENT(SAD1CONTENT object) {
				return createSAD1CONTENTAdapter();
			}
			@Override
			public Adapter caseSAD2CONTENT(SAD2CONTENT object) {
				return createSAD2CONTENTAdapter();
			}
			@Override
			public Adapter caseSAD3CONTENT(SAD3CONTENT object) {
				return createSAD3CONTENTAdapter();
			}
			@Override
			public Adapter caseSCH10CONTENT(SCH10CONTENT object) {
				return createSCH10CONTENTAdapter();
			}
			@Override
			public Adapter caseSCH11CONTENT(SCH11CONTENT object) {
				return createSCH11CONTENTAdapter();
			}
			@Override
			public Adapter caseSCH12CONTENT(SCH12CONTENT object) {
				return createSCH12CONTENTAdapter();
			}
			@Override
			public Adapter caseSCH13CONTENT(SCH13CONTENT object) {
				return createSCH13CONTENTAdapter();
			}
			@Override
			public Adapter caseSCH14CONTENT(SCH14CONTENT object) {
				return createSCH14CONTENTAdapter();
			}
			@Override
			public Adapter caseSCH15CONTENT(SCH15CONTENT object) {
				return createSCH15CONTENTAdapter();
			}
			@Override
			public Adapter caseSCH16CONTENT(SCH16CONTENT object) {
				return createSCH16CONTENTAdapter();
			}
			@Override
			public Adapter caseSCH17CONTENT(SCH17CONTENT object) {
				return createSCH17CONTENTAdapter();
			}
			@Override
			public Adapter caseSCH18CONTENT(SCH18CONTENT object) {
				return createSCH18CONTENTAdapter();
			}
			@Override
			public Adapter caseSCH19CONTENT(SCH19CONTENT object) {
				return createSCH19CONTENTAdapter();
			}
			@Override
			public Adapter caseSCH1CONTENT(SCH1CONTENT object) {
				return createSCH1CONTENTAdapter();
			}
			@Override
			public Adapter caseSCH20CONTENT(SCH20CONTENT object) {
				return createSCH20CONTENTAdapter();
			}
			@Override
			public Adapter caseSCH21CONTENT(SCH21CONTENT object) {
				return createSCH21CONTENTAdapter();
			}
			@Override
			public Adapter caseSCH22CONTENT(SCH22CONTENT object) {
				return createSCH22CONTENTAdapter();
			}
			@Override
			public Adapter caseSCH23CONTENT(SCH23CONTENT object) {
				return createSCH23CONTENTAdapter();
			}
			@Override
			public Adapter caseSCH24CONTENT(SCH24CONTENT object) {
				return createSCH24CONTENTAdapter();
			}
			@Override
			public Adapter caseSCH25CONTENT(SCH25CONTENT object) {
				return createSCH25CONTENTAdapter();
			}
			@Override
			public Adapter caseSCH26CONTENT(SCH26CONTENT object) {
				return createSCH26CONTENTAdapter();
			}
			@Override
			public Adapter caseSCH27CONTENT(SCH27CONTENT object) {
				return createSCH27CONTENTAdapter();
			}
			@Override
			public Adapter caseSCH2CONTENT(SCH2CONTENT object) {
				return createSCH2CONTENTAdapter();
			}
			@Override
			public Adapter caseSCH3CONTENT(SCH3CONTENT object) {
				return createSCH3CONTENTAdapter();
			}
			@Override
			public Adapter caseSCH4CONTENT(SCH4CONTENT object) {
				return createSCH4CONTENTAdapter();
			}
			@Override
			public Adapter caseSCH5CONTENT(SCH5CONTENT object) {
				return createSCH5CONTENTAdapter();
			}
			@Override
			public Adapter caseSCH6CONTENT(SCH6CONTENT object) {
				return createSCH6CONTENTAdapter();
			}
			@Override
			public Adapter caseSCH7CONTENT(SCH7CONTENT object) {
				return createSCH7CONTENTAdapter();
			}
			@Override
			public Adapter caseSCH8CONTENT(SCH8CONTENT object) {
				return createSCH8CONTENTAdapter();
			}
			@Override
			public Adapter caseSCH9CONTENT(SCH9CONTENT object) {
				return createSCH9CONTENTAdapter();
			}
			@Override
			public Adapter caseSCHCONTENT(SCHCONTENT object) {
				return createSCHCONTENTAdapter();
			}
			@Override
			public Adapter caseSCV(SCV object) {
				return createSCVAdapter();
			}
			@Override
			public Adapter caseSCV1CONTENT(SCV1CONTENT object) {
				return createSCV1CONTENTAdapter();
			}
			@Override
			public Adapter caseSCV2CONTENT(SCV2CONTENT object) {
				return createSCV2CONTENTAdapter();
			}
			@Override
			public Adapter caseSFT1CONTENT(SFT1CONTENT object) {
				return createSFT1CONTENTAdapter();
			}
			@Override
			public Adapter caseSFT2CONTENT(SFT2CONTENT object) {
				return createSFT2CONTENTAdapter();
			}
			@Override
			public Adapter caseSFT3CONTENT(SFT3CONTENT object) {
				return createSFT3CONTENTAdapter();
			}
			@Override
			public Adapter caseSFT4CONTENT(SFT4CONTENT object) {
				return createSFT4CONTENTAdapter();
			}
			@Override
			public Adapter caseSFT5CONTENT(SFT5CONTENT object) {
				return createSFT5CONTENTAdapter();
			}
			@Override
			public Adapter caseSFT6CONTENT(SFT6CONTENT object) {
				return createSFT6CONTENTAdapter();
			}
			@Override
			public Adapter caseSFTCONTENT(SFTCONTENT object) {
				return createSFTCONTENTAdapter();
			}
			@Override
			public Adapter caseSID1CONTENT(SID1CONTENT object) {
				return createSID1CONTENTAdapter();
			}
			@Override
			public Adapter caseSID2CONTENT(SID2CONTENT object) {
				return createSID2CONTENTAdapter();
			}
			@Override
			public Adapter caseSID3CONTENT(SID3CONTENT object) {
				return createSID3CONTENTAdapter();
			}
			@Override
			public Adapter caseSID4CONTENT(SID4CONTENT object) {
				return createSID4CONTENTAdapter();
			}
			@Override
			public Adapter caseSIDCONTENT(SIDCONTENT object) {
				return createSIDCONTENTAdapter();
			}
			@Override
			public Adapter caseSN(SN object) {
				return createSNAdapter();
			}
			@Override
			public Adapter caseSN1CONTENT(SN1CONTENT object) {
				return createSN1CONTENTAdapter();
			}
			@Override
			public Adapter caseSN2CONTENT(SN2CONTENT object) {
				return createSN2CONTENTAdapter();
			}
			@Override
			public Adapter caseSN3CONTENT(SN3CONTENT object) {
				return createSN3CONTENTAdapter();
			}
			@Override
			public Adapter caseSN4CONTENT(SN4CONTENT object) {
				return createSN4CONTENTAdapter();
			}
			@Override
			public Adapter caseSPD(SPD object) {
				return createSPDAdapter();
			}
			@Override
			public Adapter caseSPD1CONTENT(SPD1CONTENT object) {
				return createSPD1CONTENTAdapter();
			}
			@Override
			public Adapter caseSPD2CONTENT(SPD2CONTENT object) {
				return createSPD2CONTENTAdapter();
			}
			@Override
			public Adapter caseSPD3CONTENT(SPD3CONTENT object) {
				return createSPD3CONTENTAdapter();
			}
			@Override
			public Adapter caseSPD4CONTENT(SPD4CONTENT object) {
				return createSPD4CONTENTAdapter();
			}
			@Override
			public Adapter caseSPM10CONTENT(SPM10CONTENT object) {
				return createSPM10CONTENTAdapter();
			}
			@Override
			public Adapter caseSPM11CONTENT(SPM11CONTENT object) {
				return createSPM11CONTENTAdapter();
			}
			@Override
			public Adapter caseSPM12CONTENT(SPM12CONTENT object) {
				return createSPM12CONTENTAdapter();
			}
			@Override
			public Adapter caseSPM13CONTENT(SPM13CONTENT object) {
				return createSPM13CONTENTAdapter();
			}
			@Override
			public Adapter caseSPM14CONTENT(SPM14CONTENT object) {
				return createSPM14CONTENTAdapter();
			}
			@Override
			public Adapter caseSPM15CONTENT(SPM15CONTENT object) {
				return createSPM15CONTENTAdapter();
			}
			@Override
			public Adapter caseSPM16CONTENT(SPM16CONTENT object) {
				return createSPM16CONTENTAdapter();
			}
			@Override
			public Adapter caseSPM17CONTENT(SPM17CONTENT object) {
				return createSPM17CONTENTAdapter();
			}
			@Override
			public Adapter caseSPM18CONTENT(SPM18CONTENT object) {
				return createSPM18CONTENTAdapter();
			}
			@Override
			public Adapter caseSPM19CONTENT(SPM19CONTENT object) {
				return createSPM19CONTENTAdapter();
			}
			@Override
			public Adapter caseSPM1CONTENT(SPM1CONTENT object) {
				return createSPM1CONTENTAdapter();
			}
			@Override
			public Adapter caseSPM20CONTENT(SPM20CONTENT object) {
				return createSPM20CONTENTAdapter();
			}
			@Override
			public Adapter caseSPM21CONTENT(SPM21CONTENT object) {
				return createSPM21CONTENTAdapter();
			}
			@Override
			public Adapter caseSPM22CONTENT(SPM22CONTENT object) {
				return createSPM22CONTENTAdapter();
			}
			@Override
			public Adapter caseSPM23CONTENT(SPM23CONTENT object) {
				return createSPM23CONTENTAdapter();
			}
			@Override
			public Adapter caseSPM24CONTENT(SPM24CONTENT object) {
				return createSPM24CONTENTAdapter();
			}
			@Override
			public Adapter caseSPM25CONTENT(SPM25CONTENT object) {
				return createSPM25CONTENTAdapter();
			}
			@Override
			public Adapter caseSPM26CONTENT(SPM26CONTENT object) {
				return createSPM26CONTENTAdapter();
			}
			@Override
			public Adapter caseSPM27CONTENT(SPM27CONTENT object) {
				return createSPM27CONTENTAdapter();
			}
			@Override
			public Adapter caseSPM28CONTENT(SPM28CONTENT object) {
				return createSPM28CONTENTAdapter();
			}
			@Override
			public Adapter caseSPM29CONTENT(SPM29CONTENT object) {
				return createSPM29CONTENTAdapter();
			}
			@Override
			public Adapter caseSPM2CONTENT(SPM2CONTENT object) {
				return createSPM2CONTENTAdapter();
			}
			@Override
			public Adapter caseSPM3CONTENT(SPM3CONTENT object) {
				return createSPM3CONTENTAdapter();
			}
			@Override
			public Adapter caseSPM4CONTENT(SPM4CONTENT object) {
				return createSPM4CONTENTAdapter();
			}
			@Override
			public Adapter caseSPM5CONTENT(SPM5CONTENT object) {
				return createSPM5CONTENTAdapter();
			}
			@Override
			public Adapter caseSPM6CONTENT(SPM6CONTENT object) {
				return createSPM6CONTENTAdapter();
			}
			@Override
			public Adapter caseSPM7CONTENT(SPM7CONTENT object) {
				return createSPM7CONTENTAdapter();
			}
			@Override
			public Adapter caseSPM8CONTENT(SPM8CONTENT object) {
				return createSPM8CONTENTAdapter();
			}
			@Override
			public Adapter caseSPM9CONTENT(SPM9CONTENT object) {
				return createSPM9CONTENTAdapter();
			}
			@Override
			public Adapter caseSPMCONTENT(SPMCONTENT object) {
				return createSPMCONTENTAdapter();
			}
			@Override
			public Adapter caseSPR1CONTENT(SPR1CONTENT object) {
				return createSPR1CONTENTAdapter();
			}
			@Override
			public Adapter caseSPR2CONTENT(SPR2CONTENT object) {
				return createSPR2CONTENTAdapter();
			}
			@Override
			public Adapter caseSPR3CONTENT(SPR3CONTENT object) {
				return createSPR3CONTENTAdapter();
			}
			@Override
			public Adapter caseSPR4CONTENT(SPR4CONTENT object) {
				return createSPR4CONTENTAdapter();
			}
			@Override
			public Adapter caseSPRCONTENT(SPRCONTENT object) {
				return createSPRCONTENTAdapter();
			}
			@Override
			public Adapter caseSPS(SPS object) {
				return createSPSAdapter();
			}
			@Override
			public Adapter caseSPS1CONTENT(SPS1CONTENT object) {
				return createSPS1CONTENTAdapter();
			}
			@Override
			public Adapter caseSPS2CONTENT(SPS2CONTENT object) {
				return createSPS2CONTENTAdapter();
			}
			@Override
			public Adapter caseSPS3CONTENT(SPS3CONTENT object) {
				return createSPS3CONTENTAdapter();
			}
			@Override
			public Adapter caseSPS4CONTENT(SPS4CONTENT object) {
				return createSPS4CONTENTAdapter();
			}
			@Override
			public Adapter caseSPS5CONTENT(SPS5CONTENT object) {
				return createSPS5CONTENTAdapter();
			}
			@Override
			public Adapter caseSPS6CONTENT(SPS6CONTENT object) {
				return createSPS6CONTENTAdapter();
			}
			@Override
			public Adapter caseSPS7CONTENT(SPS7CONTENT object) {
				return createSPS7CONTENTAdapter();
			}
			@Override
			public Adapter caseSRT(SRT object) {
				return createSRTAdapter();
			}
			@Override
			public Adapter caseSRT1CONTENT(SRT1CONTENT object) {
				return createSRT1CONTENTAdapter();
			}
			@Override
			public Adapter caseSRT2CONTENT(SRT2CONTENT object) {
				return createSRT2CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF10CONTENT(STF10CONTENT object) {
				return createSTF10CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF11CONTENT(STF11CONTENT object) {
				return createSTF11CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF12CONTENT(STF12CONTENT object) {
				return createSTF12CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF13CONTENT(STF13CONTENT object) {
				return createSTF13CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF14CONTENT(STF14CONTENT object) {
				return createSTF14CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF15CONTENT(STF15CONTENT object) {
				return createSTF15CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF16CONTENT(STF16CONTENT object) {
				return createSTF16CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF17CONTENT(STF17CONTENT object) {
				return createSTF17CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF18CONTENT(STF18CONTENT object) {
				return createSTF18CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF19CONTENT(STF19CONTENT object) {
				return createSTF19CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF1CONTENT(STF1CONTENT object) {
				return createSTF1CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF20CONTENT(STF20CONTENT object) {
				return createSTF20CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF21CONTENT(STF21CONTENT object) {
				return createSTF21CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF22CONTENT(STF22CONTENT object) {
				return createSTF22CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF23CONTENT(STF23CONTENT object) {
				return createSTF23CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF24CONTENT(STF24CONTENT object) {
				return createSTF24CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF25CONTENT(STF25CONTENT object) {
				return createSTF25CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF26CONTENT(STF26CONTENT object) {
				return createSTF26CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF27CONTENT(STF27CONTENT object) {
				return createSTF27CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF28CONTENT(STF28CONTENT object) {
				return createSTF28CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF29CONTENT(STF29CONTENT object) {
				return createSTF29CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF2CONTENT(STF2CONTENT object) {
				return createSTF2CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF30CONTENT(STF30CONTENT object) {
				return createSTF30CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF31CONTENT(STF31CONTENT object) {
				return createSTF31CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF32CONTENT(STF32CONTENT object) {
				return createSTF32CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF33CONTENT(STF33CONTENT object) {
				return createSTF33CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF34CONTENT(STF34CONTENT object) {
				return createSTF34CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF35CONTENT(STF35CONTENT object) {
				return createSTF35CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF36CONTENT(STF36CONTENT object) {
				return createSTF36CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF37CONTENT(STF37CONTENT object) {
				return createSTF37CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF38CONTENT(STF38CONTENT object) {
				return createSTF38CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF3CONTENT(STF3CONTENT object) {
				return createSTF3CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF4CONTENT(STF4CONTENT object) {
				return createSTF4CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF5CONTENT(STF5CONTENT object) {
				return createSTF5CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF6CONTENT(STF6CONTENT object) {
				return createSTF6CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF7CONTENT(STF7CONTENT object) {
				return createSTF7CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF8CONTENT(STF8CONTENT object) {
				return createSTF8CONTENTAdapter();
			}
			@Override
			public Adapter caseSTF9CONTENT(STF9CONTENT object) {
				return createSTF9CONTENTAdapter();
			}
			@Override
			public Adapter caseSTFCONTENT(STFCONTENT object) {
				return createSTFCONTENTAdapter();
			}
			@Override
			public Adapter caseTCC10CONTENT(TCC10CONTENT object) {
				return createTCC10CONTENTAdapter();
			}
			@Override
			public Adapter caseTCC11CONTENT(TCC11CONTENT object) {
				return createTCC11CONTENTAdapter();
			}
			@Override
			public Adapter caseTCC12CONTENT(TCC12CONTENT object) {
				return createTCC12CONTENTAdapter();
			}
			@Override
			public Adapter caseTCC13CONTENT(TCC13CONTENT object) {
				return createTCC13CONTENTAdapter();
			}
			@Override
			public Adapter caseTCC14CONTENT(TCC14CONTENT object) {
				return createTCC14CONTENTAdapter();
			}
			@Override
			public Adapter caseTCC1CONTENT(TCC1CONTENT object) {
				return createTCC1CONTENTAdapter();
			}
			@Override
			public Adapter caseTCC2CONTENT(TCC2CONTENT object) {
				return createTCC2CONTENTAdapter();
			}
			@Override
			public Adapter caseTCC3CONTENT(TCC3CONTENT object) {
				return createTCC3CONTENTAdapter();
			}
			@Override
			public Adapter caseTCC4CONTENT(TCC4CONTENT object) {
				return createTCC4CONTENTAdapter();
			}
			@Override
			public Adapter caseTCC5CONTENT(TCC5CONTENT object) {
				return createTCC5CONTENTAdapter();
			}
			@Override
			public Adapter caseTCC6CONTENT(TCC6CONTENT object) {
				return createTCC6CONTENTAdapter();
			}
			@Override
			public Adapter caseTCC7CONTENT(TCC7CONTENT object) {
				return createTCC7CONTENTAdapter();
			}
			@Override
			public Adapter caseTCC8CONTENT(TCC8CONTENT object) {
				return createTCC8CONTENTAdapter();
			}
			@Override
			public Adapter caseTCC9CONTENT(TCC9CONTENT object) {
				return createTCC9CONTENTAdapter();
			}
			@Override
			public Adapter caseTCCCONTENT(TCCCONTENT object) {
				return createTCCCONTENTAdapter();
			}
			@Override
			public Adapter caseTCD1CONTENT(TCD1CONTENT object) {
				return createTCD1CONTENTAdapter();
			}
			@Override
			public Adapter caseTCD2CONTENT(TCD2CONTENT object) {
				return createTCD2CONTENTAdapter();
			}
			@Override
			public Adapter caseTCD3CONTENT(TCD3CONTENT object) {
				return createTCD3CONTENTAdapter();
			}
			@Override
			public Adapter caseTCD4CONTENT(TCD4CONTENT object) {
				return createTCD4CONTENTAdapter();
			}
			@Override
			public Adapter caseTCD5CONTENT(TCD5CONTENT object) {
				return createTCD5CONTENTAdapter();
			}
			@Override
			public Adapter caseTCD6CONTENT(TCD6CONTENT object) {
				return createTCD6CONTENTAdapter();
			}
			@Override
			public Adapter caseTCD7CONTENT(TCD7CONTENT object) {
				return createTCD7CONTENTAdapter();
			}
			@Override
			public Adapter caseTCD8CONTENT(TCD8CONTENT object) {
				return createTCD8CONTENTAdapter();
			}
			@Override
			public Adapter caseTCDCONTENT(TCDCONTENT object) {
				return createTCDCONTENTAdapter();
			}
			@Override
			public Adapter caseTQ(TQ object) {
				return createTQAdapter();
			}
			@Override
			public Adapter caseTQ10CONTENT(TQ10CONTENT object) {
				return createTQ10CONTENTAdapter();
			}
			@Override
			public Adapter caseTQ110CONTENT(TQ110CONTENT object) {
				return createTQ110CONTENTAdapter();
			}
			@Override
			public Adapter caseTQ111CONTENT(TQ111CONTENT object) {
				return createTQ111CONTENTAdapter();
			}
			@Override
			public Adapter caseTQ112CONTENT(TQ112CONTENT object) {
				return createTQ112CONTENTAdapter();
			}
			@Override
			public Adapter caseTQ113CONTENT(TQ113CONTENT object) {
				return createTQ113CONTENTAdapter();
			}
			@Override
			public Adapter caseTQ114CONTENT(TQ114CONTENT object) {
				return createTQ114CONTENTAdapter();
			}
			@Override
			public Adapter caseTQ11CONTENT(TQ11CONTENT object) {
				return createTQ11CONTENTAdapter();
			}
			@Override
			public Adapter caseTQ11CONTENT1(TQ11CONTENT1 object) {
				return createTQ11CONTENT1Adapter();
			}
			@Override
			public Adapter caseTQ12CONTENT(TQ12CONTENT object) {
				return createTQ12CONTENTAdapter();
			}
			@Override
			public Adapter caseTQ12CONTENT1(TQ12CONTENT1 object) {
				return createTQ12CONTENT1Adapter();
			}
			@Override
			public Adapter caseTQ13CONTENT(TQ13CONTENT object) {
				return createTQ13CONTENTAdapter();
			}
			@Override
			public Adapter caseTQ14CONTENT(TQ14CONTENT object) {
				return createTQ14CONTENTAdapter();
			}
			@Override
			public Adapter caseTQ15CONTENT(TQ15CONTENT object) {
				return createTQ15CONTENTAdapter();
			}
			@Override
			public Adapter caseTQ16CONTENT(TQ16CONTENT object) {
				return createTQ16CONTENTAdapter();
			}
			@Override
			public Adapter caseTQ17CONTENT(TQ17CONTENT object) {
				return createTQ17CONTENTAdapter();
			}
			@Override
			public Adapter caseTQ18CONTENT(TQ18CONTENT object) {
				return createTQ18CONTENTAdapter();
			}
			@Override
			public Adapter caseTQ19CONTENT(TQ19CONTENT object) {
				return createTQ19CONTENTAdapter();
			}
			@Override
			public Adapter caseTQ1CONTENT(TQ1CONTENT object) {
				return createTQ1CONTENTAdapter();
			}
			@Override
			public Adapter caseTQ1CONTENT1(TQ1CONTENT1 object) {
				return createTQ1CONTENT1Adapter();
			}
			@Override
			public Adapter caseTQ210CONTENT(TQ210CONTENT object) {
				return createTQ210CONTENTAdapter();
			}
			@Override
			public Adapter caseTQ21CONTENT(TQ21CONTENT object) {
				return createTQ21CONTENTAdapter();
			}
			@Override
			public Adapter caseTQ22CONTENT(TQ22CONTENT object) {
				return createTQ22CONTENTAdapter();
			}
			@Override
			public Adapter caseTQ23CONTENT(TQ23CONTENT object) {
				return createTQ23CONTENTAdapter();
			}
			@Override
			public Adapter caseTQ24CONTENT(TQ24CONTENT object) {
				return createTQ24CONTENTAdapter();
			}
			@Override
			public Adapter caseTQ25CONTENT(TQ25CONTENT object) {
				return createTQ25CONTENTAdapter();
			}
			@Override
			public Adapter caseTQ26CONTENT(TQ26CONTENT object) {
				return createTQ26CONTENTAdapter();
			}
			@Override
			public Adapter caseTQ27CONTENT(TQ27CONTENT object) {
				return createTQ27CONTENTAdapter();
			}
			@Override
			public Adapter caseTQ28CONTENT(TQ28CONTENT object) {
				return createTQ28CONTENTAdapter();
			}
			@Override
			public Adapter caseTQ29CONTENT(TQ29CONTENT object) {
				return createTQ29CONTENTAdapter();
			}
			@Override
			public Adapter caseTQ2CONTENT(TQ2CONTENT object) {
				return createTQ2CONTENTAdapter();
			}
			@Override
			public Adapter caseTQ2CONTENT1(TQ2CONTENT1 object) {
				return createTQ2CONTENT1Adapter();
			}
			@Override
			public Adapter caseTQ3CONTENT(TQ3CONTENT object) {
				return createTQ3CONTENTAdapter();
			}
			@Override
			public Adapter caseTQ4CONTENT(TQ4CONTENT object) {
				return createTQ4CONTENTAdapter();
			}
			@Override
			public Adapter caseTQ5CONTENT(TQ5CONTENT object) {
				return createTQ5CONTENTAdapter();
			}
			@Override
			public Adapter caseTQ6CONTENT(TQ6CONTENT object) {
				return createTQ6CONTENTAdapter();
			}
			@Override
			public Adapter caseTQ7CONTENT(TQ7CONTENT object) {
				return createTQ7CONTENTAdapter();
			}
			@Override
			public Adapter caseTQ8CONTENT(TQ8CONTENT object) {
				return createTQ8CONTENTAdapter();
			}
			@Override
			public Adapter caseTQ9CONTENT(TQ9CONTENT object) {
				return createTQ9CONTENTAdapter();
			}
			@Override
			public Adapter caseTS(TS object) {
				return createTSAdapter();
			}
			@Override
			public Adapter caseTS1CONTENT(TS1CONTENT object) {
				return createTS1CONTENTAdapter();
			}
			@Override
			public Adapter caseTS2CONTENT(TS2CONTENT object) {
				return createTS2CONTENTAdapter();
			}
			@Override
			public Adapter caseTX(TX object) {
				return createTXAdapter();
			}
			@Override
			public Adapter caseTXA10CONTENT(TXA10CONTENT object) {
				return createTXA10CONTENTAdapter();
			}
			@Override
			public Adapter caseTXA11CONTENT(TXA11CONTENT object) {
				return createTXA11CONTENTAdapter();
			}
			@Override
			public Adapter caseTXA12CONTENT(TXA12CONTENT object) {
				return createTXA12CONTENTAdapter();
			}
			@Override
			public Adapter caseTXA13CONTENT(TXA13CONTENT object) {
				return createTXA13CONTENTAdapter();
			}
			@Override
			public Adapter caseTXA14CONTENT(TXA14CONTENT object) {
				return createTXA14CONTENTAdapter();
			}
			@Override
			public Adapter caseTXA15CONTENT(TXA15CONTENT object) {
				return createTXA15CONTENTAdapter();
			}
			@Override
			public Adapter caseTXA16CONTENT(TXA16CONTENT object) {
				return createTXA16CONTENTAdapter();
			}
			@Override
			public Adapter caseTXA17CONTENT(TXA17CONTENT object) {
				return createTXA17CONTENTAdapter();
			}
			@Override
			public Adapter caseTXA18CONTENT(TXA18CONTENT object) {
				return createTXA18CONTENTAdapter();
			}
			@Override
			public Adapter caseTXA19CONTENT(TXA19CONTENT object) {
				return createTXA19CONTENTAdapter();
			}
			@Override
			public Adapter caseTXA1CONTENT(TXA1CONTENT object) {
				return createTXA1CONTENTAdapter();
			}
			@Override
			public Adapter caseTXA20CONTENT(TXA20CONTENT object) {
				return createTXA20CONTENTAdapter();
			}
			@Override
			public Adapter caseTXA21CONTENT(TXA21CONTENT object) {
				return createTXA21CONTENTAdapter();
			}
			@Override
			public Adapter caseTXA22CONTENT(TXA22CONTENT object) {
				return createTXA22CONTENTAdapter();
			}
			@Override
			public Adapter caseTXA23CONTENT(TXA23CONTENT object) {
				return createTXA23CONTENTAdapter();
			}
			@Override
			public Adapter caseTXA2CONTENT(TXA2CONTENT object) {
				return createTXA2CONTENTAdapter();
			}
			@Override
			public Adapter caseTXA3CONTENT(TXA3CONTENT object) {
				return createTXA3CONTENTAdapter();
			}
			@Override
			public Adapter caseTXA4CONTENT(TXA4CONTENT object) {
				return createTXA4CONTENTAdapter();
			}
			@Override
			public Adapter caseTXA5CONTENT(TXA5CONTENT object) {
				return createTXA5CONTENTAdapter();
			}
			@Override
			public Adapter caseTXA6CONTENT(TXA6CONTENT object) {
				return createTXA6CONTENTAdapter();
			}
			@Override
			public Adapter caseTXA7CONTENT(TXA7CONTENT object) {
				return createTXA7CONTENTAdapter();
			}
			@Override
			public Adapter caseTXA8CONTENT(TXA8CONTENT object) {
				return createTXA8CONTENTAdapter();
			}
			@Override
			public Adapter caseTXA9CONTENT(TXA9CONTENT object) {
				return createTXA9CONTENTAdapter();
			}
			@Override
			public Adapter caseTXACONTENT(TXACONTENT object) {
				return createTXACONTENTAdapter();
			}
			@Override
			public Adapter caseUB110CONTENT(UB110CONTENT object) {
				return createUB110CONTENTAdapter();
			}
			@Override
			public Adapter caseUB111CONTENT(UB111CONTENT object) {
				return createUB111CONTENTAdapter();
			}
			@Override
			public Adapter caseUB112CONTENT(UB112CONTENT object) {
				return createUB112CONTENTAdapter();
			}
			@Override
			public Adapter caseUB113CONTENT(UB113CONTENT object) {
				return createUB113CONTENTAdapter();
			}
			@Override
			public Adapter caseUB114CONTENT(UB114CONTENT object) {
				return createUB114CONTENTAdapter();
			}
			@Override
			public Adapter caseUB115CONTENT(UB115CONTENT object) {
				return createUB115CONTENTAdapter();
			}
			@Override
			public Adapter caseUB116CONTENT(UB116CONTENT object) {
				return createUB116CONTENTAdapter();
			}
			@Override
			public Adapter caseUB117CONTENT(UB117CONTENT object) {
				return createUB117CONTENTAdapter();
			}
			@Override
			public Adapter caseUB118CONTENT(UB118CONTENT object) {
				return createUB118CONTENTAdapter();
			}
			@Override
			public Adapter caseUB119CONTENT(UB119CONTENT object) {
				return createUB119CONTENTAdapter();
			}
			@Override
			public Adapter caseUB11CONTENT(UB11CONTENT object) {
				return createUB11CONTENTAdapter();
			}
			@Override
			public Adapter caseUB120CONTENT(UB120CONTENT object) {
				return createUB120CONTENTAdapter();
			}
			@Override
			public Adapter caseUB121CONTENT(UB121CONTENT object) {
				return createUB121CONTENTAdapter();
			}
			@Override
			public Adapter caseUB122CONTENT(UB122CONTENT object) {
				return createUB122CONTENTAdapter();
			}
			@Override
			public Adapter caseUB123CONTENT(UB123CONTENT object) {
				return createUB123CONTENTAdapter();
			}
			@Override
			public Adapter caseUB12CONTENT(UB12CONTENT object) {
				return createUB12CONTENTAdapter();
			}
			@Override
			public Adapter caseUB13CONTENT(UB13CONTENT object) {
				return createUB13CONTENTAdapter();
			}
			@Override
			public Adapter caseUB14CONTENT(UB14CONTENT object) {
				return createUB14CONTENTAdapter();
			}
			@Override
			public Adapter caseUB15CONTENT(UB15CONTENT object) {
				return createUB15CONTENTAdapter();
			}
			@Override
			public Adapter caseUB16CONTENT(UB16CONTENT object) {
				return createUB16CONTENTAdapter();
			}
			@Override
			public Adapter caseUB17CONTENT(UB17CONTENT object) {
				return createUB17CONTENTAdapter();
			}
			@Override
			public Adapter caseUB18CONTENT(UB18CONTENT object) {
				return createUB18CONTENTAdapter();
			}
			@Override
			public Adapter caseUB19CONTENT(UB19CONTENT object) {
				return createUB19CONTENTAdapter();
			}
			@Override
			public Adapter caseUB1CONTENT(UB1CONTENT object) {
				return createUB1CONTENTAdapter();
			}
			@Override
			public Adapter caseUB210CONTENT(UB210CONTENT object) {
				return createUB210CONTENTAdapter();
			}
			@Override
			public Adapter caseUB211CONTENT(UB211CONTENT object) {
				return createUB211CONTENTAdapter();
			}
			@Override
			public Adapter caseUB212CONTENT(UB212CONTENT object) {
				return createUB212CONTENTAdapter();
			}
			@Override
			public Adapter caseUB213CONTENT(UB213CONTENT object) {
				return createUB213CONTENTAdapter();
			}
			@Override
			public Adapter caseUB214CONTENT(UB214CONTENT object) {
				return createUB214CONTENTAdapter();
			}
			@Override
			public Adapter caseUB215CONTENT(UB215CONTENT object) {
				return createUB215CONTENTAdapter();
			}
			@Override
			public Adapter caseUB216CONTENT(UB216CONTENT object) {
				return createUB216CONTENTAdapter();
			}
			@Override
			public Adapter caseUB217CONTENT(UB217CONTENT object) {
				return createUB217CONTENTAdapter();
			}
			@Override
			public Adapter caseUB21CONTENT(UB21CONTENT object) {
				return createUB21CONTENTAdapter();
			}
			@Override
			public Adapter caseUB22CONTENT(UB22CONTENT object) {
				return createUB22CONTENTAdapter();
			}
			@Override
			public Adapter caseUB23CONTENT(UB23CONTENT object) {
				return createUB23CONTENTAdapter();
			}
			@Override
			public Adapter caseUB24CONTENT(UB24CONTENT object) {
				return createUB24CONTENTAdapter();
			}
			@Override
			public Adapter caseUB25CONTENT(UB25CONTENT object) {
				return createUB25CONTENTAdapter();
			}
			@Override
			public Adapter caseUB26CONTENT(UB26CONTENT object) {
				return createUB26CONTENTAdapter();
			}
			@Override
			public Adapter caseUB27CONTENT(UB27CONTENT object) {
				return createUB27CONTENTAdapter();
			}
			@Override
			public Adapter caseUB28CONTENT(UB28CONTENT object) {
				return createUB28CONTENTAdapter();
			}
			@Override
			public Adapter caseUB29CONTENT(UB29CONTENT object) {
				return createUB29CONTENTAdapter();
			}
			@Override
			public Adapter caseUB2CONTENT(UB2CONTENT object) {
				return createUB2CONTENTAdapter();
			}
			@Override
			public Adapter caseURD1CONTENT(URD1CONTENT object) {
				return createURD1CONTENTAdapter();
			}
			@Override
			public Adapter caseURD2CONTENT(URD2CONTENT object) {
				return createURD2CONTENTAdapter();
			}
			@Override
			public Adapter caseURD3CONTENT(URD3CONTENT object) {
				return createURD3CONTENTAdapter();
			}
			@Override
			public Adapter caseURD4CONTENT(URD4CONTENT object) {
				return createURD4CONTENTAdapter();
			}
			@Override
			public Adapter caseURD5CONTENT(URD5CONTENT object) {
				return createURD5CONTENTAdapter();
			}
			@Override
			public Adapter caseURD6CONTENT(URD6CONTENT object) {
				return createURD6CONTENTAdapter();
			}
			@Override
			public Adapter caseURD7CONTENT(URD7CONTENT object) {
				return createURD7CONTENTAdapter();
			}
			@Override
			public Adapter caseURDCONTENT(URDCONTENT object) {
				return createURDCONTENTAdapter();
			}
			@Override
			public Adapter caseURS1CONTENT(URS1CONTENT object) {
				return createURS1CONTENTAdapter();
			}
			@Override
			public Adapter caseURS2CONTENT(URS2CONTENT object) {
				return createURS2CONTENTAdapter();
			}
			@Override
			public Adapter caseURS3CONTENT(URS3CONTENT object) {
				return createURS3CONTENTAdapter();
			}
			@Override
			public Adapter caseURS4CONTENT(URS4CONTENT object) {
				return createURS4CONTENTAdapter();
			}
			@Override
			public Adapter caseURS5CONTENT(URS5CONTENT object) {
				return createURS5CONTENTAdapter();
			}
			@Override
			public Adapter caseURS6CONTENT(URS6CONTENT object) {
				return createURS6CONTENTAdapter();
			}
			@Override
			public Adapter caseURS7CONTENT(URS7CONTENT object) {
				return createURS7CONTENTAdapter();
			}
			@Override
			public Adapter caseURS8CONTENT(URS8CONTENT object) {
				return createURS8CONTENTAdapter();
			}
			@Override
			public Adapter caseURS9CONTENT(URS9CONTENT object) {
				return createURS9CONTENTAdapter();
			}
			@Override
			public Adapter caseURSCONTENT(URSCONTENT object) {
				return createURSCONTENTAdapter();
			}
			@Override
			public Adapter caseUVC(UVC object) {
				return createUVCAdapter();
			}
			@Override
			public Adapter caseUVC1CONTENT(UVC1CONTENT object) {
				return createUVC1CONTENTAdapter();
			}
			@Override
			public Adapter caseUVC2CONTENT(UVC2CONTENT object) {
				return createUVC2CONTENTAdapter();
			}
			@Override
			public Adapter caseVAR1CONTENT(VAR1CONTENT object) {
				return createVAR1CONTENTAdapter();
			}
			@Override
			public Adapter caseVAR2CONTENT(VAR2CONTENT object) {
				return createVAR2CONTENTAdapter();
			}
			@Override
			public Adapter caseVAR3CONTENT(VAR3CONTENT object) {
				return createVAR3CONTENTAdapter();
			}
			@Override
			public Adapter caseVAR4CONTENT(VAR4CONTENT object) {
				return createVAR4CONTENTAdapter();
			}
			@Override
			public Adapter caseVAR5CONTENT(VAR5CONTENT object) {
				return createVAR5CONTENTAdapter();
			}
			@Override
			public Adapter caseVAR6CONTENT(VAR6CONTENT object) {
				return createVAR6CONTENTAdapter();
			}
			@Override
			public Adapter caseVARCONTENT(VARCONTENT object) {
				return createVARCONTENTAdapter();
			}
			@Override
			public Adapter caseVaries(Varies object) {
				return createVariesAdapter();
			}
			@Override
			public Adapter caseVH(VH object) {
				return createVHAdapter();
			}
			@Override
			public Adapter caseVH1CONTENT(VH1CONTENT object) {
				return createVH1CONTENTAdapter();
			}
			@Override
			public Adapter caseVH2CONTENT(VH2CONTENT object) {
				return createVH2CONTENTAdapter();
			}
			@Override
			public Adapter caseVH3CONTENT(VH3CONTENT object) {
				return createVH3CONTENTAdapter();
			}
			@Override
			public Adapter caseVH4CONTENT(VH4CONTENT object) {
				return createVH4CONTENTAdapter();
			}
			@Override
			public Adapter caseVID(VID object) {
				return createVIDAdapter();
			}
			@Override
			public Adapter caseVID1CONTENT(VID1CONTENT object) {
				return createVID1CONTENTAdapter();
			}
			@Override
			public Adapter caseVID2CONTENT(VID2CONTENT object) {
				return createVID2CONTENTAdapter();
			}
			@Override
			public Adapter caseVID3CONTENT(VID3CONTENT object) {
				return createVID3CONTENTAdapter();
			}
			@Override
			public Adapter caseVR(VR object) {
				return createVRAdapter();
			}
			@Override
			public Adapter caseVR1CONTENT(VR1CONTENT object) {
				return createVR1CONTENTAdapter();
			}
			@Override
			public Adapter caseVR2CONTENT(VR2CONTENT object) {
				return createVR2CONTENTAdapter();
			}
			@Override
			public Adapter caseVTQ1CONTENT(VTQ1CONTENT object) {
				return createVTQ1CONTENTAdapter();
			}
			@Override
			public Adapter caseVTQ2CONTENT(VTQ2CONTENT object) {
				return createVTQ2CONTENTAdapter();
			}
			@Override
			public Adapter caseVTQ3CONTENT(VTQ3CONTENT object) {
				return createVTQ3CONTENTAdapter();
			}
			@Override
			public Adapter caseVTQ4CONTENT(VTQ4CONTENT object) {
				return createVTQ4CONTENTAdapter();
			}
			@Override
			public Adapter caseVTQ5CONTENT(VTQ5CONTENT object) {
				return createVTQ5CONTENTAdapter();
			}
			@Override
			public Adapter caseVTQCONTENT(VTQCONTENT object) {
				return createVTQCONTENTAdapter();
			}
			@Override
			public Adapter caseWVI(WVI object) {
				return createWVIAdapter();
			}
			@Override
			public Adapter caseWVI1CONTENT(WVI1CONTENT object) {
				return createWVI1CONTENTAdapter();
			}
			@Override
			public Adapter caseWVI2CONTENT(WVI2CONTENT object) {
				return createWVI2CONTENTAdapter();
			}
			@Override
			public Adapter caseWVS(WVS object) {
				return createWVSAdapter();
			}
			@Override
			public Adapter caseWVS1CONTENT(WVS1CONTENT object) {
				return createWVS1CONTENTAdapter();
			}
			@Override
			public Adapter caseWVS2CONTENT(WVS2CONTENT object) {
				return createWVS2CONTENTAdapter();
			}
			@Override
			public Adapter caseXAD(XAD object) {
				return createXADAdapter();
			}
			@Override
			public Adapter caseXAD10CONTENT(XAD10CONTENT object) {
				return createXAD10CONTENTAdapter();
			}
			@Override
			public Adapter caseXAD11CONTENT(XAD11CONTENT object) {
				return createXAD11CONTENTAdapter();
			}
			@Override
			public Adapter caseXAD12CONTENT(XAD12CONTENT object) {
				return createXAD12CONTENTAdapter();
			}
			@Override
			public Adapter caseXAD13CONTENT(XAD13CONTENT object) {
				return createXAD13CONTENTAdapter();
			}
			@Override
			public Adapter caseXAD14CONTENT(XAD14CONTENT object) {
				return createXAD14CONTENTAdapter();
			}
			@Override
			public Adapter caseXAD1CONTENT(XAD1CONTENT object) {
				return createXAD1CONTENTAdapter();
			}
			@Override
			public Adapter caseXAD2CONTENT(XAD2CONTENT object) {
				return createXAD2CONTENTAdapter();
			}
			@Override
			public Adapter caseXAD3CONTENT(XAD3CONTENT object) {
				return createXAD3CONTENTAdapter();
			}
			@Override
			public Adapter caseXAD4CONTENT(XAD4CONTENT object) {
				return createXAD4CONTENTAdapter();
			}
			@Override
			public Adapter caseXAD5CONTENT(XAD5CONTENT object) {
				return createXAD5CONTENTAdapter();
			}
			@Override
			public Adapter caseXAD6CONTENT(XAD6CONTENT object) {
				return createXAD6CONTENTAdapter();
			}
			@Override
			public Adapter caseXAD7CONTENT(XAD7CONTENT object) {
				return createXAD7CONTENTAdapter();
			}
			@Override
			public Adapter caseXAD8CONTENT(XAD8CONTENT object) {
				return createXAD8CONTENTAdapter();
			}
			@Override
			public Adapter caseXAD9CONTENT(XAD9CONTENT object) {
				return createXAD9CONTENTAdapter();
			}
			@Override
			public Adapter caseXCN(XCN object) {
				return createXCNAdapter();
			}
			@Override
			public Adapter caseXCN10CONTENT(XCN10CONTENT object) {
				return createXCN10CONTENTAdapter();
			}
			@Override
			public Adapter caseXCN11CONTENT(XCN11CONTENT object) {
				return createXCN11CONTENTAdapter();
			}
			@Override
			public Adapter caseXCN12CONTENT(XCN12CONTENT object) {
				return createXCN12CONTENTAdapter();
			}
			@Override
			public Adapter caseXCN13CONTENT(XCN13CONTENT object) {
				return createXCN13CONTENTAdapter();
			}
			@Override
			public Adapter caseXCN14CONTENT(XCN14CONTENT object) {
				return createXCN14CONTENTAdapter();
			}
			@Override
			public Adapter caseXCN15CONTENT(XCN15CONTENT object) {
				return createXCN15CONTENTAdapter();
			}
			@Override
			public Adapter caseXCN16CONTENT(XCN16CONTENT object) {
				return createXCN16CONTENTAdapter();
			}
			@Override
			public Adapter caseXCN17CONTENT(XCN17CONTENT object) {
				return createXCN17CONTENTAdapter();
			}
			@Override
			public Adapter caseXCN18CONTENT(XCN18CONTENT object) {
				return createXCN18CONTENTAdapter();
			}
			@Override
			public Adapter caseXCN19CONTENT(XCN19CONTENT object) {
				return createXCN19CONTENTAdapter();
			}
			@Override
			public Adapter caseXCN1CONTENT(XCN1CONTENT object) {
				return createXCN1CONTENTAdapter();
			}
			@Override
			public Adapter caseXCN20CONTENT(XCN20CONTENT object) {
				return createXCN20CONTENTAdapter();
			}
			@Override
			public Adapter caseXCN21CONTENT(XCN21CONTENT object) {
				return createXCN21CONTENTAdapter();
			}
			@Override
			public Adapter caseXCN22CONTENT(XCN22CONTENT object) {
				return createXCN22CONTENTAdapter();
			}
			@Override
			public Adapter caseXCN23CONTENT(XCN23CONTENT object) {
				return createXCN23CONTENTAdapter();
			}
			@Override
			public Adapter caseXCN2CONTENT(XCN2CONTENT object) {
				return createXCN2CONTENTAdapter();
			}
			@Override
			public Adapter caseXCN3CONTENT(XCN3CONTENT object) {
				return createXCN3CONTENTAdapter();
			}
			@Override
			public Adapter caseXCN4CONTENT(XCN4CONTENT object) {
				return createXCN4CONTENTAdapter();
			}
			@Override
			public Adapter caseXCN5CONTENT(XCN5CONTENT object) {
				return createXCN5CONTENTAdapter();
			}
			@Override
			public Adapter caseXCN6CONTENT(XCN6CONTENT object) {
				return createXCN6CONTENTAdapter();
			}
			@Override
			public Adapter caseXCN7CONTENT(XCN7CONTENT object) {
				return createXCN7CONTENTAdapter();
			}
			@Override
			public Adapter caseXCN8CONTENT(XCN8CONTENT object) {
				return createXCN8CONTENTAdapter();
			}
			@Override
			public Adapter caseXCN9CONTENT(XCN9CONTENT object) {
				return createXCN9CONTENTAdapter();
			}
			@Override
			public Adapter caseXON(XON object) {
				return createXONAdapter();
			}
			@Override
			public Adapter caseXON10CONTENT(XON10CONTENT object) {
				return createXON10CONTENTAdapter();
			}
			@Override
			public Adapter caseXON1CONTENT(XON1CONTENT object) {
				return createXON1CONTENTAdapter();
			}
			@Override
			public Adapter caseXON2CONTENT(XON2CONTENT object) {
				return createXON2CONTENTAdapter();
			}
			@Override
			public Adapter caseXON3CONTENT(XON3CONTENT object) {
				return createXON3CONTENTAdapter();
			}
			@Override
			public Adapter caseXON4CONTENT(XON4CONTENT object) {
				return createXON4CONTENTAdapter();
			}
			@Override
			public Adapter caseXON5CONTENT(XON5CONTENT object) {
				return createXON5CONTENTAdapter();
			}
			@Override
			public Adapter caseXON6CONTENT(XON6CONTENT object) {
				return createXON6CONTENTAdapter();
			}
			@Override
			public Adapter caseXON7CONTENT(XON7CONTENT object) {
				return createXON7CONTENTAdapter();
			}
			@Override
			public Adapter caseXON8CONTENT(XON8CONTENT object) {
				return createXON8CONTENTAdapter();
			}
			@Override
			public Adapter caseXON9CONTENT(XON9CONTENT object) {
				return createXON9CONTENTAdapter();
			}
			@Override
			public Adapter caseXPN(XPN object) {
				return createXPNAdapter();
			}
			@Override
			public Adapter caseXPN10CONTENT(XPN10CONTENT object) {
				return createXPN10CONTENTAdapter();
			}
			@Override
			public Adapter caseXPN11CONTENT(XPN11CONTENT object) {
				return createXPN11CONTENTAdapter();
			}
			@Override
			public Adapter caseXPN12CONTENT(XPN12CONTENT object) {
				return createXPN12CONTENTAdapter();
			}
			@Override
			public Adapter caseXPN13CONTENT(XPN13CONTENT object) {
				return createXPN13CONTENTAdapter();
			}
			@Override
			public Adapter caseXPN14CONTENT(XPN14CONTENT object) {
				return createXPN14CONTENTAdapter();
			}
			@Override
			public Adapter caseXPN1CONTENT(XPN1CONTENT object) {
				return createXPN1CONTENTAdapter();
			}
			@Override
			public Adapter caseXPN2CONTENT(XPN2CONTENT object) {
				return createXPN2CONTENTAdapter();
			}
			@Override
			public Adapter caseXPN3CONTENT(XPN3CONTENT object) {
				return createXPN3CONTENTAdapter();
			}
			@Override
			public Adapter caseXPN4CONTENT(XPN4CONTENT object) {
				return createXPN4CONTENTAdapter();
			}
			@Override
			public Adapter caseXPN5CONTENT(XPN5CONTENT object) {
				return createXPN5CONTENTAdapter();
			}
			@Override
			public Adapter caseXPN6CONTENT(XPN6CONTENT object) {
				return createXPN6CONTENTAdapter();
			}
			@Override
			public Adapter caseXPN7CONTENT(XPN7CONTENT object) {
				return createXPN7CONTENTAdapter();
			}
			@Override
			public Adapter caseXPN8CONTENT(XPN8CONTENT object) {
				return createXPN8CONTENTAdapter();
			}
			@Override
			public Adapter caseXPN9CONTENT(XPN9CONTENT object) {
				return createXPN9CONTENTAdapter();
			}
			@Override
			public Adapter caseXTN(XTN object) {
				return createXTNAdapter();
			}
			@Override
			public Adapter caseXTN10CONTENT(XTN10CONTENT object) {
				return createXTN10CONTENTAdapter();
			}
			@Override
			public Adapter caseXTN11CONTENT(XTN11CONTENT object) {
				return createXTN11CONTENTAdapter();
			}
			@Override
			public Adapter caseXTN12CONTENT(XTN12CONTENT object) {
				return createXTN12CONTENTAdapter();
			}
			@Override
			public Adapter caseXTN1CONTENT(XTN1CONTENT object) {
				return createXTN1CONTENTAdapter();
			}
			@Override
			public Adapter caseXTN2CONTENT(XTN2CONTENT object) {
				return createXTN2CONTENTAdapter();
			}
			@Override
			public Adapter caseXTN3CONTENT(XTN3CONTENT object) {
				return createXTN3CONTENTAdapter();
			}
			@Override
			public Adapter caseXTN4CONTENT(XTN4CONTENT object) {
				return createXTN4CONTENTAdapter();
			}
			@Override
			public Adapter caseXTN5CONTENT(XTN5CONTENT object) {
				return createXTN5CONTENTAdapter();
			}
			@Override
			public Adapter caseXTN6CONTENT(XTN6CONTENT object) {
				return createXTN6CONTENTAdapter();
			}
			@Override
			public Adapter caseXTN7CONTENT(XTN7CONTENT object) {
				return createXTN7CONTENTAdapter();
			}
			@Override
			public Adapter caseXTN8CONTENT(XTN8CONTENT object) {
				return createXTN8CONTENTAdapter();
			}
			@Override
			public Adapter caseXTN9CONTENT(XTN9CONTENT object) {
				return createXTN9CONTENTAdapter();
			}
			@Override
			public Adapter caseAnyType(AnyType object) {
				return createAnyTypeAdapter();
			}
			@Override
			public Adapter defaultCase(EObject object) {
				return createEObjectAdapter();
			}
		};

	/**
	 * Creates an adapter for the <code>target</code>.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param target the object to adapt.
	 * @return the adapter for the <code>target</code>.
	 * @generated
	 */
	@Override
	public Adapter createAdapter(Notifier target) {
		return modelSwitch.doSwitch((EObject)target);
	}


	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ABS10CONTENT <em>ABS10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ABS10CONTENT
	 * @generated
	 */
	public Adapter createABS10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ABS11CONTENT <em>ABS11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ABS11CONTENT
	 * @generated
	 */
	public Adapter createABS11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ABS12CONTENT <em>ABS12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ABS12CONTENT
	 * @generated
	 */
	public Adapter createABS12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ABS13CONTENT <em>ABS13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ABS13CONTENT
	 * @generated
	 */
	public Adapter createABS13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ABS14CONTENT <em>ABS14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ABS14CONTENT
	 * @generated
	 */
	public Adapter createABS14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ABS1CONTENT <em>ABS1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ABS1CONTENT
	 * @generated
	 */
	public Adapter createABS1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ABS2CONTENT <em>ABS2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ABS2CONTENT
	 * @generated
	 */
	public Adapter createABS2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ABS3CONTENT <em>ABS3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ABS3CONTENT
	 * @generated
	 */
	public Adapter createABS3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ABS4CONTENT <em>ABS4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ABS4CONTENT
	 * @generated
	 */
	public Adapter createABS4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ABS5CONTENT <em>ABS5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ABS5CONTENT
	 * @generated
	 */
	public Adapter createABS5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ABS6CONTENT <em>ABS6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ABS6CONTENT
	 * @generated
	 */
	public Adapter createABS6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ABS7CONTENT <em>ABS7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ABS7CONTENT
	 * @generated
	 */
	public Adapter createABS7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ABS8CONTENT <em>ABS8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ABS8CONTENT
	 * @generated
	 */
	public Adapter createABS8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ABS9CONTENT <em>ABS9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ABS9CONTENT
	 * @generated
	 */
	public Adapter createABS9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ABSCONTENT <em>ABSCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ABSCONTENT
	 * @generated
	 */
	public Adapter createABSCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ACC10CONTENT <em>ACC10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ACC10CONTENT
	 * @generated
	 */
	public Adapter createACC10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ACC11CONTENT <em>ACC11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ACC11CONTENT
	 * @generated
	 */
	public Adapter createACC11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ACC1CONTENT <em>ACC1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ACC1CONTENT
	 * @generated
	 */
	public Adapter createACC1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ACC2CONTENT <em>ACC2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ACC2CONTENT
	 * @generated
	 */
	public Adapter createACC2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ACC3CONTENT <em>ACC3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ACC3CONTENT
	 * @generated
	 */
	public Adapter createACC3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ACC4CONTENT <em>ACC4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ACC4CONTENT
	 * @generated
	 */
	public Adapter createACC4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ACC5CONTENT <em>ACC5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ACC5CONTENT
	 * @generated
	 */
	public Adapter createACC5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ACC6CONTENT <em>ACC6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ACC6CONTENT
	 * @generated
	 */
	public Adapter createACC6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ACC7CONTENT <em>ACC7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ACC7CONTENT
	 * @generated
	 */
	public Adapter createACC7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ACC8CONTENT <em>ACC8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ACC8CONTENT
	 * @generated
	 */
	public Adapter createACC8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ACC9CONTENT <em>ACC9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ACC9CONTENT
	 * @generated
	 */
	public Adapter createACC9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ACCCONTENT <em>ACCCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ACCCONTENT
	 * @generated
	 */
	public Adapter createACCCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AD <em>AD</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AD
	 * @generated
	 */
	public Adapter createADAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AD1CONTENT <em>AD1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AD1CONTENT
	 * @generated
	 */
	public Adapter createAD1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AD2CONTENT <em>AD2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AD2CONTENT
	 * @generated
	 */
	public Adapter createAD2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AD3CONTENT <em>AD3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AD3CONTENT
	 * @generated
	 */
	public Adapter createAD3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AD4CONTENT <em>AD4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AD4CONTENT
	 * @generated
	 */
	public Adapter createAD4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AD5CONTENT <em>AD5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AD5CONTENT
	 * @generated
	 */
	public Adapter createAD5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AD6CONTENT <em>AD6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AD6CONTENT
	 * @generated
	 */
	public Adapter createAD6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AD7CONTENT <em>AD7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AD7CONTENT
	 * @generated
	 */
	public Adapter createAD7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AD8CONTENT <em>AD8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AD8CONTENT
	 * @generated
	 */
	public Adapter createAD8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ADD1CONTENT <em>ADD1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ADD1CONTENT
	 * @generated
	 */
	public Adapter createADD1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ADDCONTENT <em>ADDCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ADDCONTENT
	 * @generated
	 */
	public Adapter createADDCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AFF1CONTENT <em>AFF1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AFF1CONTENT
	 * @generated
	 */
	public Adapter createAFF1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AFF2CONTENT <em>AFF2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AFF2CONTENT
	 * @generated
	 */
	public Adapter createAFF2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AFF3CONTENT <em>AFF3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AFF3CONTENT
	 * @generated
	 */
	public Adapter createAFF3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AFF4CONTENT <em>AFF4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AFF4CONTENT
	 * @generated
	 */
	public Adapter createAFF4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AFF5CONTENT <em>AFF5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AFF5CONTENT
	 * @generated
	 */
	public Adapter createAFF5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AFFCONTENT <em>AFFCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AFFCONTENT
	 * @generated
	 */
	public Adapter createAFFCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIG10CONTENT <em>AIG10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIG10CONTENT
	 * @generated
	 */
	public Adapter createAIG10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIG11CONTENT <em>AIG11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIG11CONTENT
	 * @generated
	 */
	public Adapter createAIG11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIG12CONTENT <em>AIG12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIG12CONTENT
	 * @generated
	 */
	public Adapter createAIG12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIG13CONTENT <em>AIG13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIG13CONTENT
	 * @generated
	 */
	public Adapter createAIG13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIG14CONTENT <em>AIG14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIG14CONTENT
	 * @generated
	 */
	public Adapter createAIG14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIG1CONTENT <em>AIG1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIG1CONTENT
	 * @generated
	 */
	public Adapter createAIG1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIG2CONTENT <em>AIG2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIG2CONTENT
	 * @generated
	 */
	public Adapter createAIG2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIG3CONTENT <em>AIG3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIG3CONTENT
	 * @generated
	 */
	public Adapter createAIG3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIG4CONTENT <em>AIG4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIG4CONTENT
	 * @generated
	 */
	public Adapter createAIG4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIG5CONTENT <em>AIG5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIG5CONTENT
	 * @generated
	 */
	public Adapter createAIG5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIG6CONTENT <em>AIG6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIG6CONTENT
	 * @generated
	 */
	public Adapter createAIG6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIG7CONTENT <em>AIG7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIG7CONTENT
	 * @generated
	 */
	public Adapter createAIG7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIG8CONTENT <em>AIG8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIG8CONTENT
	 * @generated
	 */
	public Adapter createAIG8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIG9CONTENT <em>AIG9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIG9CONTENT
	 * @generated
	 */
	public Adapter createAIG9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIGCONTENT <em>AIGCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIGCONTENT
	 * @generated
	 */
	public Adapter createAIGCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIL10CONTENT <em>AIL10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIL10CONTENT
	 * @generated
	 */
	public Adapter createAIL10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIL11CONTENT <em>AIL11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIL11CONTENT
	 * @generated
	 */
	public Adapter createAIL11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIL12CONTENT <em>AIL12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIL12CONTENT
	 * @generated
	 */
	public Adapter createAIL12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIL1CONTENT <em>AIL1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIL1CONTENT
	 * @generated
	 */
	public Adapter createAIL1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIL2CONTENT <em>AIL2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIL2CONTENT
	 * @generated
	 */
	public Adapter createAIL2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIL3CONTENT <em>AIL3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIL3CONTENT
	 * @generated
	 */
	public Adapter createAIL3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIL4CONTENT <em>AIL4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIL4CONTENT
	 * @generated
	 */
	public Adapter createAIL4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIL5CONTENT <em>AIL5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIL5CONTENT
	 * @generated
	 */
	public Adapter createAIL5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIL6CONTENT <em>AIL6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIL6CONTENT
	 * @generated
	 */
	public Adapter createAIL6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIL7CONTENT <em>AIL7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIL7CONTENT
	 * @generated
	 */
	public Adapter createAIL7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIL8CONTENT <em>AIL8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIL8CONTENT
	 * @generated
	 */
	public Adapter createAIL8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIL9CONTENT <em>AIL9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIL9CONTENT
	 * @generated
	 */
	public Adapter createAIL9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AILCONTENT <em>AILCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AILCONTENT
	 * @generated
	 */
	public Adapter createAILCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIP10CONTENT <em>AIP10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIP10CONTENT
	 * @generated
	 */
	public Adapter createAIP10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIP11CONTENT <em>AIP11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIP11CONTENT
	 * @generated
	 */
	public Adapter createAIP11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIP12CONTENT <em>AIP12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIP12CONTENT
	 * @generated
	 */
	public Adapter createAIP12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIP1CONTENT <em>AIP1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIP1CONTENT
	 * @generated
	 */
	public Adapter createAIP1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIP2CONTENT <em>AIP2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIP2CONTENT
	 * @generated
	 */
	public Adapter createAIP2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIP3CONTENT <em>AIP3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIP3CONTENT
	 * @generated
	 */
	public Adapter createAIP3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIP4CONTENT <em>AIP4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIP4CONTENT
	 * @generated
	 */
	public Adapter createAIP4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIP5CONTENT <em>AIP5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIP5CONTENT
	 * @generated
	 */
	public Adapter createAIP5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIP6CONTENT <em>AIP6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIP6CONTENT
	 * @generated
	 */
	public Adapter createAIP6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIP7CONTENT <em>AIP7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIP7CONTENT
	 * @generated
	 */
	public Adapter createAIP7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIP8CONTENT <em>AIP8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIP8CONTENT
	 * @generated
	 */
	public Adapter createAIP8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIP9CONTENT <em>AIP9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIP9CONTENT
	 * @generated
	 */
	public Adapter createAIP9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIPCONTENT <em>AIPCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIPCONTENT
	 * @generated
	 */
	public Adapter createAIPCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIS10CONTENT <em>AIS10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIS10CONTENT
	 * @generated
	 */
	public Adapter createAIS10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIS11CONTENT <em>AIS11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIS11CONTENT
	 * @generated
	 */
	public Adapter createAIS11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIS12CONTENT <em>AIS12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIS12CONTENT
	 * @generated
	 */
	public Adapter createAIS12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIS1CONTENT <em>AIS1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIS1CONTENT
	 * @generated
	 */
	public Adapter createAIS1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIS2CONTENT <em>AIS2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIS2CONTENT
	 * @generated
	 */
	public Adapter createAIS2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIS3CONTENT <em>AIS3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIS3CONTENT
	 * @generated
	 */
	public Adapter createAIS3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIS4CONTENT <em>AIS4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIS4CONTENT
	 * @generated
	 */
	public Adapter createAIS4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIS5CONTENT <em>AIS5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIS5CONTENT
	 * @generated
	 */
	public Adapter createAIS5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIS6CONTENT <em>AIS6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIS6CONTENT
	 * @generated
	 */
	public Adapter createAIS6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIS7CONTENT <em>AIS7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIS7CONTENT
	 * @generated
	 */
	public Adapter createAIS7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIS8CONTENT <em>AIS8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIS8CONTENT
	 * @generated
	 */
	public Adapter createAIS8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AIS9CONTENT <em>AIS9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AIS9CONTENT
	 * @generated
	 */
	public Adapter createAIS9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AISCONTENT <em>AISCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AISCONTENT
	 * @generated
	 */
	public Adapter createAISCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AL11CONTENT <em>AL11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AL11CONTENT
	 * @generated
	 */
	public Adapter createAL11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AL12CONTENT <em>AL12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AL12CONTENT
	 * @generated
	 */
	public Adapter createAL12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AL13CONTENT <em>AL13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AL13CONTENT
	 * @generated
	 */
	public Adapter createAL13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AL14CONTENT <em>AL14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AL14CONTENT
	 * @generated
	 */
	public Adapter createAL14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AL15CONTENT <em>AL15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AL15CONTENT
	 * @generated
	 */
	public Adapter createAL15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AL16CONTENT <em>AL16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AL16CONTENT
	 * @generated
	 */
	public Adapter createAL16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AL1CONTENT <em>AL1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AL1CONTENT
	 * @generated
	 */
	public Adapter createAL1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AnyHL7SegmentTYPE <em>Any HL7 Segment TYPE</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AnyHL7SegmentTYPE
	 * @generated
	 */
	public Adapter createAnyHL7SegmentTYPEAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AnyZSegmentTYPE <em>Any ZSegment TYPE</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AnyZSegmentTYPE
	 * @generated
	 */
	public Adapter createAnyZSegmentTYPEAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.APR1CONTENT <em>APR1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.APR1CONTENT
	 * @generated
	 */
	public Adapter createAPR1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.APR2CONTENT <em>APR2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.APR2CONTENT
	 * @generated
	 */
	public Adapter createAPR2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.APR3CONTENT <em>APR3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.APR3CONTENT
	 * @generated
	 */
	public Adapter createAPR3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.APR4CONTENT <em>APR4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.APR4CONTENT
	 * @generated
	 */
	public Adapter createAPR4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.APR5CONTENT <em>APR5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.APR5CONTENT
	 * @generated
	 */
	public Adapter createAPR5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.APRCONTENT <em>APRCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.APRCONTENT
	 * @generated
	 */
	public Adapter createAPRCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ARQ10CONTENT <em>ARQ10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ARQ10CONTENT
	 * @generated
	 */
	public Adapter createARQ10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ARQ11CONTENT <em>ARQ11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ARQ11CONTENT
	 * @generated
	 */
	public Adapter createARQ11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ARQ12CONTENT <em>ARQ12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ARQ12CONTENT
	 * @generated
	 */
	public Adapter createARQ12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ARQ13CONTENT <em>ARQ13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ARQ13CONTENT
	 * @generated
	 */
	public Adapter createARQ13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ARQ14CONTENT <em>ARQ14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ARQ14CONTENT
	 * @generated
	 */
	public Adapter createARQ14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ARQ15CONTENT <em>ARQ15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ARQ15CONTENT
	 * @generated
	 */
	public Adapter createARQ15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ARQ16CONTENT <em>ARQ16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ARQ16CONTENT
	 * @generated
	 */
	public Adapter createARQ16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ARQ17CONTENT <em>ARQ17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ARQ17CONTENT
	 * @generated
	 */
	public Adapter createARQ17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ARQ18CONTENT <em>ARQ18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ARQ18CONTENT
	 * @generated
	 */
	public Adapter createARQ18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ARQ19CONTENT <em>ARQ19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ARQ19CONTENT
	 * @generated
	 */
	public Adapter createARQ19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ARQ1CONTENT <em>ARQ1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ARQ1CONTENT
	 * @generated
	 */
	public Adapter createARQ1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ARQ20CONTENT <em>ARQ20CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ARQ20CONTENT
	 * @generated
	 */
	public Adapter createARQ20CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ARQ21CONTENT <em>ARQ21CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ARQ21CONTENT
	 * @generated
	 */
	public Adapter createARQ21CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ARQ22CONTENT <em>ARQ22CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ARQ22CONTENT
	 * @generated
	 */
	public Adapter createARQ22CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ARQ23CONTENT <em>ARQ23CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ARQ23CONTENT
	 * @generated
	 */
	public Adapter createARQ23CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ARQ24CONTENT <em>ARQ24CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ARQ24CONTENT
	 * @generated
	 */
	public Adapter createARQ24CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ARQ25CONTENT <em>ARQ25CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ARQ25CONTENT
	 * @generated
	 */
	public Adapter createARQ25CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ARQ2CONTENT <em>ARQ2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ARQ2CONTENT
	 * @generated
	 */
	public Adapter createARQ2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ARQ3CONTENT <em>ARQ3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ARQ3CONTENT
	 * @generated
	 */
	public Adapter createARQ3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ARQ4CONTENT <em>ARQ4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ARQ4CONTENT
	 * @generated
	 */
	public Adapter createARQ4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ARQ5CONTENT <em>ARQ5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ARQ5CONTENT
	 * @generated
	 */
	public Adapter createARQ5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ARQ6CONTENT <em>ARQ6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ARQ6CONTENT
	 * @generated
	 */
	public Adapter createARQ6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ARQ7CONTENT <em>ARQ7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ARQ7CONTENT
	 * @generated
	 */
	public Adapter createARQ7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ARQ8CONTENT <em>ARQ8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ARQ8CONTENT
	 * @generated
	 */
	public Adapter createARQ8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ARQ9CONTENT <em>ARQ9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ARQ9CONTENT
	 * @generated
	 */
	public Adapter createARQ9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ARQCONTENT <em>ARQCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ARQCONTENT
	 * @generated
	 */
	public Adapter createARQCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AUI <em>AUI</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AUI
	 * @generated
	 */
	public Adapter createAUIAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AUI1CONTENT <em>AUI1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AUI1CONTENT
	 * @generated
	 */
	public Adapter createAUI1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AUI2CONTENT <em>AUI2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AUI2CONTENT
	 * @generated
	 */
	public Adapter createAUI2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AUI3CONTENT <em>AUI3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AUI3CONTENT
	 * @generated
	 */
	public Adapter createAUI3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AUT10CONTENT <em>AUT10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AUT10CONTENT
	 * @generated
	 */
	public Adapter createAUT10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AUT1CONTENT <em>AUT1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AUT1CONTENT
	 * @generated
	 */
	public Adapter createAUT1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AUT2CONTENT <em>AUT2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AUT2CONTENT
	 * @generated
	 */
	public Adapter createAUT2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AUT3CONTENT <em>AUT3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AUT3CONTENT
	 * @generated
	 */
	public Adapter createAUT3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AUT4CONTENT <em>AUT4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AUT4CONTENT
	 * @generated
	 */
	public Adapter createAUT4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AUT5CONTENT <em>AUT5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AUT5CONTENT
	 * @generated
	 */
	public Adapter createAUT5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AUT6CONTENT <em>AUT6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AUT6CONTENT
	 * @generated
	 */
	public Adapter createAUT6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AUT7CONTENT <em>AUT7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AUT7CONTENT
	 * @generated
	 */
	public Adapter createAUT7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AUT8CONTENT <em>AUT8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AUT8CONTENT
	 * @generated
	 */
	public Adapter createAUT8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AUT9CONTENT <em>AUT9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AUT9CONTENT
	 * @generated
	 */
	public Adapter createAUT9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.AUTCONTENT <em>AUTCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.AUTCONTENT
	 * @generated
	 */
	public Adapter createAUTCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BARP01CONTENT <em>BARP01CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BARP01CONTENT
	 * @generated
	 */
	public Adapter createBARP01CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BARP01INSURANCECONTENT <em>BARP01INSURANCECONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BARP01INSURANCECONTENT
	 * @generated
	 */
	public Adapter createBARP01INSURANCECONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BARP01PROCEDURECONTENT <em>BARP01PROCEDURECONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BARP01PROCEDURECONTENT
	 * @generated
	 */
	public Adapter createBARP01PROCEDURECONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BARP01VISITCONTENT <em>BARP01VISITCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BARP01VISITCONTENT
	 * @generated
	 */
	public Adapter createBARP01VISITCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BHS10CONTENT <em>BHS10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BHS10CONTENT
	 * @generated
	 */
	public Adapter createBHS10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BHS11CONTENT <em>BHS11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BHS11CONTENT
	 * @generated
	 */
	public Adapter createBHS11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BHS12CONTENT <em>BHS12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BHS12CONTENT
	 * @generated
	 */
	public Adapter createBHS12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BHS1CONTENT <em>BHS1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BHS1CONTENT
	 * @generated
	 */
	public Adapter createBHS1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BHS2CONTENT <em>BHS2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BHS2CONTENT
	 * @generated
	 */
	public Adapter createBHS2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BHS3CONTENT <em>BHS3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BHS3CONTENT
	 * @generated
	 */
	public Adapter createBHS3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BHS4CONTENT <em>BHS4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BHS4CONTENT
	 * @generated
	 */
	public Adapter createBHS4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BHS5CONTENT <em>BHS5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BHS5CONTENT
	 * @generated
	 */
	public Adapter createBHS5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BHS6CONTENT <em>BHS6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BHS6CONTENT
	 * @generated
	 */
	public Adapter createBHS6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BHS7CONTENT <em>BHS7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BHS7CONTENT
	 * @generated
	 */
	public Adapter createBHS7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BHS8CONTENT <em>BHS8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BHS8CONTENT
	 * @generated
	 */
	public Adapter createBHS8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BHS9CONTENT <em>BHS9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BHS9CONTENT
	 * @generated
	 */
	public Adapter createBHS9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BHSCONTENT <em>BHSCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BHSCONTENT
	 * @generated
	 */
	public Adapter createBHSCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BLC1CONTENT <em>BLC1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BLC1CONTENT
	 * @generated
	 */
	public Adapter createBLC1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BLC2CONTENT <em>BLC2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BLC2CONTENT
	 * @generated
	 */
	public Adapter createBLC2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BLCCONTENT <em>BLCCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BLCCONTENT
	 * @generated
	 */
	public Adapter createBLCCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BLG1CONTENT <em>BLG1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BLG1CONTENT
	 * @generated
	 */
	public Adapter createBLG1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BLG2CONTENT <em>BLG2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BLG2CONTENT
	 * @generated
	 */
	public Adapter createBLG2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BLG3CONTENT <em>BLG3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BLG3CONTENT
	 * @generated
	 */
	public Adapter createBLG3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BLG4CONTENT <em>BLG4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BLG4CONTENT
	 * @generated
	 */
	public Adapter createBLG4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BLGCONTENT <em>BLGCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BLGCONTENT
	 * @generated
	 */
	public Adapter createBLGCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BPO10CONTENT <em>BPO10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BPO10CONTENT
	 * @generated
	 */
	public Adapter createBPO10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BPO11CONTENT <em>BPO11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BPO11CONTENT
	 * @generated
	 */
	public Adapter createBPO11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BPO12CONTENT <em>BPO12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BPO12CONTENT
	 * @generated
	 */
	public Adapter createBPO12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BPO13CONTENT <em>BPO13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BPO13CONTENT
	 * @generated
	 */
	public Adapter createBPO13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BPO14CONTENT <em>BPO14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BPO14CONTENT
	 * @generated
	 */
	public Adapter createBPO14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BPO1CONTENT <em>BPO1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BPO1CONTENT
	 * @generated
	 */
	public Adapter createBPO1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BPO2CONTENT <em>BPO2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BPO2CONTENT
	 * @generated
	 */
	public Adapter createBPO2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BPO3CONTENT <em>BPO3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BPO3CONTENT
	 * @generated
	 */
	public Adapter createBPO3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BPO4CONTENT <em>BPO4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BPO4CONTENT
	 * @generated
	 */
	public Adapter createBPO4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BPO5CONTENT <em>BPO5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BPO5CONTENT
	 * @generated
	 */
	public Adapter createBPO5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BPO6CONTENT <em>BPO6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BPO6CONTENT
	 * @generated
	 */
	public Adapter createBPO6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BPO7CONTENT <em>BPO7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BPO7CONTENT
	 * @generated
	 */
	public Adapter createBPO7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BPO8CONTENT <em>BPO8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BPO8CONTENT
	 * @generated
	 */
	public Adapter createBPO8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BPO9CONTENT <em>BPO9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BPO9CONTENT
	 * @generated
	 */
	public Adapter createBPO9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BPOCONTENT <em>BPOCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BPOCONTENT
	 * @generated
	 */
	public Adapter createBPOCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BPX10CONTENT <em>BPX10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BPX10CONTENT
	 * @generated
	 */
	public Adapter createBPX10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BPX11CONTENT <em>BPX11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BPX11CONTENT
	 * @generated
	 */
	public Adapter createBPX11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BPX12CONTENT <em>BPX12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BPX12CONTENT
	 * @generated
	 */
	public Adapter createBPX12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BPX13CONTENT <em>BPX13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BPX13CONTENT
	 * @generated
	 */
	public Adapter createBPX13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BPX14CONTENT <em>BPX14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BPX14CONTENT
	 * @generated
	 */
	public Adapter createBPX14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BPX15CONTENT <em>BPX15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BPX15CONTENT
	 * @generated
	 */
	public Adapter createBPX15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BPX16CONTENT <em>BPX16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BPX16CONTENT
	 * @generated
	 */
	public Adapter createBPX16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BPX17CONTENT <em>BPX17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BPX17CONTENT
	 * @generated
	 */
	public Adapter createBPX17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BPX18CONTENT <em>BPX18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BPX18CONTENT
	 * @generated
	 */
	public Adapter createBPX18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BPX19CONTENT <em>BPX19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BPX19CONTENT
	 * @generated
	 */
	public Adapter createBPX19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BPX1CONTENT <em>BPX1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BPX1CONTENT
	 * @generated
	 */
	public Adapter createBPX1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BPX20CONTENT <em>BPX20CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BPX20CONTENT
	 * @generated
	 */
	public Adapter createBPX20CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BPX21CONTENT <em>BPX21CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BPX21CONTENT
	 * @generated
	 */
	public Adapter createBPX21CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BPX2CONTENT <em>BPX2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BPX2CONTENT
	 * @generated
	 */
	public Adapter createBPX2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BPX3CONTENT <em>BPX3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BPX3CONTENT
	 * @generated
	 */
	public Adapter createBPX3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BPX4CONTENT <em>BPX4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BPX4CONTENT
	 * @generated
	 */
	public Adapter createBPX4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BPX5CONTENT <em>BPX5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BPX5CONTENT
	 * @generated
	 */
	public Adapter createBPX5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BPX6CONTENT <em>BPX6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BPX6CONTENT
	 * @generated
	 */
	public Adapter createBPX6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BPX7CONTENT <em>BPX7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BPX7CONTENT
	 * @generated
	 */
	public Adapter createBPX7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BPX8CONTENT <em>BPX8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BPX8CONTENT
	 * @generated
	 */
	public Adapter createBPX8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BPX9CONTENT <em>BPX9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BPX9CONTENT
	 * @generated
	 */
	public Adapter createBPX9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BPXCONTENT <em>BPXCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BPXCONTENT
	 * @generated
	 */
	public Adapter createBPXCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BTS1CONTENT <em>BTS1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BTS1CONTENT
	 * @generated
	 */
	public Adapter createBTS1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BTS2CONTENT <em>BTS2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BTS2CONTENT
	 * @generated
	 */
	public Adapter createBTS2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BTS3CONTENT <em>BTS3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BTS3CONTENT
	 * @generated
	 */
	public Adapter createBTS3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BTSCONTENT <em>BTSCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BTSCONTENT
	 * @generated
	 */
	public Adapter createBTSCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BTX10CONTENT <em>BTX10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BTX10CONTENT
	 * @generated
	 */
	public Adapter createBTX10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BTX11CONTENT <em>BTX11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BTX11CONTENT
	 * @generated
	 */
	public Adapter createBTX11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BTX12CONTENT <em>BTX12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BTX12CONTENT
	 * @generated
	 */
	public Adapter createBTX12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BTX13CONTENT <em>BTX13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BTX13CONTENT
	 * @generated
	 */
	public Adapter createBTX13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BTX14CONTENT <em>BTX14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BTX14CONTENT
	 * @generated
	 */
	public Adapter createBTX14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BTX15CONTENT <em>BTX15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BTX15CONTENT
	 * @generated
	 */
	public Adapter createBTX15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BTX16CONTENT <em>BTX16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BTX16CONTENT
	 * @generated
	 */
	public Adapter createBTX16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BTX17CONTENT <em>BTX17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BTX17CONTENT
	 * @generated
	 */
	public Adapter createBTX17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BTX18CONTENT <em>BTX18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BTX18CONTENT
	 * @generated
	 */
	public Adapter createBTX18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BTX19CONTENT <em>BTX19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BTX19CONTENT
	 * @generated
	 */
	public Adapter createBTX19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BTX1CONTENT <em>BTX1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BTX1CONTENT
	 * @generated
	 */
	public Adapter createBTX1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BTX2CONTENT <em>BTX2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BTX2CONTENT
	 * @generated
	 */
	public Adapter createBTX2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BTX3CONTENT <em>BTX3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BTX3CONTENT
	 * @generated
	 */
	public Adapter createBTX3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BTX4CONTENT <em>BTX4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BTX4CONTENT
	 * @generated
	 */
	public Adapter createBTX4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BTX5CONTENT <em>BTX5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BTX5CONTENT
	 * @generated
	 */
	public Adapter createBTX5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BTX6CONTENT <em>BTX6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BTX6CONTENT
	 * @generated
	 */
	public Adapter createBTX6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BTX7CONTENT <em>BTX7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BTX7CONTENT
	 * @generated
	 */
	public Adapter createBTX7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BTX8CONTENT <em>BTX8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BTX8CONTENT
	 * @generated
	 */
	public Adapter createBTX8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BTX9CONTENT <em>BTX9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BTX9CONTENT
	 * @generated
	 */
	public Adapter createBTX9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.BTXCONTENT <em>BTXCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.BTXCONTENT
	 * @generated
	 */
	public Adapter createBTXCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CCD <em>CCD</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CCD
	 * @generated
	 */
	public Adapter createCCDAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CCD1CONTENT <em>CCD1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CCD1CONTENT
	 * @generated
	 */
	public Adapter createCCD1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CCD2CONTENT <em>CCD2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CCD2CONTENT
	 * @generated
	 */
	public Adapter createCCD2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CCP <em>CCP</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CCP
	 * @generated
	 */
	public Adapter createCCPAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CCP1CONTENT <em>CCP1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CCP1CONTENT
	 * @generated
	 */
	public Adapter createCCP1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CCP2CONTENT <em>CCP2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CCP2CONTENT
	 * @generated
	 */
	public Adapter createCCP2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CCP3CONTENT <em>CCP3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CCP3CONTENT
	 * @generated
	 */
	public Adapter createCCP3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CD <em>CD</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CD
	 * @generated
	 */
	public Adapter createCDAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CD1CONTENT <em>CD1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CD1CONTENT
	 * @generated
	 */
	public Adapter createCD1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CD2CONTENT <em>CD2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CD2CONTENT
	 * @generated
	 */
	public Adapter createCD2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CD3CONTENT <em>CD3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CD3CONTENT
	 * @generated
	 */
	public Adapter createCD3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CD4CONTENT <em>CD4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CD4CONTENT
	 * @generated
	 */
	public Adapter createCD4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CD5CONTENT <em>CD5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CD5CONTENT
	 * @generated
	 */
	public Adapter createCD5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CD6CONTENT <em>CD6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CD6CONTENT
	 * @generated
	 */
	public Adapter createCD6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CDM10CONTENT <em>CDM10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CDM10CONTENT
	 * @generated
	 */
	public Adapter createCDM10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CDM11CONTENT <em>CDM11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CDM11CONTENT
	 * @generated
	 */
	public Adapter createCDM11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CDM12CONTENT <em>CDM12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CDM12CONTENT
	 * @generated
	 */
	public Adapter createCDM12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CDM13CONTENT <em>CDM13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CDM13CONTENT
	 * @generated
	 */
	public Adapter createCDM13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CDM1CONTENT <em>CDM1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CDM1CONTENT
	 * @generated
	 */
	public Adapter createCDM1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CDM2CONTENT <em>CDM2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CDM2CONTENT
	 * @generated
	 */
	public Adapter createCDM2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CDM3CONTENT <em>CDM3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CDM3CONTENT
	 * @generated
	 */
	public Adapter createCDM3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CDM4CONTENT <em>CDM4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CDM4CONTENT
	 * @generated
	 */
	public Adapter createCDM4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CDM5CONTENT <em>CDM5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CDM5CONTENT
	 * @generated
	 */
	public Adapter createCDM5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CDM6CONTENT <em>CDM6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CDM6CONTENT
	 * @generated
	 */
	public Adapter createCDM6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CDM7CONTENT <em>CDM7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CDM7CONTENT
	 * @generated
	 */
	public Adapter createCDM7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CDM8CONTENT <em>CDM8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CDM8CONTENT
	 * @generated
	 */
	public Adapter createCDM8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CDM9CONTENT <em>CDM9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CDM9CONTENT
	 * @generated
	 */
	public Adapter createCDM9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CDMCONTENT <em>CDMCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CDMCONTENT
	 * @generated
	 */
	public Adapter createCDMCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CE <em>CE</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CE
	 * @generated
	 */
	public Adapter createCEAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CE1CONTENT <em>CE1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CE1CONTENT
	 * @generated
	 */
	public Adapter createCE1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CE2CONTENT <em>CE2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CE2CONTENT
	 * @generated
	 */
	public Adapter createCE2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CE3CONTENT <em>CE3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CE3CONTENT
	 * @generated
	 */
	public Adapter createCE3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CE4CONTENT <em>CE4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CE4CONTENT
	 * @generated
	 */
	public Adapter createCE4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CE5CONTENT <em>CE5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CE5CONTENT
	 * @generated
	 */
	public Adapter createCE5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CE6CONTENT <em>CE6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CE6CONTENT
	 * @generated
	 */
	public Adapter createCE6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CER10CONTENT <em>CER10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CER10CONTENT
	 * @generated
	 */
	public Adapter createCER10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CER11CONTENT <em>CER11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CER11CONTENT
	 * @generated
	 */
	public Adapter createCER11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CER12CONTENT <em>CER12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CER12CONTENT
	 * @generated
	 */
	public Adapter createCER12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CER13CONTENT <em>CER13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CER13CONTENT
	 * @generated
	 */
	public Adapter createCER13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CER14CONTENT <em>CER14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CER14CONTENT
	 * @generated
	 */
	public Adapter createCER14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CER15CONTENT <em>CER15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CER15CONTENT
	 * @generated
	 */
	public Adapter createCER15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CER16CONTENT <em>CER16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CER16CONTENT
	 * @generated
	 */
	public Adapter createCER16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CER17CONTENT <em>CER17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CER17CONTENT
	 * @generated
	 */
	public Adapter createCER17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CER18CONTENT <em>CER18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CER18CONTENT
	 * @generated
	 */
	public Adapter createCER18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CER19CONTENT <em>CER19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CER19CONTENT
	 * @generated
	 */
	public Adapter createCER19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CER1CONTENT <em>CER1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CER1CONTENT
	 * @generated
	 */
	public Adapter createCER1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CER20CONTENT <em>CER20CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CER20CONTENT
	 * @generated
	 */
	public Adapter createCER20CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CER21CONTENT <em>CER21CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CER21CONTENT
	 * @generated
	 */
	public Adapter createCER21CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CER22CONTENT <em>CER22CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CER22CONTENT
	 * @generated
	 */
	public Adapter createCER22CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CER23CONTENT <em>CER23CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CER23CONTENT
	 * @generated
	 */
	public Adapter createCER23CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CER24CONTENT <em>CER24CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CER24CONTENT
	 * @generated
	 */
	public Adapter createCER24CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CER25CONTENT <em>CER25CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CER25CONTENT
	 * @generated
	 */
	public Adapter createCER25CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CER26CONTENT <em>CER26CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CER26CONTENT
	 * @generated
	 */
	public Adapter createCER26CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CER27CONTENT <em>CER27CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CER27CONTENT
	 * @generated
	 */
	public Adapter createCER27CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CER28CONTENT <em>CER28CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CER28CONTENT
	 * @generated
	 */
	public Adapter createCER28CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CER29CONTENT <em>CER29CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CER29CONTENT
	 * @generated
	 */
	public Adapter createCER29CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CER2CONTENT <em>CER2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CER2CONTENT
	 * @generated
	 */
	public Adapter createCER2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CER30CONTENT <em>CER30CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CER30CONTENT
	 * @generated
	 */
	public Adapter createCER30CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CER31CONTENT <em>CER31CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CER31CONTENT
	 * @generated
	 */
	public Adapter createCER31CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CER3CONTENT <em>CER3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CER3CONTENT
	 * @generated
	 */
	public Adapter createCER3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CER4CONTENT <em>CER4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CER4CONTENT
	 * @generated
	 */
	public Adapter createCER4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CER5CONTENT <em>CER5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CER5CONTENT
	 * @generated
	 */
	public Adapter createCER5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CER6CONTENT <em>CER6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CER6CONTENT
	 * @generated
	 */
	public Adapter createCER6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CER7CONTENT <em>CER7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CER7CONTENT
	 * @generated
	 */
	public Adapter createCER7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CER8CONTENT <em>CER8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CER8CONTENT
	 * @generated
	 */
	public Adapter createCER8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CER9CONTENT <em>CER9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CER9CONTENT
	 * @generated
	 */
	public Adapter createCER9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CERCONTENT <em>CERCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CERCONTENT
	 * @generated
	 */
	public Adapter createCERCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CF <em>CF</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CF
	 * @generated
	 */
	public Adapter createCFAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CF1CONTENT <em>CF1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CF1CONTENT
	 * @generated
	 */
	public Adapter createCF1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CF2CONTENT <em>CF2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CF2CONTENT
	 * @generated
	 */
	public Adapter createCF2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CF3CONTENT <em>CF3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CF3CONTENT
	 * @generated
	 */
	public Adapter createCF3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CF4CONTENT <em>CF4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CF4CONTENT
	 * @generated
	 */
	public Adapter createCF4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CF5CONTENT <em>CF5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CF5CONTENT
	 * @generated
	 */
	public Adapter createCF5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CF6CONTENT <em>CF6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CF6CONTENT
	 * @generated
	 */
	public Adapter createCF6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CM010CONTENT <em>CM010CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CM010CONTENT
	 * @generated
	 */
	public Adapter createCM010CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CM011CONTENT <em>CM011CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CM011CONTENT
	 * @generated
	 */
	public Adapter createCM011CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CM01CONTENT <em>CM01CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CM01CONTENT
	 * @generated
	 */
	public Adapter createCM01CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CM02CONTENT <em>CM02CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CM02CONTENT
	 * @generated
	 */
	public Adapter createCM02CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CM03CONTENT <em>CM03CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CM03CONTENT
	 * @generated
	 */
	public Adapter createCM03CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CM04CONTENT <em>CM04CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CM04CONTENT
	 * @generated
	 */
	public Adapter createCM04CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CM05CONTENT <em>CM05CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CM05CONTENT
	 * @generated
	 */
	public Adapter createCM05CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CM06CONTENT <em>CM06CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CM06CONTENT
	 * @generated
	 */
	public Adapter createCM06CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CM07CONTENT <em>CM07CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CM07CONTENT
	 * @generated
	 */
	public Adapter createCM07CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CM08CONTENT <em>CM08CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CM08CONTENT
	 * @generated
	 */
	public Adapter createCM08CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CM09CONTENT <em>CM09CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CM09CONTENT
	 * @generated
	 */
	public Adapter createCM09CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CM0CONTENT <em>CM0CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CM0CONTENT
	 * @generated
	 */
	public Adapter createCM0CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CM11CONTENT <em>CM11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CM11CONTENT
	 * @generated
	 */
	public Adapter createCM11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CM12CONTENT <em>CM12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CM12CONTENT
	 * @generated
	 */
	public Adapter createCM12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CM13CONTENT <em>CM13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CM13CONTENT
	 * @generated
	 */
	public Adapter createCM13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CM1CONTENT <em>CM1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CM1CONTENT
	 * @generated
	 */
	public Adapter createCM1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CM21CONTENT <em>CM21CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CM21CONTENT
	 * @generated
	 */
	public Adapter createCM21CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CM22CONTENT <em>CM22CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CM22CONTENT
	 * @generated
	 */
	public Adapter createCM22CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CM23CONTENT <em>CM23CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CM23CONTENT
	 * @generated
	 */
	public Adapter createCM23CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CM24CONTENT <em>CM24CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CM24CONTENT
	 * @generated
	 */
	public Adapter createCM24CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CM2CONTENT <em>CM2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CM2CONTENT
	 * @generated
	 */
	public Adapter createCM2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CNE <em>CNE</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CNE
	 * @generated
	 */
	public Adapter createCNEAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CNE1CONTENT <em>CNE1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CNE1CONTENT
	 * @generated
	 */
	public Adapter createCNE1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CNE2CONTENT <em>CNE2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CNE2CONTENT
	 * @generated
	 */
	public Adapter createCNE2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CNE3CONTENT <em>CNE3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CNE3CONTENT
	 * @generated
	 */
	public Adapter createCNE3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CNE4CONTENT <em>CNE4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CNE4CONTENT
	 * @generated
	 */
	public Adapter createCNE4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CNE5CONTENT <em>CNE5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CNE5CONTENT
	 * @generated
	 */
	public Adapter createCNE5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CNE6CONTENT <em>CNE6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CNE6CONTENT
	 * @generated
	 */
	public Adapter createCNE6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CNE7CONTENT <em>CNE7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CNE7CONTENT
	 * @generated
	 */
	public Adapter createCNE7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CNE8CONTENT <em>CNE8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CNE8CONTENT
	 * @generated
	 */
	public Adapter createCNE8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CNE9CONTENT <em>CNE9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CNE9CONTENT
	 * @generated
	 */
	public Adapter createCNE9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CNN <em>CNN</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CNN
	 * @generated
	 */
	public Adapter createCNNAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CNN10CONTENT <em>CNN10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CNN10CONTENT
	 * @generated
	 */
	public Adapter createCNN10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CNN11CONTENT <em>CNN11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CNN11CONTENT
	 * @generated
	 */
	public Adapter createCNN11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CNN1CONTENT <em>CNN1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CNN1CONTENT
	 * @generated
	 */
	public Adapter createCNN1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CNN2CONTENT <em>CNN2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CNN2CONTENT
	 * @generated
	 */
	public Adapter createCNN2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CNN3CONTENT <em>CNN3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CNN3CONTENT
	 * @generated
	 */
	public Adapter createCNN3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CNN4CONTENT <em>CNN4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CNN4CONTENT
	 * @generated
	 */
	public Adapter createCNN4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CNN5CONTENT <em>CNN5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CNN5CONTENT
	 * @generated
	 */
	public Adapter createCNN5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CNN6CONTENT <em>CNN6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CNN6CONTENT
	 * @generated
	 */
	public Adapter createCNN6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CNN7CONTENT <em>CNN7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CNN7CONTENT
	 * @generated
	 */
	public Adapter createCNN7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CNN8CONTENT <em>CNN8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CNN8CONTENT
	 * @generated
	 */
	public Adapter createCNN8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CNN9CONTENT <em>CNN9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CNN9CONTENT
	 * @generated
	 */
	public Adapter createCNN9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CNS1CONTENT <em>CNS1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CNS1CONTENT
	 * @generated
	 */
	public Adapter createCNS1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CNS2CONTENT <em>CNS2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CNS2CONTENT
	 * @generated
	 */
	public Adapter createCNS2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CNS3CONTENT <em>CNS3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CNS3CONTENT
	 * @generated
	 */
	public Adapter createCNS3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CNS4CONTENT <em>CNS4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CNS4CONTENT
	 * @generated
	 */
	public Adapter createCNS4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CNS5CONTENT <em>CNS5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CNS5CONTENT
	 * @generated
	 */
	public Adapter createCNS5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CNS6CONTENT <em>CNS6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CNS6CONTENT
	 * @generated
	 */
	public Adapter createCNS6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CNSCONTENT <em>CNSCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CNSCONTENT
	 * @generated
	 */
	public Adapter createCNSCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CON10CONTENT <em>CON10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CON10CONTENT
	 * @generated
	 */
	public Adapter createCON10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CON11CONTENT <em>CON11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CON11CONTENT
	 * @generated
	 */
	public Adapter createCON11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CON12CONTENT <em>CON12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CON12CONTENT
	 * @generated
	 */
	public Adapter createCON12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CON13CONTENT <em>CON13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CON13CONTENT
	 * @generated
	 */
	public Adapter createCON13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CON14CONTENT <em>CON14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CON14CONTENT
	 * @generated
	 */
	public Adapter createCON14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CON15CONTENT <em>CON15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CON15CONTENT
	 * @generated
	 */
	public Adapter createCON15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CON16CONTENT <em>CON16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CON16CONTENT
	 * @generated
	 */
	public Adapter createCON16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CON17CONTENT <em>CON17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CON17CONTENT
	 * @generated
	 */
	public Adapter createCON17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CON18CONTENT <em>CON18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CON18CONTENT
	 * @generated
	 */
	public Adapter createCON18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CON19CONTENT <em>CON19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CON19CONTENT
	 * @generated
	 */
	public Adapter createCON19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CON1CONTENT <em>CON1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CON1CONTENT
	 * @generated
	 */
	public Adapter createCON1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CON20CONTENT <em>CON20CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CON20CONTENT
	 * @generated
	 */
	public Adapter createCON20CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CON21CONTENT <em>CON21CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CON21CONTENT
	 * @generated
	 */
	public Adapter createCON21CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CON22CONTENT <em>CON22CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CON22CONTENT
	 * @generated
	 */
	public Adapter createCON22CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CON23CONTENT <em>CON23CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CON23CONTENT
	 * @generated
	 */
	public Adapter createCON23CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CON24CONTENT <em>CON24CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CON24CONTENT
	 * @generated
	 */
	public Adapter createCON24CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CON25CONTENT <em>CON25CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CON25CONTENT
	 * @generated
	 */
	public Adapter createCON25CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CON2CONTENT <em>CON2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CON2CONTENT
	 * @generated
	 */
	public Adapter createCON2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CON3CONTENT <em>CON3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CON3CONTENT
	 * @generated
	 */
	public Adapter createCON3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CON4CONTENT <em>CON4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CON4CONTENT
	 * @generated
	 */
	public Adapter createCON4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CON5CONTENT <em>CON5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CON5CONTENT
	 * @generated
	 */
	public Adapter createCON5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CON6CONTENT <em>CON6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CON6CONTENT
	 * @generated
	 */
	public Adapter createCON6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CON7CONTENT <em>CON7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CON7CONTENT
	 * @generated
	 */
	public Adapter createCON7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CON8CONTENT <em>CON8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CON8CONTENT
	 * @generated
	 */
	public Adapter createCON8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CON9CONTENT <em>CON9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CON9CONTENT
	 * @generated
	 */
	public Adapter createCON9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CONCONTENT <em>CONCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CONCONTENT
	 * @generated
	 */
	public Adapter createCONCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CP <em>CP</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CP
	 * @generated
	 */
	public Adapter createCPAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CP1CONTENT <em>CP1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CP1CONTENT
	 * @generated
	 */
	public Adapter createCP1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CP2CONTENT <em>CP2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CP2CONTENT
	 * @generated
	 */
	public Adapter createCP2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CP3CONTENT <em>CP3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CP3CONTENT
	 * @generated
	 */
	public Adapter createCP3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CP4CONTENT <em>CP4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CP4CONTENT
	 * @generated
	 */
	public Adapter createCP4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CP5CONTENT <em>CP5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CP5CONTENT
	 * @generated
	 */
	public Adapter createCP5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CP6CONTENT <em>CP6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CP6CONTENT
	 * @generated
	 */
	public Adapter createCP6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CQ <em>CQ</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CQ
	 * @generated
	 */
	public Adapter createCQAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CQ1CONTENT <em>CQ1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CQ1CONTENT
	 * @generated
	 */
	public Adapter createCQ1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CQ2CONTENT <em>CQ2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CQ2CONTENT
	 * @generated
	 */
	public Adapter createCQ2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CSP1CONTENT <em>CSP1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CSP1CONTENT
	 * @generated
	 */
	public Adapter createCSP1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CSP2CONTENT <em>CSP2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CSP2CONTENT
	 * @generated
	 */
	public Adapter createCSP2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CSP3CONTENT <em>CSP3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CSP3CONTENT
	 * @generated
	 */
	public Adapter createCSP3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CSP4CONTENT <em>CSP4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CSP4CONTENT
	 * @generated
	 */
	public Adapter createCSP4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CSPCONTENT <em>CSPCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CSPCONTENT
	 * @generated
	 */
	public Adapter createCSPCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CSR10CONTENT <em>CSR10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CSR10CONTENT
	 * @generated
	 */
	public Adapter createCSR10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CSR11CONTENT <em>CSR11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CSR11CONTENT
	 * @generated
	 */
	public Adapter createCSR11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CSR12CONTENT <em>CSR12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CSR12CONTENT
	 * @generated
	 */
	public Adapter createCSR12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CSR13CONTENT <em>CSR13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CSR13CONTENT
	 * @generated
	 */
	public Adapter createCSR13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CSR14CONTENT <em>CSR14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CSR14CONTENT
	 * @generated
	 */
	public Adapter createCSR14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CSR15CONTENT <em>CSR15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CSR15CONTENT
	 * @generated
	 */
	public Adapter createCSR15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CSR16CONTENT <em>CSR16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CSR16CONTENT
	 * @generated
	 */
	public Adapter createCSR16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CSR1CONTENT <em>CSR1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CSR1CONTENT
	 * @generated
	 */
	public Adapter createCSR1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CSR2CONTENT <em>CSR2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CSR2CONTENT
	 * @generated
	 */
	public Adapter createCSR2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CSR3CONTENT <em>CSR3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CSR3CONTENT
	 * @generated
	 */
	public Adapter createCSR3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CSR4CONTENT <em>CSR4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CSR4CONTENT
	 * @generated
	 */
	public Adapter createCSR4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CSR5CONTENT <em>CSR5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CSR5CONTENT
	 * @generated
	 */
	public Adapter createCSR5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CSR6CONTENT <em>CSR6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CSR6CONTENT
	 * @generated
	 */
	public Adapter createCSR6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CSR7CONTENT <em>CSR7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CSR7CONTENT
	 * @generated
	 */
	public Adapter createCSR7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CSR8CONTENT <em>CSR8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CSR8CONTENT
	 * @generated
	 */
	public Adapter createCSR8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CSR9CONTENT <em>CSR9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CSR9CONTENT
	 * @generated
	 */
	public Adapter createCSR9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CSRCONTENT <em>CSRCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CSRCONTENT
	 * @generated
	 */
	public Adapter createCSRCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CSS1CONTENT <em>CSS1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CSS1CONTENT
	 * @generated
	 */
	public Adapter createCSS1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CSS2CONTENT <em>CSS2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CSS2CONTENT
	 * @generated
	 */
	public Adapter createCSS2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CSS3CONTENT <em>CSS3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CSS3CONTENT
	 * @generated
	 */
	public Adapter createCSS3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CSSCONTENT <em>CSSCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CSSCONTENT
	 * @generated
	 */
	public Adapter createCSSCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CSU <em>CSU</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CSU
	 * @generated
	 */
	public Adapter createCSUAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CSU1CONTENT <em>CSU1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CSU1CONTENT
	 * @generated
	 */
	public Adapter createCSU1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CSU2CONTENT <em>CSU2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CSU2CONTENT
	 * @generated
	 */
	public Adapter createCSU2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CSU3CONTENT <em>CSU3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CSU3CONTENT
	 * @generated
	 */
	public Adapter createCSU3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CSU4CONTENT <em>CSU4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CSU4CONTENT
	 * @generated
	 */
	public Adapter createCSU4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CSU5CONTENT <em>CSU5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CSU5CONTENT
	 * @generated
	 */
	public Adapter createCSU5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CSU6CONTENT <em>CSU6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CSU6CONTENT
	 * @generated
	 */
	public Adapter createCSU6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CSU7CONTENT <em>CSU7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CSU7CONTENT
	 * @generated
	 */
	public Adapter createCSU7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CTD1CONTENT <em>CTD1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CTD1CONTENT
	 * @generated
	 */
	public Adapter createCTD1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CTD2CONTENT <em>CTD2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CTD2CONTENT
	 * @generated
	 */
	public Adapter createCTD2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CTD3CONTENT <em>CTD3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CTD3CONTENT
	 * @generated
	 */
	public Adapter createCTD3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CTD4CONTENT <em>CTD4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CTD4CONTENT
	 * @generated
	 */
	public Adapter createCTD4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CTD5CONTENT <em>CTD5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CTD5CONTENT
	 * @generated
	 */
	public Adapter createCTD5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CTD6CONTENT <em>CTD6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CTD6CONTENT
	 * @generated
	 */
	public Adapter createCTD6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CTD7CONTENT <em>CTD7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CTD7CONTENT
	 * @generated
	 */
	public Adapter createCTD7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CTDCONTENT <em>CTDCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CTDCONTENT
	 * @generated
	 */
	public Adapter createCTDCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CTI1CONTENT <em>CTI1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CTI1CONTENT
	 * @generated
	 */
	public Adapter createCTI1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CTI2CONTENT <em>CTI2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CTI2CONTENT
	 * @generated
	 */
	public Adapter createCTI2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CTI3CONTENT <em>CTI3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CTI3CONTENT
	 * @generated
	 */
	public Adapter createCTI3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CTICONTENT <em>CTICONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CTICONTENT
	 * @generated
	 */
	public Adapter createCTICONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CWE <em>CWE</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CWE
	 * @generated
	 */
	public Adapter createCWEAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CWE1CONTENT <em>CWE1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CWE1CONTENT
	 * @generated
	 */
	public Adapter createCWE1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CWE2CONTENT <em>CWE2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CWE2CONTENT
	 * @generated
	 */
	public Adapter createCWE2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CWE3CONTENT <em>CWE3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CWE3CONTENT
	 * @generated
	 */
	public Adapter createCWE3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CWE4CONTENT <em>CWE4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CWE4CONTENT
	 * @generated
	 */
	public Adapter createCWE4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CWE5CONTENT <em>CWE5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CWE5CONTENT
	 * @generated
	 */
	public Adapter createCWE5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CWE6CONTENT <em>CWE6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CWE6CONTENT
	 * @generated
	 */
	public Adapter createCWE6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CWE7CONTENT <em>CWE7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CWE7CONTENT
	 * @generated
	 */
	public Adapter createCWE7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CWE8CONTENT <em>CWE8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CWE8CONTENT
	 * @generated
	 */
	public Adapter createCWE8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CWE9CONTENT <em>CWE9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CWE9CONTENT
	 * @generated
	 */
	public Adapter createCWE9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CX <em>CX</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CX
	 * @generated
	 */
	public Adapter createCXAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CX10CONTENT <em>CX10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CX10CONTENT
	 * @generated
	 */
	public Adapter createCX10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CX1CONTENT <em>CX1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CX1CONTENT
	 * @generated
	 */
	public Adapter createCX1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CX2CONTENT <em>CX2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CX2CONTENT
	 * @generated
	 */
	public Adapter createCX2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CX3CONTENT <em>CX3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CX3CONTENT
	 * @generated
	 */
	public Adapter createCX3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CX4CONTENT <em>CX4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CX4CONTENT
	 * @generated
	 */
	public Adapter createCX4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CX5CONTENT <em>CX5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CX5CONTENT
	 * @generated
	 */
	public Adapter createCX5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CX6CONTENT <em>CX6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CX6CONTENT
	 * @generated
	 */
	public Adapter createCX6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CX7CONTENT <em>CX7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CX7CONTENT
	 * @generated
	 */
	public Adapter createCX7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CX8CONTENT <em>CX8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CX8CONTENT
	 * @generated
	 */
	public Adapter createCX8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.CX9CONTENT <em>CX9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.CX9CONTENT
	 * @generated
	 */
	public Adapter createCX9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DB11CONTENT <em>DB11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DB11CONTENT
	 * @generated
	 */
	public Adapter createDB11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DB12CONTENT <em>DB12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DB12CONTENT
	 * @generated
	 */
	public Adapter createDB12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DB13CONTENT <em>DB13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DB13CONTENT
	 * @generated
	 */
	public Adapter createDB13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DB14CONTENT <em>DB14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DB14CONTENT
	 * @generated
	 */
	public Adapter createDB14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DB15CONTENT <em>DB15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DB15CONTENT
	 * @generated
	 */
	public Adapter createDB15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DB16CONTENT <em>DB16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DB16CONTENT
	 * @generated
	 */
	public Adapter createDB16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DB17CONTENT <em>DB17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DB17CONTENT
	 * @generated
	 */
	public Adapter createDB17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DB18CONTENT <em>DB18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DB18CONTENT
	 * @generated
	 */
	public Adapter createDB18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DB1CONTENT <em>DB1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DB1CONTENT
	 * @generated
	 */
	public Adapter createDB1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DDI <em>DDI</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DDI
	 * @generated
	 */
	public Adapter createDDIAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DDI1CONTENT <em>DDI1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DDI1CONTENT
	 * @generated
	 */
	public Adapter createDDI1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DDI2CONTENT <em>DDI2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DDI2CONTENT
	 * @generated
	 */
	public Adapter createDDI2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DDI3CONTENT <em>DDI3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DDI3CONTENT
	 * @generated
	 */
	public Adapter createDDI3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DG110CONTENT <em>DG110CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DG110CONTENT
	 * @generated
	 */
	public Adapter createDG110CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DG111CONTENT <em>DG111CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DG111CONTENT
	 * @generated
	 */
	public Adapter createDG111CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DG112CONTENT <em>DG112CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DG112CONTENT
	 * @generated
	 */
	public Adapter createDG112CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DG113CONTENT <em>DG113CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DG113CONTENT
	 * @generated
	 */
	public Adapter createDG113CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DG114CONTENT <em>DG114CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DG114CONTENT
	 * @generated
	 */
	public Adapter createDG114CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DG115CONTENT <em>DG115CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DG115CONTENT
	 * @generated
	 */
	public Adapter createDG115CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DG116CONTENT <em>DG116CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DG116CONTENT
	 * @generated
	 */
	public Adapter createDG116CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DG117CONTENT <em>DG117CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DG117CONTENT
	 * @generated
	 */
	public Adapter createDG117CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DG118CONTENT <em>DG118CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DG118CONTENT
	 * @generated
	 */
	public Adapter createDG118CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DG119CONTENT <em>DG119CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DG119CONTENT
	 * @generated
	 */
	public Adapter createDG119CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DG11CONTENT <em>DG11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DG11CONTENT
	 * @generated
	 */
	public Adapter createDG11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DG120CONTENT <em>DG120CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DG120CONTENT
	 * @generated
	 */
	public Adapter createDG120CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DG121CONTENT <em>DG121CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DG121CONTENT
	 * @generated
	 */
	public Adapter createDG121CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DG12CONTENT <em>DG12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DG12CONTENT
	 * @generated
	 */
	public Adapter createDG12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DG13CONTENT <em>DG13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DG13CONTENT
	 * @generated
	 */
	public Adapter createDG13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DG14CONTENT <em>DG14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DG14CONTENT
	 * @generated
	 */
	public Adapter createDG14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DG15CONTENT <em>DG15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DG15CONTENT
	 * @generated
	 */
	public Adapter createDG15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DG16CONTENT <em>DG16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DG16CONTENT
	 * @generated
	 */
	public Adapter createDG16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DG17CONTENT <em>DG17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DG17CONTENT
	 * @generated
	 */
	public Adapter createDG17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DG18CONTENT <em>DG18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DG18CONTENT
	 * @generated
	 */
	public Adapter createDG18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DG19CONTENT <em>DG19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DG19CONTENT
	 * @generated
	 */
	public Adapter createDG19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DG1CONTENT <em>DG1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DG1CONTENT
	 * @generated
	 */
	public Adapter createDG1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DIN <em>DIN</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DIN
	 * @generated
	 */
	public Adapter createDINAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DIN1CONTENT <em>DIN1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DIN1CONTENT
	 * @generated
	 */
	public Adapter createDIN1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DIN2CONTENT <em>DIN2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DIN2CONTENT
	 * @generated
	 */
	public Adapter createDIN2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DLD <em>DLD</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DLD
	 * @generated
	 */
	public Adapter createDLDAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DLD1CONTENT <em>DLD1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DLD1CONTENT
	 * @generated
	 */
	public Adapter createDLD1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DLD2CONTENT <em>DLD2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DLD2CONTENT
	 * @generated
	 */
	public Adapter createDLD2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DLN <em>DLN</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DLN
	 * @generated
	 */
	public Adapter createDLNAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DLN1CONTENT <em>DLN1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DLN1CONTENT
	 * @generated
	 */
	public Adapter createDLN1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DLN2CONTENT <em>DLN2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DLN2CONTENT
	 * @generated
	 */
	public Adapter createDLN2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DLN3CONTENT <em>DLN3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DLN3CONTENT
	 * @generated
	 */
	public Adapter createDLN3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DLT <em>DLT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DLT
	 * @generated
	 */
	public Adapter createDLTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DLT1CONTENT <em>DLT1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DLT1CONTENT
	 * @generated
	 */
	public Adapter createDLT1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DLT2CONTENT <em>DLT2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DLT2CONTENT
	 * @generated
	 */
	public Adapter createDLT2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DLT3CONTENT <em>DLT3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DLT3CONTENT
	 * @generated
	 */
	public Adapter createDLT3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DLT4CONTENT <em>DLT4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DLT4CONTENT
	 * @generated
	 */
	public Adapter createDLT4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DocumentRoot <em>Document Root</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DocumentRoot
	 * @generated
	 */
	public Adapter createDocumentRootAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DR <em>DR</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DR
	 * @generated
	 */
	public Adapter createDRAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DR1CONTENT <em>DR1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DR1CONTENT
	 * @generated
	 */
	public Adapter createDR1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DR2CONTENT <em>DR2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DR2CONTENT
	 * @generated
	 */
	public Adapter createDR2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DRG10CONTENT <em>DRG10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DRG10CONTENT
	 * @generated
	 */
	public Adapter createDRG10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DRG11CONTENT <em>DRG11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DRG11CONTENT
	 * @generated
	 */
	public Adapter createDRG11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DRG1CONTENT <em>DRG1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DRG1CONTENT
	 * @generated
	 */
	public Adapter createDRG1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DRG2CONTENT <em>DRG2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DRG2CONTENT
	 * @generated
	 */
	public Adapter createDRG2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DRG3CONTENT <em>DRG3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DRG3CONTENT
	 * @generated
	 */
	public Adapter createDRG3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DRG4CONTENT <em>DRG4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DRG4CONTENT
	 * @generated
	 */
	public Adapter createDRG4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DRG5CONTENT <em>DRG5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DRG5CONTENT
	 * @generated
	 */
	public Adapter createDRG5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DRG6CONTENT <em>DRG6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DRG6CONTENT
	 * @generated
	 */
	public Adapter createDRG6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DRG7CONTENT <em>DRG7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DRG7CONTENT
	 * @generated
	 */
	public Adapter createDRG7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DRG8CONTENT <em>DRG8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DRG8CONTENT
	 * @generated
	 */
	public Adapter createDRG8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DRG9CONTENT <em>DRG9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DRG9CONTENT
	 * @generated
	 */
	public Adapter createDRG9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DRGCONTENT <em>DRGCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DRGCONTENT
	 * @generated
	 */
	public Adapter createDRGCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DSC1CONTENT <em>DSC1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DSC1CONTENT
	 * @generated
	 */
	public Adapter createDSC1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DSC2CONTENT <em>DSC2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DSC2CONTENT
	 * @generated
	 */
	public Adapter createDSC2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DSCCONTENT <em>DSCCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DSCCONTENT
	 * @generated
	 */
	public Adapter createDSCCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DSP1CONTENT <em>DSP1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DSP1CONTENT
	 * @generated
	 */
	public Adapter createDSP1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DSP2CONTENT <em>DSP2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DSP2CONTENT
	 * @generated
	 */
	public Adapter createDSP2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DSP3CONTENT <em>DSP3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DSP3CONTENT
	 * @generated
	 */
	public Adapter createDSP3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DSP4CONTENT <em>DSP4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DSP4CONTENT
	 * @generated
	 */
	public Adapter createDSP4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DSP5CONTENT <em>DSP5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DSP5CONTENT
	 * @generated
	 */
	public Adapter createDSP5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DSPCONTENT <em>DSPCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DSPCONTENT
	 * @generated
	 */
	public Adapter createDSPCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DTN <em>DTN</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DTN
	 * @generated
	 */
	public Adapter createDTNAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DTN1CONTENT <em>DTN1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DTN1CONTENT
	 * @generated
	 */
	public Adapter createDTN1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.DTN2CONTENT <em>DTN2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.DTN2CONTENT
	 * @generated
	 */
	public Adapter createDTN2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ECD1CONTENT <em>ECD1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ECD1CONTENT
	 * @generated
	 */
	public Adapter createECD1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ECD2CONTENT <em>ECD2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ECD2CONTENT
	 * @generated
	 */
	public Adapter createECD2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ECD3CONTENT <em>ECD3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ECD3CONTENT
	 * @generated
	 */
	public Adapter createECD3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ECD4CONTENT <em>ECD4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ECD4CONTENT
	 * @generated
	 */
	public Adapter createECD4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ECD5CONTENT <em>ECD5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ECD5CONTENT
	 * @generated
	 */
	public Adapter createECD5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ECDCONTENT <em>ECDCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ECDCONTENT
	 * @generated
	 */
	public Adapter createECDCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ECR1CONTENT <em>ECR1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ECR1CONTENT
	 * @generated
	 */
	public Adapter createECR1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ECR2CONTENT <em>ECR2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ECR2CONTENT
	 * @generated
	 */
	public Adapter createECR2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ECR3CONTENT <em>ECR3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ECR3CONTENT
	 * @generated
	 */
	public Adapter createECR3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ECRCONTENT <em>ECRCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ECRCONTENT
	 * @generated
	 */
	public Adapter createECRCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ED <em>ED</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ED
	 * @generated
	 */
	public Adapter createEDAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ED1CONTENT <em>ED1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ED1CONTENT
	 * @generated
	 */
	public Adapter createED1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ED2CONTENT <em>ED2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ED2CONTENT
	 * @generated
	 */
	public Adapter createED2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ED3CONTENT <em>ED3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ED3CONTENT
	 * @generated
	 */
	public Adapter createED3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ED4CONTENT <em>ED4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ED4CONTENT
	 * @generated
	 */
	public Adapter createED4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ED5CONTENT <em>ED5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ED5CONTENT
	 * @generated
	 */
	public Adapter createED5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EDU1CONTENT <em>EDU1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EDU1CONTENT
	 * @generated
	 */
	public Adapter createEDU1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EDU2CONTENT <em>EDU2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EDU2CONTENT
	 * @generated
	 */
	public Adapter createEDU2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EDU3CONTENT <em>EDU3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EDU3CONTENT
	 * @generated
	 */
	public Adapter createEDU3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EDU4CONTENT <em>EDU4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EDU4CONTENT
	 * @generated
	 */
	public Adapter createEDU4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EDU5CONTENT <em>EDU5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EDU5CONTENT
	 * @generated
	 */
	public Adapter createEDU5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EDU6CONTENT <em>EDU6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EDU6CONTENT
	 * @generated
	 */
	public Adapter createEDU6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EDU7CONTENT <em>EDU7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EDU7CONTENT
	 * @generated
	 */
	public Adapter createEDU7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EDU8CONTENT <em>EDU8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EDU8CONTENT
	 * @generated
	 */
	public Adapter createEDU8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EDU9CONTENT <em>EDU9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EDU9CONTENT
	 * @generated
	 */
	public Adapter createEDU9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EDUCONTENT <em>EDUCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EDUCONTENT
	 * @generated
	 */
	public Adapter createEDUCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EI <em>EI</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EI
	 * @generated
	 */
	public Adapter createEIAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EI1CONTENT <em>EI1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EI1CONTENT
	 * @generated
	 */
	public Adapter createEI1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EI2CONTENT <em>EI2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EI2CONTENT
	 * @generated
	 */
	public Adapter createEI2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EI3CONTENT <em>EI3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EI3CONTENT
	 * @generated
	 */
	public Adapter createEI3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EI4CONTENT <em>EI4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EI4CONTENT
	 * @generated
	 */
	public Adapter createEI4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EIP <em>EIP</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EIP
	 * @generated
	 */
	public Adapter createEIPAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EIP1CONTENT <em>EIP1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EIP1CONTENT
	 * @generated
	 */
	public Adapter createEIP1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EIP2CONTENT <em>EIP2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EIP2CONTENT
	 * @generated
	 */
	public Adapter createEIP2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ELD <em>ELD</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ELD
	 * @generated
	 */
	public Adapter createELDAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ELD1CONTENT <em>ELD1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ELD1CONTENT
	 * @generated
	 */
	public Adapter createELD1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ELD2CONTENT <em>ELD2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ELD2CONTENT
	 * @generated
	 */
	public Adapter createELD2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ELD3CONTENT <em>ELD3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ELD3CONTENT
	 * @generated
	 */
	public Adapter createELD3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ELD4CONTENT <em>ELD4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ELD4CONTENT
	 * @generated
	 */
	public Adapter createELD4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EQL1CONTENT <em>EQL1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EQL1CONTENT
	 * @generated
	 */
	public Adapter createEQL1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EQL2CONTENT <em>EQL2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EQL2CONTENT
	 * @generated
	 */
	public Adapter createEQL2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EQL3CONTENT <em>EQL3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EQL3CONTENT
	 * @generated
	 */
	public Adapter createEQL3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EQL4CONTENT <em>EQL4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EQL4CONTENT
	 * @generated
	 */
	public Adapter createEQL4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EQLCONTENT <em>EQLCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EQLCONTENT
	 * @generated
	 */
	public Adapter createEQLCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EQP1CONTENT <em>EQP1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EQP1CONTENT
	 * @generated
	 */
	public Adapter createEQP1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EQP2CONTENT <em>EQP2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EQP2CONTENT
	 * @generated
	 */
	public Adapter createEQP2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EQP3CONTENT <em>EQP3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EQP3CONTENT
	 * @generated
	 */
	public Adapter createEQP3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EQP4CONTENT <em>EQP4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EQP4CONTENT
	 * @generated
	 */
	public Adapter createEQP4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EQP5CONTENT <em>EQP5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EQP5CONTENT
	 * @generated
	 */
	public Adapter createEQP5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EQPCONTENT <em>EQPCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EQPCONTENT
	 * @generated
	 */
	public Adapter createEQPCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EQU1CONTENT <em>EQU1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EQU1CONTENT
	 * @generated
	 */
	public Adapter createEQU1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EQU2CONTENT <em>EQU2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EQU2CONTENT
	 * @generated
	 */
	public Adapter createEQU2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EQU3CONTENT <em>EQU3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EQU3CONTENT
	 * @generated
	 */
	public Adapter createEQU3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EQU4CONTENT <em>EQU4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EQU4CONTENT
	 * @generated
	 */
	public Adapter createEQU4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EQU5CONTENT <em>EQU5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EQU5CONTENT
	 * @generated
	 */
	public Adapter createEQU5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EQUCONTENT <em>EQUCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EQUCONTENT
	 * @generated
	 */
	public Adapter createEQUCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ERL <em>ERL</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ERL
	 * @generated
	 */
	public Adapter createERLAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ERL1CONTENT <em>ERL1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ERL1CONTENT
	 * @generated
	 */
	public Adapter createERL1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ERL2CONTENT <em>ERL2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ERL2CONTENT
	 * @generated
	 */
	public Adapter createERL2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ERL3CONTENT <em>ERL3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ERL3CONTENT
	 * @generated
	 */
	public Adapter createERL3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ERL4CONTENT <em>ERL4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ERL4CONTENT
	 * @generated
	 */
	public Adapter createERL4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ERL5CONTENT <em>ERL5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ERL5CONTENT
	 * @generated
	 */
	public Adapter createERL5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ERL6CONTENT <em>ERL6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ERL6CONTENT
	 * @generated
	 */
	public Adapter createERL6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ERQ1CONTENT <em>ERQ1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ERQ1CONTENT
	 * @generated
	 */
	public Adapter createERQ1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ERQ2CONTENT <em>ERQ2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ERQ2CONTENT
	 * @generated
	 */
	public Adapter createERQ2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ERQ3CONTENT <em>ERQ3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ERQ3CONTENT
	 * @generated
	 */
	public Adapter createERQ3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ERQCONTENT <em>ERQCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ERQCONTENT
	 * @generated
	 */
	public Adapter createERQCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ERR10CONTENT <em>ERR10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ERR10CONTENT
	 * @generated
	 */
	public Adapter createERR10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ERR11CONTENT <em>ERR11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ERR11CONTENT
	 * @generated
	 */
	public Adapter createERR11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ERR12CONTENT <em>ERR12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ERR12CONTENT
	 * @generated
	 */
	public Adapter createERR12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ERR1CONTENT <em>ERR1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ERR1CONTENT
	 * @generated
	 */
	public Adapter createERR1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ERR2CONTENT <em>ERR2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ERR2CONTENT
	 * @generated
	 */
	public Adapter createERR2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ERR3CONTENT <em>ERR3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ERR3CONTENT
	 * @generated
	 */
	public Adapter createERR3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ERR4CONTENT <em>ERR4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ERR4CONTENT
	 * @generated
	 */
	public Adapter createERR4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ERR5CONTENT <em>ERR5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ERR5CONTENT
	 * @generated
	 */
	public Adapter createERR5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ERR6CONTENT <em>ERR6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ERR6CONTENT
	 * @generated
	 */
	public Adapter createERR6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ERR7CONTENT <em>ERR7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ERR7CONTENT
	 * @generated
	 */
	public Adapter createERR7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ERR8CONTENT <em>ERR8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ERR8CONTENT
	 * @generated
	 */
	public Adapter createERR8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ERR9CONTENT <em>ERR9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ERR9CONTENT
	 * @generated
	 */
	public Adapter createERR9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ERRCONTENT <em>ERRCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ERRCONTENT
	 * @generated
	 */
	public Adapter createERRCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EscapeType <em>Escape Type</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EscapeType
	 * @generated
	 */
	public Adapter createEscapeTypeAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EVN1CONTENT <em>EVN1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EVN1CONTENT
	 * @generated
	 */
	public Adapter createEVN1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EVN2CONTENT <em>EVN2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EVN2CONTENT
	 * @generated
	 */
	public Adapter createEVN2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EVN3CONTENT <em>EVN3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EVN3CONTENT
	 * @generated
	 */
	public Adapter createEVN3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EVN4CONTENT <em>EVN4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EVN4CONTENT
	 * @generated
	 */
	public Adapter createEVN4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EVN5CONTENT <em>EVN5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EVN5CONTENT
	 * @generated
	 */
	public Adapter createEVN5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EVN6CONTENT <em>EVN6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EVN6CONTENT
	 * @generated
	 */
	public Adapter createEVN6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EVN7CONTENT <em>EVN7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EVN7CONTENT
	 * @generated
	 */
	public Adapter createEVN7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.EVNCONTENT <em>EVNCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.EVNCONTENT
	 * @generated
	 */
	public Adapter createEVNCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FAC10CONTENT <em>FAC10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FAC10CONTENT
	 * @generated
	 */
	public Adapter createFAC10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FAC11CONTENT <em>FAC11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FAC11CONTENT
	 * @generated
	 */
	public Adapter createFAC11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FAC12CONTENT <em>FAC12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FAC12CONTENT
	 * @generated
	 */
	public Adapter createFAC12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FAC1CONTENT <em>FAC1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FAC1CONTENT
	 * @generated
	 */
	public Adapter createFAC1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FAC2CONTENT <em>FAC2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FAC2CONTENT
	 * @generated
	 */
	public Adapter createFAC2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FAC3CONTENT <em>FAC3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FAC3CONTENT
	 * @generated
	 */
	public Adapter createFAC3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FAC4CONTENT <em>FAC4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FAC4CONTENT
	 * @generated
	 */
	public Adapter createFAC4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FAC5CONTENT <em>FAC5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FAC5CONTENT
	 * @generated
	 */
	public Adapter createFAC5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FAC6CONTENT <em>FAC6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FAC6CONTENT
	 * @generated
	 */
	public Adapter createFAC6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FAC7CONTENT <em>FAC7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FAC7CONTENT
	 * @generated
	 */
	public Adapter createFAC7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FAC8CONTENT <em>FAC8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FAC8CONTENT
	 * @generated
	 */
	public Adapter createFAC8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FAC9CONTENT <em>FAC9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FAC9CONTENT
	 * @generated
	 */
	public Adapter createFAC9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FACCONTENT <em>FACCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FACCONTENT
	 * @generated
	 */
	public Adapter createFACCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FC <em>FC</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FC
	 * @generated
	 */
	public Adapter createFCAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FC1CONTENT <em>FC1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FC1CONTENT
	 * @generated
	 */
	public Adapter createFC1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FC2CONTENT <em>FC2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FC2CONTENT
	 * @generated
	 */
	public Adapter createFC2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FHS10CONTENT <em>FHS10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FHS10CONTENT
	 * @generated
	 */
	public Adapter createFHS10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FHS11CONTENT <em>FHS11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FHS11CONTENT
	 * @generated
	 */
	public Adapter createFHS11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FHS12CONTENT <em>FHS12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FHS12CONTENT
	 * @generated
	 */
	public Adapter createFHS12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FHS1CONTENT <em>FHS1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FHS1CONTENT
	 * @generated
	 */
	public Adapter createFHS1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FHS2CONTENT <em>FHS2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FHS2CONTENT
	 * @generated
	 */
	public Adapter createFHS2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FHS3CONTENT <em>FHS3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FHS3CONTENT
	 * @generated
	 */
	public Adapter createFHS3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FHS4CONTENT <em>FHS4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FHS4CONTENT
	 * @generated
	 */
	public Adapter createFHS4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FHS5CONTENT <em>FHS5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FHS5CONTENT
	 * @generated
	 */
	public Adapter createFHS5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FHS6CONTENT <em>FHS6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FHS6CONTENT
	 * @generated
	 */
	public Adapter createFHS6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FHS7CONTENT <em>FHS7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FHS7CONTENT
	 * @generated
	 */
	public Adapter createFHS7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FHS8CONTENT <em>FHS8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FHS8CONTENT
	 * @generated
	 */
	public Adapter createFHS8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FHS9CONTENT <em>FHS9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FHS9CONTENT
	 * @generated
	 */
	public Adapter createFHS9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FHSCONTENT <em>FHSCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FHSCONTENT
	 * @generated
	 */
	public Adapter createFHSCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FN <em>FN</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FN
	 * @generated
	 */
	public Adapter createFNAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FN1CONTENT <em>FN1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FN1CONTENT
	 * @generated
	 */
	public Adapter createFN1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FN2CONTENT <em>FN2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FN2CONTENT
	 * @generated
	 */
	public Adapter createFN2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FN3CONTENT <em>FN3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FN3CONTENT
	 * @generated
	 */
	public Adapter createFN3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FN4CONTENT <em>FN4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FN4CONTENT
	 * @generated
	 */
	public Adapter createFN4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FN5CONTENT <em>FN5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FN5CONTENT
	 * @generated
	 */
	public Adapter createFN5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FT <em>FT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FT
	 * @generated
	 */
	public Adapter createFTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FT110CONTENT <em>FT110CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FT110CONTENT
	 * @generated
	 */
	public Adapter createFT110CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FT111CONTENT <em>FT111CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FT111CONTENT
	 * @generated
	 */
	public Adapter createFT111CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FT112CONTENT <em>FT112CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FT112CONTENT
	 * @generated
	 */
	public Adapter createFT112CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FT113CONTENT <em>FT113CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FT113CONTENT
	 * @generated
	 */
	public Adapter createFT113CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FT114CONTENT <em>FT114CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FT114CONTENT
	 * @generated
	 */
	public Adapter createFT114CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FT115CONTENT <em>FT115CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FT115CONTENT
	 * @generated
	 */
	public Adapter createFT115CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FT116CONTENT <em>FT116CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FT116CONTENT
	 * @generated
	 */
	public Adapter createFT116CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FT117CONTENT <em>FT117CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FT117CONTENT
	 * @generated
	 */
	public Adapter createFT117CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FT118CONTENT <em>FT118CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FT118CONTENT
	 * @generated
	 */
	public Adapter createFT118CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FT119CONTENT <em>FT119CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FT119CONTENT
	 * @generated
	 */
	public Adapter createFT119CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FT11CONTENT <em>FT11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FT11CONTENT
	 * @generated
	 */
	public Adapter createFT11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FT120CONTENT <em>FT120CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FT120CONTENT
	 * @generated
	 */
	public Adapter createFT120CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FT121CONTENT <em>FT121CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FT121CONTENT
	 * @generated
	 */
	public Adapter createFT121CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FT122CONTENT <em>FT122CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FT122CONTENT
	 * @generated
	 */
	public Adapter createFT122CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FT123CONTENT <em>FT123CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FT123CONTENT
	 * @generated
	 */
	public Adapter createFT123CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FT124CONTENT <em>FT124CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FT124CONTENT
	 * @generated
	 */
	public Adapter createFT124CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FT125CONTENT <em>FT125CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FT125CONTENT
	 * @generated
	 */
	public Adapter createFT125CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FT126CONTENT <em>FT126CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FT126CONTENT
	 * @generated
	 */
	public Adapter createFT126CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FT127CONTENT <em>FT127CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FT127CONTENT
	 * @generated
	 */
	public Adapter createFT127CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FT128CONTENT <em>FT128CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FT128CONTENT
	 * @generated
	 */
	public Adapter createFT128CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FT129CONTENT <em>FT129CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FT129CONTENT
	 * @generated
	 */
	public Adapter createFT129CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FT12CONTENT <em>FT12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FT12CONTENT
	 * @generated
	 */
	public Adapter createFT12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FT130CONTENT <em>FT130CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FT130CONTENT
	 * @generated
	 */
	public Adapter createFT130CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FT131CONTENT <em>FT131CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FT131CONTENT
	 * @generated
	 */
	public Adapter createFT131CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FT13CONTENT <em>FT13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FT13CONTENT
	 * @generated
	 */
	public Adapter createFT13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FT14CONTENT <em>FT14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FT14CONTENT
	 * @generated
	 */
	public Adapter createFT14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FT15CONTENT <em>FT15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FT15CONTENT
	 * @generated
	 */
	public Adapter createFT15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FT16CONTENT <em>FT16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FT16CONTENT
	 * @generated
	 */
	public Adapter createFT16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FT17CONTENT <em>FT17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FT17CONTENT
	 * @generated
	 */
	public Adapter createFT17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FT18CONTENT <em>FT18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FT18CONTENT
	 * @generated
	 */
	public Adapter createFT18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FT19CONTENT <em>FT19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FT19CONTENT
	 * @generated
	 */
	public Adapter createFT19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FT1CONTENT <em>FT1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FT1CONTENT
	 * @generated
	 */
	public Adapter createFT1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FTS1CONTENT <em>FTS1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FTS1CONTENT
	 * @generated
	 */
	public Adapter createFTS1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FTS2CONTENT <em>FTS2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FTS2CONTENT
	 * @generated
	 */
	public Adapter createFTS2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.FTSCONTENT <em>FTSCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.FTSCONTENT
	 * @generated
	 */
	public Adapter createFTSCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GOL10CONTENT <em>GOL10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GOL10CONTENT
	 * @generated
	 */
	public Adapter createGOL10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GOL11CONTENT <em>GOL11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GOL11CONTENT
	 * @generated
	 */
	public Adapter createGOL11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GOL12CONTENT <em>GOL12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GOL12CONTENT
	 * @generated
	 */
	public Adapter createGOL12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GOL13CONTENT <em>GOL13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GOL13CONTENT
	 * @generated
	 */
	public Adapter createGOL13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GOL14CONTENT <em>GOL14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GOL14CONTENT
	 * @generated
	 */
	public Adapter createGOL14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GOL15CONTENT <em>GOL15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GOL15CONTENT
	 * @generated
	 */
	public Adapter createGOL15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GOL16CONTENT <em>GOL16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GOL16CONTENT
	 * @generated
	 */
	public Adapter createGOL16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GOL17CONTENT <em>GOL17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GOL17CONTENT
	 * @generated
	 */
	public Adapter createGOL17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GOL18CONTENT <em>GOL18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GOL18CONTENT
	 * @generated
	 */
	public Adapter createGOL18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GOL19CONTENT <em>GOL19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GOL19CONTENT
	 * @generated
	 */
	public Adapter createGOL19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GOL1CONTENT <em>GOL1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GOL1CONTENT
	 * @generated
	 */
	public Adapter createGOL1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GOL20CONTENT <em>GOL20CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GOL20CONTENT
	 * @generated
	 */
	public Adapter createGOL20CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GOL21CONTENT <em>GOL21CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GOL21CONTENT
	 * @generated
	 */
	public Adapter createGOL21CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GOL2CONTENT <em>GOL2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GOL2CONTENT
	 * @generated
	 */
	public Adapter createGOL2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GOL3CONTENT <em>GOL3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GOL3CONTENT
	 * @generated
	 */
	public Adapter createGOL3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GOL4CONTENT <em>GOL4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GOL4CONTENT
	 * @generated
	 */
	public Adapter createGOL4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GOL5CONTENT <em>GOL5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GOL5CONTENT
	 * @generated
	 */
	public Adapter createGOL5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GOL6CONTENT <em>GOL6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GOL6CONTENT
	 * @generated
	 */
	public Adapter createGOL6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GOL7CONTENT <em>GOL7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GOL7CONTENT
	 * @generated
	 */
	public Adapter createGOL7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GOL8CONTENT <em>GOL8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GOL8CONTENT
	 * @generated
	 */
	public Adapter createGOL8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GOL9CONTENT <em>GOL9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GOL9CONTENT
	 * @generated
	 */
	public Adapter createGOL9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GOLCONTENT <em>GOLCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GOLCONTENT
	 * @generated
	 */
	public Adapter createGOLCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GP11CONTENT <em>GP11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GP11CONTENT
	 * @generated
	 */
	public Adapter createGP11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GP12CONTENT <em>GP12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GP12CONTENT
	 * @generated
	 */
	public Adapter createGP12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GP13CONTENT <em>GP13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GP13CONTENT
	 * @generated
	 */
	public Adapter createGP13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GP14CONTENT <em>GP14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GP14CONTENT
	 * @generated
	 */
	public Adapter createGP14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GP15CONTENT <em>GP15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GP15CONTENT
	 * @generated
	 */
	public Adapter createGP15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GP1CONTENT <em>GP1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GP1CONTENT
	 * @generated
	 */
	public Adapter createGP1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GP210CONTENT <em>GP210CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GP210CONTENT
	 * @generated
	 */
	public Adapter createGP210CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GP211CONTENT <em>GP211CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GP211CONTENT
	 * @generated
	 */
	public Adapter createGP211CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GP212CONTENT <em>GP212CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GP212CONTENT
	 * @generated
	 */
	public Adapter createGP212CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GP213CONTENT <em>GP213CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GP213CONTENT
	 * @generated
	 */
	public Adapter createGP213CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GP214CONTENT <em>GP214CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GP214CONTENT
	 * @generated
	 */
	public Adapter createGP214CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GP21CONTENT <em>GP21CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GP21CONTENT
	 * @generated
	 */
	public Adapter createGP21CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GP22CONTENT <em>GP22CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GP22CONTENT
	 * @generated
	 */
	public Adapter createGP22CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GP23CONTENT <em>GP23CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GP23CONTENT
	 * @generated
	 */
	public Adapter createGP23CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GP24CONTENT <em>GP24CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GP24CONTENT
	 * @generated
	 */
	public Adapter createGP24CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GP25CONTENT <em>GP25CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GP25CONTENT
	 * @generated
	 */
	public Adapter createGP25CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GP26CONTENT <em>GP26CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GP26CONTENT
	 * @generated
	 */
	public Adapter createGP26CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GP27CONTENT <em>GP27CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GP27CONTENT
	 * @generated
	 */
	public Adapter createGP27CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GP28CONTENT <em>GP28CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GP28CONTENT
	 * @generated
	 */
	public Adapter createGP28CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GP29CONTENT <em>GP29CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GP29CONTENT
	 * @generated
	 */
	public Adapter createGP29CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GP2CONTENT <em>GP2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GP2CONTENT
	 * @generated
	 */
	public Adapter createGP2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT110CONTENT <em>GT110CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT110CONTENT
	 * @generated
	 */
	public Adapter createGT110CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT111CONTENT <em>GT111CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT111CONTENT
	 * @generated
	 */
	public Adapter createGT111CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT112CONTENT <em>GT112CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT112CONTENT
	 * @generated
	 */
	public Adapter createGT112CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT113CONTENT <em>GT113CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT113CONTENT
	 * @generated
	 */
	public Adapter createGT113CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT114CONTENT <em>GT114CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT114CONTENT
	 * @generated
	 */
	public Adapter createGT114CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT115CONTENT <em>GT115CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT115CONTENT
	 * @generated
	 */
	public Adapter createGT115CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT116CONTENT <em>GT116CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT116CONTENT
	 * @generated
	 */
	public Adapter createGT116CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT117CONTENT <em>GT117CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT117CONTENT
	 * @generated
	 */
	public Adapter createGT117CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT118CONTENT <em>GT118CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT118CONTENT
	 * @generated
	 */
	public Adapter createGT118CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT119CONTENT <em>GT119CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT119CONTENT
	 * @generated
	 */
	public Adapter createGT119CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT11CONTENT <em>GT11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT11CONTENT
	 * @generated
	 */
	public Adapter createGT11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT120CONTENT <em>GT120CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT120CONTENT
	 * @generated
	 */
	public Adapter createGT120CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT121CONTENT <em>GT121CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT121CONTENT
	 * @generated
	 */
	public Adapter createGT121CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT122CONTENT <em>GT122CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT122CONTENT
	 * @generated
	 */
	public Adapter createGT122CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT123CONTENT <em>GT123CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT123CONTENT
	 * @generated
	 */
	public Adapter createGT123CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT124CONTENT <em>GT124CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT124CONTENT
	 * @generated
	 */
	public Adapter createGT124CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT125CONTENT <em>GT125CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT125CONTENT
	 * @generated
	 */
	public Adapter createGT125CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT126CONTENT <em>GT126CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT126CONTENT
	 * @generated
	 */
	public Adapter createGT126CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT127CONTENT <em>GT127CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT127CONTENT
	 * @generated
	 */
	public Adapter createGT127CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT128CONTENT <em>GT128CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT128CONTENT
	 * @generated
	 */
	public Adapter createGT128CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT129CONTENT <em>GT129CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT129CONTENT
	 * @generated
	 */
	public Adapter createGT129CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT12CONTENT <em>GT12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT12CONTENT
	 * @generated
	 */
	public Adapter createGT12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT130CONTENT <em>GT130CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT130CONTENT
	 * @generated
	 */
	public Adapter createGT130CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT131CONTENT <em>GT131CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT131CONTENT
	 * @generated
	 */
	public Adapter createGT131CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT132CONTENT <em>GT132CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT132CONTENT
	 * @generated
	 */
	public Adapter createGT132CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT133CONTENT <em>GT133CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT133CONTENT
	 * @generated
	 */
	public Adapter createGT133CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT134CONTENT <em>GT134CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT134CONTENT
	 * @generated
	 */
	public Adapter createGT134CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT135CONTENT <em>GT135CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT135CONTENT
	 * @generated
	 */
	public Adapter createGT135CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT136CONTENT <em>GT136CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT136CONTENT
	 * @generated
	 */
	public Adapter createGT136CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT137CONTENT <em>GT137CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT137CONTENT
	 * @generated
	 */
	public Adapter createGT137CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT138CONTENT <em>GT138CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT138CONTENT
	 * @generated
	 */
	public Adapter createGT138CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT139CONTENT <em>GT139CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT139CONTENT
	 * @generated
	 */
	public Adapter createGT139CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT13CONTENT <em>GT13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT13CONTENT
	 * @generated
	 */
	public Adapter createGT13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT140CONTENT <em>GT140CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT140CONTENT
	 * @generated
	 */
	public Adapter createGT140CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT141CONTENT <em>GT141CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT141CONTENT
	 * @generated
	 */
	public Adapter createGT141CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT142CONTENT <em>GT142CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT142CONTENT
	 * @generated
	 */
	public Adapter createGT142CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT143CONTENT <em>GT143CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT143CONTENT
	 * @generated
	 */
	public Adapter createGT143CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT144CONTENT <em>GT144CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT144CONTENT
	 * @generated
	 */
	public Adapter createGT144CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT145CONTENT <em>GT145CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT145CONTENT
	 * @generated
	 */
	public Adapter createGT145CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT146CONTENT <em>GT146CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT146CONTENT
	 * @generated
	 */
	public Adapter createGT146CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT147CONTENT <em>GT147CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT147CONTENT
	 * @generated
	 */
	public Adapter createGT147CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT148CONTENT <em>GT148CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT148CONTENT
	 * @generated
	 */
	public Adapter createGT148CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT149CONTENT <em>GT149CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT149CONTENT
	 * @generated
	 */
	public Adapter createGT149CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT14CONTENT <em>GT14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT14CONTENT
	 * @generated
	 */
	public Adapter createGT14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT150CONTENT <em>GT150CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT150CONTENT
	 * @generated
	 */
	public Adapter createGT150CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT151CONTENT <em>GT151CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT151CONTENT
	 * @generated
	 */
	public Adapter createGT151CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT152CONTENT <em>GT152CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT152CONTENT
	 * @generated
	 */
	public Adapter createGT152CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT153CONTENT <em>GT153CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT153CONTENT
	 * @generated
	 */
	public Adapter createGT153CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT154CONTENT <em>GT154CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT154CONTENT
	 * @generated
	 */
	public Adapter createGT154CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT155CONTENT <em>GT155CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT155CONTENT
	 * @generated
	 */
	public Adapter createGT155CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT156CONTENT <em>GT156CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT156CONTENT
	 * @generated
	 */
	public Adapter createGT156CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT157CONTENT <em>GT157CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT157CONTENT
	 * @generated
	 */
	public Adapter createGT157CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT15CONTENT <em>GT15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT15CONTENT
	 * @generated
	 */
	public Adapter createGT15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT16CONTENT <em>GT16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT16CONTENT
	 * @generated
	 */
	public Adapter createGT16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT17CONTENT <em>GT17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT17CONTENT
	 * @generated
	 */
	public Adapter createGT17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT18CONTENT <em>GT18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT18CONTENT
	 * @generated
	 */
	public Adapter createGT18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT19CONTENT <em>GT19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT19CONTENT
	 * @generated
	 */
	public Adapter createGT19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.GT1CONTENT <em>GT1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.GT1CONTENT
	 * @generated
	 */
	public Adapter createGT1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.HD <em>HD</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.HD
	 * @generated
	 */
	public Adapter createHDAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.HD1CONTENT <em>HD1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.HD1CONTENT
	 * @generated
	 */
	public Adapter createHD1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.HD2CONTENT <em>HD2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.HD2CONTENT
	 * @generated
	 */
	public Adapter createHD2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.HD3CONTENT <em>HD3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.HD3CONTENT
	 * @generated
	 */
	public Adapter createHD3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IAM10CONTENT <em>IAM10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IAM10CONTENT
	 * @generated
	 */
	public Adapter createIAM10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IAM11CONTENT <em>IAM11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IAM11CONTENT
	 * @generated
	 */
	public Adapter createIAM11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IAM12CONTENT <em>IAM12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IAM12CONTENT
	 * @generated
	 */
	public Adapter createIAM12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IAM13CONTENT <em>IAM13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IAM13CONTENT
	 * @generated
	 */
	public Adapter createIAM13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IAM14CONTENT <em>IAM14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IAM14CONTENT
	 * @generated
	 */
	public Adapter createIAM14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IAM15CONTENT <em>IAM15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IAM15CONTENT
	 * @generated
	 */
	public Adapter createIAM15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IAM16CONTENT <em>IAM16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IAM16CONTENT
	 * @generated
	 */
	public Adapter createIAM16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IAM17CONTENT <em>IAM17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IAM17CONTENT
	 * @generated
	 */
	public Adapter createIAM17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IAM18CONTENT <em>IAM18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IAM18CONTENT
	 * @generated
	 */
	public Adapter createIAM18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IAM19CONTENT <em>IAM19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IAM19CONTENT
	 * @generated
	 */
	public Adapter createIAM19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IAM1CONTENT <em>IAM1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IAM1CONTENT
	 * @generated
	 */
	public Adapter createIAM1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IAM20CONTENT <em>IAM20CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IAM20CONTENT
	 * @generated
	 */
	public Adapter createIAM20CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IAM2CONTENT <em>IAM2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IAM2CONTENT
	 * @generated
	 */
	public Adapter createIAM2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IAM3CONTENT <em>IAM3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IAM3CONTENT
	 * @generated
	 */
	public Adapter createIAM3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IAM4CONTENT <em>IAM4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IAM4CONTENT
	 * @generated
	 */
	public Adapter createIAM4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IAM5CONTENT <em>IAM5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IAM5CONTENT
	 * @generated
	 */
	public Adapter createIAM5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IAM6CONTENT <em>IAM6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IAM6CONTENT
	 * @generated
	 */
	public Adapter createIAM6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IAM7CONTENT <em>IAM7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IAM7CONTENT
	 * @generated
	 */
	public Adapter createIAM7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IAM8CONTENT <em>IAM8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IAM8CONTENT
	 * @generated
	 */
	public Adapter createIAM8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IAM9CONTENT <em>IAM9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IAM9CONTENT
	 * @generated
	 */
	public Adapter createIAM9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IAMCONTENT <em>IAMCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IAMCONTENT
	 * @generated
	 */
	public Adapter createIAMCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ICD <em>ICD</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ICD
	 * @generated
	 */
	public Adapter createICDAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ICD1CONTENT <em>ICD1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ICD1CONTENT
	 * @generated
	 */
	public Adapter createICD1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ICD2CONTENT <em>ICD2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ICD2CONTENT
	 * @generated
	 */
	public Adapter createICD2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ICD3CONTENT <em>ICD3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ICD3CONTENT
	 * @generated
	 */
	public Adapter createICD3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IIM10CONTENT <em>IIM10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IIM10CONTENT
	 * @generated
	 */
	public Adapter createIIM10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IIM11CONTENT <em>IIM11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IIM11CONTENT
	 * @generated
	 */
	public Adapter createIIM11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IIM12CONTENT <em>IIM12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IIM12CONTENT
	 * @generated
	 */
	public Adapter createIIM12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IIM13CONTENT <em>IIM13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IIM13CONTENT
	 * @generated
	 */
	public Adapter createIIM13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IIM14CONTENT <em>IIM14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IIM14CONTENT
	 * @generated
	 */
	public Adapter createIIM14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IIM15CONTENT <em>IIM15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IIM15CONTENT
	 * @generated
	 */
	public Adapter createIIM15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IIM1CONTENT <em>IIM1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IIM1CONTENT
	 * @generated
	 */
	public Adapter createIIM1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IIM2CONTENT <em>IIM2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IIM2CONTENT
	 * @generated
	 */
	public Adapter createIIM2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IIM3CONTENT <em>IIM3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IIM3CONTENT
	 * @generated
	 */
	public Adapter createIIM3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IIM4CONTENT <em>IIM4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IIM4CONTENT
	 * @generated
	 */
	public Adapter createIIM4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IIM5CONTENT <em>IIM5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IIM5CONTENT
	 * @generated
	 */
	public Adapter createIIM5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IIM6CONTENT <em>IIM6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IIM6CONTENT
	 * @generated
	 */
	public Adapter createIIM6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IIM7CONTENT <em>IIM7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IIM7CONTENT
	 * @generated
	 */
	public Adapter createIIM7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IIM8CONTENT <em>IIM8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IIM8CONTENT
	 * @generated
	 */
	public Adapter createIIM8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IIM9CONTENT <em>IIM9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IIM9CONTENT
	 * @generated
	 */
	public Adapter createIIM9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IIMCONTENT <em>IIMCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IIMCONTENT
	 * @generated
	 */
	public Adapter createIIMCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN110CONTENT <em>IN110CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN110CONTENT
	 * @generated
	 */
	public Adapter createIN110CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN111CONTENT <em>IN111CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN111CONTENT
	 * @generated
	 */
	public Adapter createIN111CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN112CONTENT <em>IN112CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN112CONTENT
	 * @generated
	 */
	public Adapter createIN112CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN113CONTENT <em>IN113CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN113CONTENT
	 * @generated
	 */
	public Adapter createIN113CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN114CONTENT <em>IN114CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN114CONTENT
	 * @generated
	 */
	public Adapter createIN114CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN115CONTENT <em>IN115CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN115CONTENT
	 * @generated
	 */
	public Adapter createIN115CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN116CONTENT <em>IN116CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN116CONTENT
	 * @generated
	 */
	public Adapter createIN116CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN117CONTENT <em>IN117CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN117CONTENT
	 * @generated
	 */
	public Adapter createIN117CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN118CONTENT <em>IN118CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN118CONTENT
	 * @generated
	 */
	public Adapter createIN118CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN119CONTENT <em>IN119CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN119CONTENT
	 * @generated
	 */
	public Adapter createIN119CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN11CONTENT <em>IN11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN11CONTENT
	 * @generated
	 */
	public Adapter createIN11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN120CONTENT <em>IN120CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN120CONTENT
	 * @generated
	 */
	public Adapter createIN120CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN121CONTENT <em>IN121CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN121CONTENT
	 * @generated
	 */
	public Adapter createIN121CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN122CONTENT <em>IN122CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN122CONTENT
	 * @generated
	 */
	public Adapter createIN122CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN123CONTENT <em>IN123CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN123CONTENT
	 * @generated
	 */
	public Adapter createIN123CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN124CONTENT <em>IN124CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN124CONTENT
	 * @generated
	 */
	public Adapter createIN124CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN125CONTENT <em>IN125CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN125CONTENT
	 * @generated
	 */
	public Adapter createIN125CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN126CONTENT <em>IN126CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN126CONTENT
	 * @generated
	 */
	public Adapter createIN126CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN127CONTENT <em>IN127CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN127CONTENT
	 * @generated
	 */
	public Adapter createIN127CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN128CONTENT <em>IN128CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN128CONTENT
	 * @generated
	 */
	public Adapter createIN128CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN129CONTENT <em>IN129CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN129CONTENT
	 * @generated
	 */
	public Adapter createIN129CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN12CONTENT <em>IN12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN12CONTENT
	 * @generated
	 */
	public Adapter createIN12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN130CONTENT <em>IN130CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN130CONTENT
	 * @generated
	 */
	public Adapter createIN130CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN131CONTENT <em>IN131CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN131CONTENT
	 * @generated
	 */
	public Adapter createIN131CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN132CONTENT <em>IN132CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN132CONTENT
	 * @generated
	 */
	public Adapter createIN132CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN133CONTENT <em>IN133CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN133CONTENT
	 * @generated
	 */
	public Adapter createIN133CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN134CONTENT <em>IN134CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN134CONTENT
	 * @generated
	 */
	public Adapter createIN134CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN135CONTENT <em>IN135CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN135CONTENT
	 * @generated
	 */
	public Adapter createIN135CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN136CONTENT <em>IN136CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN136CONTENT
	 * @generated
	 */
	public Adapter createIN136CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN137CONTENT <em>IN137CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN137CONTENT
	 * @generated
	 */
	public Adapter createIN137CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN138CONTENT <em>IN138CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN138CONTENT
	 * @generated
	 */
	public Adapter createIN138CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN139CONTENT <em>IN139CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN139CONTENT
	 * @generated
	 */
	public Adapter createIN139CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN13CONTENT <em>IN13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN13CONTENT
	 * @generated
	 */
	public Adapter createIN13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN140CONTENT <em>IN140CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN140CONTENT
	 * @generated
	 */
	public Adapter createIN140CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN141CONTENT <em>IN141CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN141CONTENT
	 * @generated
	 */
	public Adapter createIN141CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN142CONTENT <em>IN142CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN142CONTENT
	 * @generated
	 */
	public Adapter createIN142CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN143CONTENT <em>IN143CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN143CONTENT
	 * @generated
	 */
	public Adapter createIN143CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN144CONTENT <em>IN144CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN144CONTENT
	 * @generated
	 */
	public Adapter createIN144CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN145CONTENT <em>IN145CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN145CONTENT
	 * @generated
	 */
	public Adapter createIN145CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN146CONTENT <em>IN146CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN146CONTENT
	 * @generated
	 */
	public Adapter createIN146CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN147CONTENT <em>IN147CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN147CONTENT
	 * @generated
	 */
	public Adapter createIN147CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN148CONTENT <em>IN148CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN148CONTENT
	 * @generated
	 */
	public Adapter createIN148CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN149CONTENT <em>IN149CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN149CONTENT
	 * @generated
	 */
	public Adapter createIN149CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN14CONTENT <em>IN14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN14CONTENT
	 * @generated
	 */
	public Adapter createIN14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN150CONTENT <em>IN150CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN150CONTENT
	 * @generated
	 */
	public Adapter createIN150CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN151CONTENT <em>IN151CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN151CONTENT
	 * @generated
	 */
	public Adapter createIN151CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN152CONTENT <em>IN152CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN152CONTENT
	 * @generated
	 */
	public Adapter createIN152CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN153CONTENT <em>IN153CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN153CONTENT
	 * @generated
	 */
	public Adapter createIN153CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN15CONTENT <em>IN15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN15CONTENT
	 * @generated
	 */
	public Adapter createIN15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN16CONTENT <em>IN16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN16CONTENT
	 * @generated
	 */
	public Adapter createIN16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN17CONTENT <em>IN17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN17CONTENT
	 * @generated
	 */
	public Adapter createIN17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN18CONTENT <em>IN18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN18CONTENT
	 * @generated
	 */
	public Adapter createIN18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN19CONTENT <em>IN19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN19CONTENT
	 * @generated
	 */
	public Adapter createIN19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN1CONTENT <em>IN1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN1CONTENT
	 * @generated
	 */
	public Adapter createIN1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN210CONTENT <em>IN210CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN210CONTENT
	 * @generated
	 */
	public Adapter createIN210CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN211CONTENT <em>IN211CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN211CONTENT
	 * @generated
	 */
	public Adapter createIN211CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN212CONTENT <em>IN212CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN212CONTENT
	 * @generated
	 */
	public Adapter createIN212CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN213CONTENT <em>IN213CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN213CONTENT
	 * @generated
	 */
	public Adapter createIN213CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN214CONTENT <em>IN214CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN214CONTENT
	 * @generated
	 */
	public Adapter createIN214CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN215CONTENT <em>IN215CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN215CONTENT
	 * @generated
	 */
	public Adapter createIN215CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN216CONTENT <em>IN216CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN216CONTENT
	 * @generated
	 */
	public Adapter createIN216CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN217CONTENT <em>IN217CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN217CONTENT
	 * @generated
	 */
	public Adapter createIN217CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN218CONTENT <em>IN218CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN218CONTENT
	 * @generated
	 */
	public Adapter createIN218CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN219CONTENT <em>IN219CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN219CONTENT
	 * @generated
	 */
	public Adapter createIN219CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN21CONTENT <em>IN21CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN21CONTENT
	 * @generated
	 */
	public Adapter createIN21CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN220CONTENT <em>IN220CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN220CONTENT
	 * @generated
	 */
	public Adapter createIN220CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN221CONTENT <em>IN221CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN221CONTENT
	 * @generated
	 */
	public Adapter createIN221CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN222CONTENT <em>IN222CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN222CONTENT
	 * @generated
	 */
	public Adapter createIN222CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN223CONTENT <em>IN223CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN223CONTENT
	 * @generated
	 */
	public Adapter createIN223CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN224CONTENT <em>IN224CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN224CONTENT
	 * @generated
	 */
	public Adapter createIN224CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN225CONTENT <em>IN225CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN225CONTENT
	 * @generated
	 */
	public Adapter createIN225CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN226CONTENT <em>IN226CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN226CONTENT
	 * @generated
	 */
	public Adapter createIN226CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN227CONTENT <em>IN227CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN227CONTENT
	 * @generated
	 */
	public Adapter createIN227CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN228CONTENT <em>IN228CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN228CONTENT
	 * @generated
	 */
	public Adapter createIN228CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN229CONTENT <em>IN229CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN229CONTENT
	 * @generated
	 */
	public Adapter createIN229CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN22CONTENT <em>IN22CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN22CONTENT
	 * @generated
	 */
	public Adapter createIN22CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN230CONTENT <em>IN230CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN230CONTENT
	 * @generated
	 */
	public Adapter createIN230CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN231CONTENT <em>IN231CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN231CONTENT
	 * @generated
	 */
	public Adapter createIN231CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN232CONTENT <em>IN232CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN232CONTENT
	 * @generated
	 */
	public Adapter createIN232CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN233CONTENT <em>IN233CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN233CONTENT
	 * @generated
	 */
	public Adapter createIN233CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN234CONTENT <em>IN234CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN234CONTENT
	 * @generated
	 */
	public Adapter createIN234CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN235CONTENT <em>IN235CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN235CONTENT
	 * @generated
	 */
	public Adapter createIN235CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN236CONTENT <em>IN236CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN236CONTENT
	 * @generated
	 */
	public Adapter createIN236CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN237CONTENT <em>IN237CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN237CONTENT
	 * @generated
	 */
	public Adapter createIN237CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN238CONTENT <em>IN238CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN238CONTENT
	 * @generated
	 */
	public Adapter createIN238CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN239CONTENT <em>IN239CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN239CONTENT
	 * @generated
	 */
	public Adapter createIN239CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN23CONTENT <em>IN23CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN23CONTENT
	 * @generated
	 */
	public Adapter createIN23CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN240CONTENT <em>IN240CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN240CONTENT
	 * @generated
	 */
	public Adapter createIN240CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN241CONTENT <em>IN241CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN241CONTENT
	 * @generated
	 */
	public Adapter createIN241CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN242CONTENT <em>IN242CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN242CONTENT
	 * @generated
	 */
	public Adapter createIN242CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN243CONTENT <em>IN243CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN243CONTENT
	 * @generated
	 */
	public Adapter createIN243CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN244CONTENT <em>IN244CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN244CONTENT
	 * @generated
	 */
	public Adapter createIN244CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN245CONTENT <em>IN245CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN245CONTENT
	 * @generated
	 */
	public Adapter createIN245CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN246CONTENT <em>IN246CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN246CONTENT
	 * @generated
	 */
	public Adapter createIN246CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN247CONTENT <em>IN247CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN247CONTENT
	 * @generated
	 */
	public Adapter createIN247CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN248CONTENT <em>IN248CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN248CONTENT
	 * @generated
	 */
	public Adapter createIN248CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN249CONTENT <em>IN249CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN249CONTENT
	 * @generated
	 */
	public Adapter createIN249CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN24CONTENT <em>IN24CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN24CONTENT
	 * @generated
	 */
	public Adapter createIN24CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN250CONTENT <em>IN250CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN250CONTENT
	 * @generated
	 */
	public Adapter createIN250CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN251CONTENT <em>IN251CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN251CONTENT
	 * @generated
	 */
	public Adapter createIN251CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN252CONTENT <em>IN252CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN252CONTENT
	 * @generated
	 */
	public Adapter createIN252CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN253CONTENT <em>IN253CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN253CONTENT
	 * @generated
	 */
	public Adapter createIN253CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN254CONTENT <em>IN254CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN254CONTENT
	 * @generated
	 */
	public Adapter createIN254CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN255CONTENT <em>IN255CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN255CONTENT
	 * @generated
	 */
	public Adapter createIN255CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN256CONTENT <em>IN256CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN256CONTENT
	 * @generated
	 */
	public Adapter createIN256CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN257CONTENT <em>IN257CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN257CONTENT
	 * @generated
	 */
	public Adapter createIN257CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN258CONTENT <em>IN258CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN258CONTENT
	 * @generated
	 */
	public Adapter createIN258CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN259CONTENT <em>IN259CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN259CONTENT
	 * @generated
	 */
	public Adapter createIN259CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN25CONTENT <em>IN25CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN25CONTENT
	 * @generated
	 */
	public Adapter createIN25CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN260CONTENT <em>IN260CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN260CONTENT
	 * @generated
	 */
	public Adapter createIN260CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN261CONTENT <em>IN261CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN261CONTENT
	 * @generated
	 */
	public Adapter createIN261CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN262CONTENT <em>IN262CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN262CONTENT
	 * @generated
	 */
	public Adapter createIN262CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN263CONTENT <em>IN263CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN263CONTENT
	 * @generated
	 */
	public Adapter createIN263CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN264CONTENT <em>IN264CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN264CONTENT
	 * @generated
	 */
	public Adapter createIN264CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN265CONTENT <em>IN265CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN265CONTENT
	 * @generated
	 */
	public Adapter createIN265CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN266CONTENT <em>IN266CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN266CONTENT
	 * @generated
	 */
	public Adapter createIN266CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN267CONTENT <em>IN267CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN267CONTENT
	 * @generated
	 */
	public Adapter createIN267CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN268CONTENT <em>IN268CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN268CONTENT
	 * @generated
	 */
	public Adapter createIN268CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN269CONTENT <em>IN269CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN269CONTENT
	 * @generated
	 */
	public Adapter createIN269CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN26CONTENT <em>IN26CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN26CONTENT
	 * @generated
	 */
	public Adapter createIN26CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN270CONTENT <em>IN270CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN270CONTENT
	 * @generated
	 */
	public Adapter createIN270CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN271CONTENT <em>IN271CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN271CONTENT
	 * @generated
	 */
	public Adapter createIN271CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN272CONTENT <em>IN272CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN272CONTENT
	 * @generated
	 */
	public Adapter createIN272CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN27CONTENT <em>IN27CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN27CONTENT
	 * @generated
	 */
	public Adapter createIN27CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN28CONTENT <em>IN28CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN28CONTENT
	 * @generated
	 */
	public Adapter createIN28CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN29CONTENT <em>IN29CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN29CONTENT
	 * @generated
	 */
	public Adapter createIN29CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN2CONTENT <em>IN2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN2CONTENT
	 * @generated
	 */
	public Adapter createIN2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN310CONTENT <em>IN310CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN310CONTENT
	 * @generated
	 */
	public Adapter createIN310CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN311CONTENT <em>IN311CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN311CONTENT
	 * @generated
	 */
	public Adapter createIN311CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN312CONTENT <em>IN312CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN312CONTENT
	 * @generated
	 */
	public Adapter createIN312CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN313CONTENT <em>IN313CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN313CONTENT
	 * @generated
	 */
	public Adapter createIN313CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN314CONTENT <em>IN314CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN314CONTENT
	 * @generated
	 */
	public Adapter createIN314CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN315CONTENT <em>IN315CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN315CONTENT
	 * @generated
	 */
	public Adapter createIN315CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN316CONTENT <em>IN316CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN316CONTENT
	 * @generated
	 */
	public Adapter createIN316CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN317CONTENT <em>IN317CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN317CONTENT
	 * @generated
	 */
	public Adapter createIN317CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN318CONTENT <em>IN318CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN318CONTENT
	 * @generated
	 */
	public Adapter createIN318CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN319CONTENT <em>IN319CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN319CONTENT
	 * @generated
	 */
	public Adapter createIN319CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN31CONTENT <em>IN31CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN31CONTENT
	 * @generated
	 */
	public Adapter createIN31CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN320CONTENT <em>IN320CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN320CONTENT
	 * @generated
	 */
	public Adapter createIN320CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN321CONTENT <em>IN321CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN321CONTENT
	 * @generated
	 */
	public Adapter createIN321CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN322CONTENT <em>IN322CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN322CONTENT
	 * @generated
	 */
	public Adapter createIN322CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN323CONTENT <em>IN323CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN323CONTENT
	 * @generated
	 */
	public Adapter createIN323CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN324CONTENT <em>IN324CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN324CONTENT
	 * @generated
	 */
	public Adapter createIN324CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN325CONTENT <em>IN325CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN325CONTENT
	 * @generated
	 */
	public Adapter createIN325CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN32CONTENT <em>IN32CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN32CONTENT
	 * @generated
	 */
	public Adapter createIN32CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN33CONTENT <em>IN33CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN33CONTENT
	 * @generated
	 */
	public Adapter createIN33CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN34CONTENT <em>IN34CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN34CONTENT
	 * @generated
	 */
	public Adapter createIN34CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN35CONTENT <em>IN35CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN35CONTENT
	 * @generated
	 */
	public Adapter createIN35CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN36CONTENT <em>IN36CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN36CONTENT
	 * @generated
	 */
	public Adapter createIN36CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN37CONTENT <em>IN37CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN37CONTENT
	 * @generated
	 */
	public Adapter createIN37CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN38CONTENT <em>IN38CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN38CONTENT
	 * @generated
	 */
	public Adapter createIN38CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN39CONTENT <em>IN39CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN39CONTENT
	 * @generated
	 */
	public Adapter createIN39CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IN3CONTENT <em>IN3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IN3CONTENT
	 * @generated
	 */
	public Adapter createIN3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.INV10CONTENT <em>INV10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.INV10CONTENT
	 * @generated
	 */
	public Adapter createINV10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.INV11CONTENT <em>INV11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.INV11CONTENT
	 * @generated
	 */
	public Adapter createINV11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.INV12CONTENT <em>INV12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.INV12CONTENT
	 * @generated
	 */
	public Adapter createINV12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.INV13CONTENT <em>INV13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.INV13CONTENT
	 * @generated
	 */
	public Adapter createINV13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.INV14CONTENT <em>INV14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.INV14CONTENT
	 * @generated
	 */
	public Adapter createINV14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.INV15CONTENT <em>INV15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.INV15CONTENT
	 * @generated
	 */
	public Adapter createINV15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.INV16CONTENT <em>INV16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.INV16CONTENT
	 * @generated
	 */
	public Adapter createINV16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.INV17CONTENT <em>INV17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.INV17CONTENT
	 * @generated
	 */
	public Adapter createINV17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.INV18CONTENT <em>INV18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.INV18CONTENT
	 * @generated
	 */
	public Adapter createINV18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.INV19CONTENT <em>INV19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.INV19CONTENT
	 * @generated
	 */
	public Adapter createINV19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.INV1CONTENT <em>INV1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.INV1CONTENT
	 * @generated
	 */
	public Adapter createINV1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.INV20CONTENT <em>INV20CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.INV20CONTENT
	 * @generated
	 */
	public Adapter createINV20CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.INV2CONTENT <em>INV2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.INV2CONTENT
	 * @generated
	 */
	public Adapter createINV2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.INV3CONTENT <em>INV3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.INV3CONTENT
	 * @generated
	 */
	public Adapter createINV3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.INV4CONTENT <em>INV4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.INV4CONTENT
	 * @generated
	 */
	public Adapter createINV4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.INV5CONTENT <em>INV5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.INV5CONTENT
	 * @generated
	 */
	public Adapter createINV5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.INV6CONTENT <em>INV6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.INV6CONTENT
	 * @generated
	 */
	public Adapter createINV6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.INV7CONTENT <em>INV7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.INV7CONTENT
	 * @generated
	 */
	public Adapter createINV7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.INV8CONTENT <em>INV8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.INV8CONTENT
	 * @generated
	 */
	public Adapter createINV8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.INV9CONTENT <em>INV9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.INV9CONTENT
	 * @generated
	 */
	public Adapter createINV9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.INVCONTENT <em>INVCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.INVCONTENT
	 * @generated
	 */
	public Adapter createINVCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IPC1CONTENT <em>IPC1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IPC1CONTENT
	 * @generated
	 */
	public Adapter createIPC1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IPC2CONTENT <em>IPC2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IPC2CONTENT
	 * @generated
	 */
	public Adapter createIPC2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IPC3CONTENT <em>IPC3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IPC3CONTENT
	 * @generated
	 */
	public Adapter createIPC3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IPC4CONTENT <em>IPC4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IPC4CONTENT
	 * @generated
	 */
	public Adapter createIPC4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IPC5CONTENT <em>IPC5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IPC5CONTENT
	 * @generated
	 */
	public Adapter createIPC5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IPC6CONTENT <em>IPC6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IPC6CONTENT
	 * @generated
	 */
	public Adapter createIPC6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IPC7CONTENT <em>IPC7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IPC7CONTENT
	 * @generated
	 */
	public Adapter createIPC7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IPC8CONTENT <em>IPC8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IPC8CONTENT
	 * @generated
	 */
	public Adapter createIPC8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IPC9CONTENT <em>IPC9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IPC9CONTENT
	 * @generated
	 */
	public Adapter createIPC9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.IPCCONTENT <em>IPCCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.IPCCONTENT
	 * @generated
	 */
	public Adapter createIPCCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ISD1CONTENT <em>ISD1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ISD1CONTENT
	 * @generated
	 */
	public Adapter createISD1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ISD2CONTENT <em>ISD2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ISD2CONTENT
	 * @generated
	 */
	public Adapter createISD2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ISD3CONTENT <em>ISD3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ISD3CONTENT
	 * @generated
	 */
	public Adapter createISD3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ISDCONTENT <em>ISDCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ISDCONTENT
	 * @generated
	 */
	public Adapter createISDCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.JCC <em>JCC</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.JCC
	 * @generated
	 */
	public Adapter createJCCAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.JCC1CONTENT <em>JCC1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.JCC1CONTENT
	 * @generated
	 */
	public Adapter createJCC1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.JCC2CONTENT <em>JCC2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.JCC2CONTENT
	 * @generated
	 */
	public Adapter createJCC2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.JCC3CONTENT <em>JCC3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.JCC3CONTENT
	 * @generated
	 */
	public Adapter createJCC3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LA1 <em>LA1</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LA1
	 * @generated
	 */
	public Adapter createLA1Adapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LA11CONTENT <em>LA11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LA11CONTENT
	 * @generated
	 */
	public Adapter createLA11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LA12CONTENT <em>LA12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LA12CONTENT
	 * @generated
	 */
	public Adapter createLA12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LA13CONTENT <em>LA13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LA13CONTENT
	 * @generated
	 */
	public Adapter createLA13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LA14CONTENT <em>LA14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LA14CONTENT
	 * @generated
	 */
	public Adapter createLA14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LA15CONTENT <em>LA15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LA15CONTENT
	 * @generated
	 */
	public Adapter createLA15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LA16CONTENT <em>LA16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LA16CONTENT
	 * @generated
	 */
	public Adapter createLA16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LA17CONTENT <em>LA17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LA17CONTENT
	 * @generated
	 */
	public Adapter createLA17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LA18CONTENT <em>LA18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LA18CONTENT
	 * @generated
	 */
	public Adapter createLA18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LA19CONTENT <em>LA19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LA19CONTENT
	 * @generated
	 */
	public Adapter createLA19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LA2 <em>LA2</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LA2
	 * @generated
	 */
	public Adapter createLA2Adapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LA210CONTENT <em>LA210CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LA210CONTENT
	 * @generated
	 */
	public Adapter createLA210CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LA211CONTENT <em>LA211CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LA211CONTENT
	 * @generated
	 */
	public Adapter createLA211CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LA212CONTENT <em>LA212CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LA212CONTENT
	 * @generated
	 */
	public Adapter createLA212CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LA213CONTENT <em>LA213CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LA213CONTENT
	 * @generated
	 */
	public Adapter createLA213CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LA214CONTENT <em>LA214CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LA214CONTENT
	 * @generated
	 */
	public Adapter createLA214CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LA215CONTENT <em>LA215CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LA215CONTENT
	 * @generated
	 */
	public Adapter createLA215CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LA216CONTENT <em>LA216CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LA216CONTENT
	 * @generated
	 */
	public Adapter createLA216CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LA21CONTENT <em>LA21CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LA21CONTENT
	 * @generated
	 */
	public Adapter createLA21CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LA22CONTENT <em>LA22CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LA22CONTENT
	 * @generated
	 */
	public Adapter createLA22CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LA23CONTENT <em>LA23CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LA23CONTENT
	 * @generated
	 */
	public Adapter createLA23CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LA24CONTENT <em>LA24CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LA24CONTENT
	 * @generated
	 */
	public Adapter createLA24CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LA25CONTENT <em>LA25CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LA25CONTENT
	 * @generated
	 */
	public Adapter createLA25CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LA26CONTENT <em>LA26CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LA26CONTENT
	 * @generated
	 */
	public Adapter createLA26CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LA27CONTENT <em>LA27CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LA27CONTENT
	 * @generated
	 */
	public Adapter createLA27CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LA28CONTENT <em>LA28CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LA28CONTENT
	 * @generated
	 */
	public Adapter createLA28CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LA29CONTENT <em>LA29CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LA29CONTENT
	 * @generated
	 */
	public Adapter createLA29CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LAN1CONTENT <em>LAN1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LAN1CONTENT
	 * @generated
	 */
	public Adapter createLAN1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LAN2CONTENT <em>LAN2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LAN2CONTENT
	 * @generated
	 */
	public Adapter createLAN2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LAN3CONTENT <em>LAN3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LAN3CONTENT
	 * @generated
	 */
	public Adapter createLAN3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LAN4CONTENT <em>LAN4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LAN4CONTENT
	 * @generated
	 */
	public Adapter createLAN4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LANCONTENT <em>LANCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LANCONTENT
	 * @generated
	 */
	public Adapter createLANCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LCC1CONTENT <em>LCC1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LCC1CONTENT
	 * @generated
	 */
	public Adapter createLCC1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LCC2CONTENT <em>LCC2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LCC2CONTENT
	 * @generated
	 */
	public Adapter createLCC2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LCC3CONTENT <em>LCC3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LCC3CONTENT
	 * @generated
	 */
	public Adapter createLCC3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LCC4CONTENT <em>LCC4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LCC4CONTENT
	 * @generated
	 */
	public Adapter createLCC4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LCCCONTENT <em>LCCCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LCCCONTENT
	 * @generated
	 */
	public Adapter createLCCCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LCH1CONTENT <em>LCH1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LCH1CONTENT
	 * @generated
	 */
	public Adapter createLCH1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LCH2CONTENT <em>LCH2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LCH2CONTENT
	 * @generated
	 */
	public Adapter createLCH2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LCH3CONTENT <em>LCH3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LCH3CONTENT
	 * @generated
	 */
	public Adapter createLCH3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LCH4CONTENT <em>LCH4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LCH4CONTENT
	 * @generated
	 */
	public Adapter createLCH4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LCH5CONTENT <em>LCH5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LCH5CONTENT
	 * @generated
	 */
	public Adapter createLCH5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LCHCONTENT <em>LCHCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LCHCONTENT
	 * @generated
	 */
	public Adapter createLCHCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LDP10CONTENT <em>LDP10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LDP10CONTENT
	 * @generated
	 */
	public Adapter createLDP10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LDP11CONTENT <em>LDP11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LDP11CONTENT
	 * @generated
	 */
	public Adapter createLDP11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LDP12CONTENT <em>LDP12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LDP12CONTENT
	 * @generated
	 */
	public Adapter createLDP12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LDP1CONTENT <em>LDP1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LDP1CONTENT
	 * @generated
	 */
	public Adapter createLDP1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LDP2CONTENT <em>LDP2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LDP2CONTENT
	 * @generated
	 */
	public Adapter createLDP2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LDP3CONTENT <em>LDP3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LDP3CONTENT
	 * @generated
	 */
	public Adapter createLDP3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LDP4CONTENT <em>LDP4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LDP4CONTENT
	 * @generated
	 */
	public Adapter createLDP4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LDP5CONTENT <em>LDP5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LDP5CONTENT
	 * @generated
	 */
	public Adapter createLDP5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LDP6CONTENT <em>LDP6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LDP6CONTENT
	 * @generated
	 */
	public Adapter createLDP6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LDP7CONTENT <em>LDP7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LDP7CONTENT
	 * @generated
	 */
	public Adapter createLDP7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LDP8CONTENT <em>LDP8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LDP8CONTENT
	 * @generated
	 */
	public Adapter createLDP8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LDP9CONTENT <em>LDP9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LDP9CONTENT
	 * @generated
	 */
	public Adapter createLDP9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LDPCONTENT <em>LDPCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LDPCONTENT
	 * @generated
	 */
	public Adapter createLDPCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LOC1CONTENT <em>LOC1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LOC1CONTENT
	 * @generated
	 */
	public Adapter createLOC1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LOC2CONTENT <em>LOC2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LOC2CONTENT
	 * @generated
	 */
	public Adapter createLOC2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LOC3CONTENT <em>LOC3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LOC3CONTENT
	 * @generated
	 */
	public Adapter createLOC3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LOC4CONTENT <em>LOC4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LOC4CONTENT
	 * @generated
	 */
	public Adapter createLOC4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LOC5CONTENT <em>LOC5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LOC5CONTENT
	 * @generated
	 */
	public Adapter createLOC5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LOC6CONTENT <em>LOC6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LOC6CONTENT
	 * @generated
	 */
	public Adapter createLOC6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LOC7CONTENT <em>LOC7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LOC7CONTENT
	 * @generated
	 */
	public Adapter createLOC7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LOC8CONTENT <em>LOC8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LOC8CONTENT
	 * @generated
	 */
	public Adapter createLOC8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LOC9CONTENT <em>LOC9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LOC9CONTENT
	 * @generated
	 */
	public Adapter createLOC9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LOCCONTENT <em>LOCCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LOCCONTENT
	 * @generated
	 */
	public Adapter createLOCCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LRL1CONTENT <em>LRL1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LRL1CONTENT
	 * @generated
	 */
	public Adapter createLRL1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LRL2CONTENT <em>LRL2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LRL2CONTENT
	 * @generated
	 */
	public Adapter createLRL2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LRL3CONTENT <em>LRL3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LRL3CONTENT
	 * @generated
	 */
	public Adapter createLRL3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LRL4CONTENT <em>LRL4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LRL4CONTENT
	 * @generated
	 */
	public Adapter createLRL4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LRL5CONTENT <em>LRL5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LRL5CONTENT
	 * @generated
	 */
	public Adapter createLRL5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LRL6CONTENT <em>LRL6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LRL6CONTENT
	 * @generated
	 */
	public Adapter createLRL6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.LRLCONTENT <em>LRLCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.LRLCONTENT
	 * @generated
	 */
	public Adapter createLRLCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MA <em>MA</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MA
	 * @generated
	 */
	public Adapter createMAAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MA1CONTENT <em>MA1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MA1CONTENT
	 * @generated
	 */
	public Adapter createMA1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MA2CONTENT <em>MA2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MA2CONTENT
	 * @generated
	 */
	public Adapter createMA2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MA3CONTENT <em>MA3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MA3CONTENT
	 * @generated
	 */
	public Adapter createMA3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MA4CONTENT <em>MA4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MA4CONTENT
	 * @generated
	 */
	public Adapter createMA4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MA5CONTENT <em>MA5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MA5CONTENT
	 * @generated
	 */
	public Adapter createMA5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MA6CONTENT <em>MA6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MA6CONTENT
	 * @generated
	 */
	public Adapter createMA6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MFA1CONTENT <em>MFA1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MFA1CONTENT
	 * @generated
	 */
	public Adapter createMFA1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MFA2CONTENT <em>MFA2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MFA2CONTENT
	 * @generated
	 */
	public Adapter createMFA2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MFA3CONTENT <em>MFA3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MFA3CONTENT
	 * @generated
	 */
	public Adapter createMFA3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MFA4CONTENT <em>MFA4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MFA4CONTENT
	 * @generated
	 */
	public Adapter createMFA4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MFA5CONTENT <em>MFA5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MFA5CONTENT
	 * @generated
	 */
	public Adapter createMFA5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MFA6CONTENT <em>MFA6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MFA6CONTENT
	 * @generated
	 */
	public Adapter createMFA6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MFACONTENT <em>MFACONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MFACONTENT
	 * @generated
	 */
	public Adapter createMFACONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MFE1CONTENT <em>MFE1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MFE1CONTENT
	 * @generated
	 */
	public Adapter createMFE1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MFE2CONTENT <em>MFE2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MFE2CONTENT
	 * @generated
	 */
	public Adapter createMFE2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MFE3CONTENT <em>MFE3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MFE3CONTENT
	 * @generated
	 */
	public Adapter createMFE3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MFE4CONTENT <em>MFE4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MFE4CONTENT
	 * @generated
	 */
	public Adapter createMFE4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MFE5CONTENT <em>MFE5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MFE5CONTENT
	 * @generated
	 */
	public Adapter createMFE5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MFECONTENT <em>MFECONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MFECONTENT
	 * @generated
	 */
	public Adapter createMFECONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MFI1CONTENT <em>MFI1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MFI1CONTENT
	 * @generated
	 */
	public Adapter createMFI1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MFI2CONTENT <em>MFI2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MFI2CONTENT
	 * @generated
	 */
	public Adapter createMFI2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MFI3CONTENT <em>MFI3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MFI3CONTENT
	 * @generated
	 */
	public Adapter createMFI3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MFI4CONTENT <em>MFI4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MFI4CONTENT
	 * @generated
	 */
	public Adapter createMFI4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MFI5CONTENT <em>MFI5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MFI5CONTENT
	 * @generated
	 */
	public Adapter createMFI5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MFI6CONTENT <em>MFI6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MFI6CONTENT
	 * @generated
	 */
	public Adapter createMFI6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MFICONTENT <em>MFICONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MFICONTENT
	 * @generated
	 */
	public Adapter createMFICONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MO <em>MO</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MO
	 * @generated
	 */
	public Adapter createMOAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MO1CONTENT <em>MO1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MO1CONTENT
	 * @generated
	 */
	public Adapter createMO1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MO2CONTENT <em>MO2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MO2CONTENT
	 * @generated
	 */
	public Adapter createMO2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MOC <em>MOC</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MOC
	 * @generated
	 */
	public Adapter createMOCAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MOC1CONTENT <em>MOC1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MOC1CONTENT
	 * @generated
	 */
	public Adapter createMOC1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MOC2CONTENT <em>MOC2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MOC2CONTENT
	 * @generated
	 */
	public Adapter createMOC2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MOP <em>MOP</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MOP
	 * @generated
	 */
	public Adapter createMOPAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MOP1CONTENT <em>MOP1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MOP1CONTENT
	 * @generated
	 */
	public Adapter createMOP1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MOP2CONTENT <em>MOP2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MOP2CONTENT
	 * @generated
	 */
	public Adapter createMOP2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MOP3CONTENT <em>MOP3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MOP3CONTENT
	 * @generated
	 */
	public Adapter createMOP3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MRG1CONTENT <em>MRG1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MRG1CONTENT
	 * @generated
	 */
	public Adapter createMRG1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MRG2CONTENT <em>MRG2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MRG2CONTENT
	 * @generated
	 */
	public Adapter createMRG2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MRG3CONTENT <em>MRG3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MRG3CONTENT
	 * @generated
	 */
	public Adapter createMRG3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MRG4CONTENT <em>MRG4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MRG4CONTENT
	 * @generated
	 */
	public Adapter createMRG4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MRG5CONTENT <em>MRG5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MRG5CONTENT
	 * @generated
	 */
	public Adapter createMRG5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MRG6CONTENT <em>MRG6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MRG6CONTENT
	 * @generated
	 */
	public Adapter createMRG6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MRG7CONTENT <em>MRG7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MRG7CONTENT
	 * @generated
	 */
	public Adapter createMRG7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MRGCONTENT <em>MRGCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MRGCONTENT
	 * @generated
	 */
	public Adapter createMRGCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MSA1CONTENT <em>MSA1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MSA1CONTENT
	 * @generated
	 */
	public Adapter createMSA1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MSA2CONTENT <em>MSA2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MSA2CONTENT
	 * @generated
	 */
	public Adapter createMSA2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MSA3CONTENT <em>MSA3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MSA3CONTENT
	 * @generated
	 */
	public Adapter createMSA3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MSA4CONTENT <em>MSA4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MSA4CONTENT
	 * @generated
	 */
	public Adapter createMSA4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MSA5CONTENT <em>MSA5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MSA5CONTENT
	 * @generated
	 */
	public Adapter createMSA5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MSA6CONTENT <em>MSA6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MSA6CONTENT
	 * @generated
	 */
	public Adapter createMSA6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MSACONTENT <em>MSACONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MSACONTENT
	 * @generated
	 */
	public Adapter createMSACONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MSG <em>MSG</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MSG
	 * @generated
	 */
	public Adapter createMSGAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MSG1CONTENT <em>MSG1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MSG1CONTENT
	 * @generated
	 */
	public Adapter createMSG1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MSG2CONTENT <em>MSG2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MSG2CONTENT
	 * @generated
	 */
	public Adapter createMSG2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MSG3CONTENT <em>MSG3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MSG3CONTENT
	 * @generated
	 */
	public Adapter createMSG3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MSH10CONTENT <em>MSH10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MSH10CONTENT
	 * @generated
	 */
	public Adapter createMSH10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MSH11CONTENT <em>MSH11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MSH11CONTENT
	 * @generated
	 */
	public Adapter createMSH11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MSH12CONTENT <em>MSH12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MSH12CONTENT
	 * @generated
	 */
	public Adapter createMSH12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MSH13CONTENT <em>MSH13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MSH13CONTENT
	 * @generated
	 */
	public Adapter createMSH13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MSH14CONTENT <em>MSH14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MSH14CONTENT
	 * @generated
	 */
	public Adapter createMSH14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MSH15CONTENT <em>MSH15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MSH15CONTENT
	 * @generated
	 */
	public Adapter createMSH15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MSH16CONTENT <em>MSH16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MSH16CONTENT
	 * @generated
	 */
	public Adapter createMSH16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MSH17CONTENT <em>MSH17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MSH17CONTENT
	 * @generated
	 */
	public Adapter createMSH17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MSH18CONTENT <em>MSH18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MSH18CONTENT
	 * @generated
	 */
	public Adapter createMSH18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MSH19CONTENT <em>MSH19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MSH19CONTENT
	 * @generated
	 */
	public Adapter createMSH19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MSH1CONTENT <em>MSH1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MSH1CONTENT
	 * @generated
	 */
	public Adapter createMSH1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MSH20CONTENT <em>MSH20CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MSH20CONTENT
	 * @generated
	 */
	public Adapter createMSH20CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MSH21CONTENT <em>MSH21CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MSH21CONTENT
	 * @generated
	 */
	public Adapter createMSH21CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MSH2CONTENT <em>MSH2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MSH2CONTENT
	 * @generated
	 */
	public Adapter createMSH2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MSH3CONTENT <em>MSH3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MSH3CONTENT
	 * @generated
	 */
	public Adapter createMSH3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MSH4CONTENT <em>MSH4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MSH4CONTENT
	 * @generated
	 */
	public Adapter createMSH4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MSH5CONTENT <em>MSH5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MSH5CONTENT
	 * @generated
	 */
	public Adapter createMSH5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MSH6CONTENT <em>MSH6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MSH6CONTENT
	 * @generated
	 */
	public Adapter createMSH6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MSH7CONTENT <em>MSH7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MSH7CONTENT
	 * @generated
	 */
	public Adapter createMSH7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MSH8CONTENT <em>MSH8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MSH8CONTENT
	 * @generated
	 */
	public Adapter createMSH8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MSH9CONTENT <em>MSH9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MSH9CONTENT
	 * @generated
	 */
	public Adapter createMSH9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.MSHCONTENT <em>MSHCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.MSHCONTENT
	 * @generated
	 */
	public Adapter createMSHCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NA <em>NA</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NA
	 * @generated
	 */
	public Adapter createNAAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NA1CONTENT <em>NA1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NA1CONTENT
	 * @generated
	 */
	public Adapter createNA1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NA2CONTENT <em>NA2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NA2CONTENT
	 * @generated
	 */
	public Adapter createNA2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NA3CONTENT <em>NA3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NA3CONTENT
	 * @generated
	 */
	public Adapter createNA3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NA4CONTENT <em>NA4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NA4CONTENT
	 * @generated
	 */
	public Adapter createNA4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NCK1CONTENT <em>NCK1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NCK1CONTENT
	 * @generated
	 */
	public Adapter createNCK1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NCKCONTENT <em>NCKCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NCKCONTENT
	 * @generated
	 */
	public Adapter createNCKCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NDL <em>NDL</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NDL
	 * @generated
	 */
	public Adapter createNDLAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NDL10CONTENT <em>NDL10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NDL10CONTENT
	 * @generated
	 */
	public Adapter createNDL10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NDL11CONTENT <em>NDL11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NDL11CONTENT
	 * @generated
	 */
	public Adapter createNDL11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NDL1CONTENT <em>NDL1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NDL1CONTENT
	 * @generated
	 */
	public Adapter createNDL1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NDL2CONTENT <em>NDL2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NDL2CONTENT
	 * @generated
	 */
	public Adapter createNDL2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NDL3CONTENT <em>NDL3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NDL3CONTENT
	 * @generated
	 */
	public Adapter createNDL3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NDL4CONTENT <em>NDL4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NDL4CONTENT
	 * @generated
	 */
	public Adapter createNDL4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NDL5CONTENT <em>NDL5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NDL5CONTENT
	 * @generated
	 */
	public Adapter createNDL5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NDL6CONTENT <em>NDL6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NDL6CONTENT
	 * @generated
	 */
	public Adapter createNDL6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NDL7CONTENT <em>NDL7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NDL7CONTENT
	 * @generated
	 */
	public Adapter createNDL7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NDL8CONTENT <em>NDL8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NDL8CONTENT
	 * @generated
	 */
	public Adapter createNDL8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NDL9CONTENT <em>NDL9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NDL9CONTENT
	 * @generated
	 */
	public Adapter createNDL9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NDS1CONTENT <em>NDS1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NDS1CONTENT
	 * @generated
	 */
	public Adapter createNDS1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NDS2CONTENT <em>NDS2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NDS2CONTENT
	 * @generated
	 */
	public Adapter createNDS2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NDS3CONTENT <em>NDS3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NDS3CONTENT
	 * @generated
	 */
	public Adapter createNDS3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NDS4CONTENT <em>NDS4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NDS4CONTENT
	 * @generated
	 */
	public Adapter createNDS4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NDSCONTENT <em>NDSCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NDSCONTENT
	 * @generated
	 */
	public Adapter createNDSCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK110CONTENT <em>NK110CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK110CONTENT
	 * @generated
	 */
	public Adapter createNK110CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK111CONTENT <em>NK111CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK111CONTENT
	 * @generated
	 */
	public Adapter createNK111CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK112CONTENT <em>NK112CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK112CONTENT
	 * @generated
	 */
	public Adapter createNK112CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK113CONTENT <em>NK113CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK113CONTENT
	 * @generated
	 */
	public Adapter createNK113CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK114CONTENT <em>NK114CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK114CONTENT
	 * @generated
	 */
	public Adapter createNK114CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK115CONTENT <em>NK115CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK115CONTENT
	 * @generated
	 */
	public Adapter createNK115CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK116CONTENT <em>NK116CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK116CONTENT
	 * @generated
	 */
	public Adapter createNK116CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK117CONTENT <em>NK117CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK117CONTENT
	 * @generated
	 */
	public Adapter createNK117CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK118CONTENT <em>NK118CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK118CONTENT
	 * @generated
	 */
	public Adapter createNK118CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK119CONTENT <em>NK119CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK119CONTENT
	 * @generated
	 */
	public Adapter createNK119CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK11CONTENT <em>NK11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK11CONTENT
	 * @generated
	 */
	public Adapter createNK11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK120CONTENT <em>NK120CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK120CONTENT
	 * @generated
	 */
	public Adapter createNK120CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK121CONTENT <em>NK121CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK121CONTENT
	 * @generated
	 */
	public Adapter createNK121CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK122CONTENT <em>NK122CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK122CONTENT
	 * @generated
	 */
	public Adapter createNK122CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK123CONTENT <em>NK123CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK123CONTENT
	 * @generated
	 */
	public Adapter createNK123CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK124CONTENT <em>NK124CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK124CONTENT
	 * @generated
	 */
	public Adapter createNK124CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK125CONTENT <em>NK125CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK125CONTENT
	 * @generated
	 */
	public Adapter createNK125CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK126CONTENT <em>NK126CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK126CONTENT
	 * @generated
	 */
	public Adapter createNK126CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK127CONTENT <em>NK127CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK127CONTENT
	 * @generated
	 */
	public Adapter createNK127CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK128CONTENT <em>NK128CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK128CONTENT
	 * @generated
	 */
	public Adapter createNK128CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK129CONTENT <em>NK129CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK129CONTENT
	 * @generated
	 */
	public Adapter createNK129CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK12CONTENT <em>NK12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK12CONTENT
	 * @generated
	 */
	public Adapter createNK12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK130CONTENT <em>NK130CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK130CONTENT
	 * @generated
	 */
	public Adapter createNK130CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK131CONTENT <em>NK131CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK131CONTENT
	 * @generated
	 */
	public Adapter createNK131CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK132CONTENT <em>NK132CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK132CONTENT
	 * @generated
	 */
	public Adapter createNK132CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK133CONTENT <em>NK133CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK133CONTENT
	 * @generated
	 */
	public Adapter createNK133CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK134CONTENT <em>NK134CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK134CONTENT
	 * @generated
	 */
	public Adapter createNK134CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK135CONTENT <em>NK135CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK135CONTENT
	 * @generated
	 */
	public Adapter createNK135CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK136CONTENT <em>NK136CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK136CONTENT
	 * @generated
	 */
	public Adapter createNK136CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK137CONTENT <em>NK137CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK137CONTENT
	 * @generated
	 */
	public Adapter createNK137CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK138CONTENT <em>NK138CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK138CONTENT
	 * @generated
	 */
	public Adapter createNK138CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK139CONTENT <em>NK139CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK139CONTENT
	 * @generated
	 */
	public Adapter createNK139CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK13CONTENT <em>NK13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK13CONTENT
	 * @generated
	 */
	public Adapter createNK13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK14CONTENT <em>NK14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK14CONTENT
	 * @generated
	 */
	public Adapter createNK14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK15CONTENT <em>NK15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK15CONTENT
	 * @generated
	 */
	public Adapter createNK15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK16CONTENT <em>NK16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK16CONTENT
	 * @generated
	 */
	public Adapter createNK16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK17CONTENT <em>NK17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK17CONTENT
	 * @generated
	 */
	public Adapter createNK17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK18CONTENT <em>NK18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK18CONTENT
	 * @generated
	 */
	public Adapter createNK18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK19CONTENT <em>NK19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK19CONTENT
	 * @generated
	 */
	public Adapter createNK19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NK1CONTENT <em>NK1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NK1CONTENT
	 * @generated
	 */
	public Adapter createNK1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NPU1CONTENT <em>NPU1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NPU1CONTENT
	 * @generated
	 */
	public Adapter createNPU1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NPU2CONTENT <em>NPU2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NPU2CONTENT
	 * @generated
	 */
	public Adapter createNPU2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NPUCONTENT <em>NPUCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NPUCONTENT
	 * @generated
	 */
	public Adapter createNPUCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NR <em>NR</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NR
	 * @generated
	 */
	public Adapter createNRAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NR1CONTENT <em>NR1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NR1CONTENT
	 * @generated
	 */
	public Adapter createNR1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NR2CONTENT <em>NR2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NR2CONTENT
	 * @generated
	 */
	public Adapter createNR2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NSC1CONTENT <em>NSC1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NSC1CONTENT
	 * @generated
	 */
	public Adapter createNSC1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NSC2CONTENT <em>NSC2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NSC2CONTENT
	 * @generated
	 */
	public Adapter createNSC2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NSC3CONTENT <em>NSC3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NSC3CONTENT
	 * @generated
	 */
	public Adapter createNSC3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NSC4CONTENT <em>NSC4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NSC4CONTENT
	 * @generated
	 */
	public Adapter createNSC4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NSC5CONTENT <em>NSC5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NSC5CONTENT
	 * @generated
	 */
	public Adapter createNSC5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NSC6CONTENT <em>NSC6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NSC6CONTENT
	 * @generated
	 */
	public Adapter createNSC6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NSC7CONTENT <em>NSC7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NSC7CONTENT
	 * @generated
	 */
	public Adapter createNSC7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NSC8CONTENT <em>NSC8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NSC8CONTENT
	 * @generated
	 */
	public Adapter createNSC8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NSC9CONTENT <em>NSC9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NSC9CONTENT
	 * @generated
	 */
	public Adapter createNSC9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NSCCONTENT <em>NSCCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NSCCONTENT
	 * @generated
	 */
	public Adapter createNSCCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NST10CONTENT <em>NST10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NST10CONTENT
	 * @generated
	 */
	public Adapter createNST10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NST11CONTENT <em>NST11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NST11CONTENT
	 * @generated
	 */
	public Adapter createNST11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NST12CONTENT <em>NST12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NST12CONTENT
	 * @generated
	 */
	public Adapter createNST12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NST13CONTENT <em>NST13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NST13CONTENT
	 * @generated
	 */
	public Adapter createNST13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NST14CONTENT <em>NST14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NST14CONTENT
	 * @generated
	 */
	public Adapter createNST14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NST15CONTENT <em>NST15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NST15CONTENT
	 * @generated
	 */
	public Adapter createNST15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NST1CONTENT <em>NST1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NST1CONTENT
	 * @generated
	 */
	public Adapter createNST1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NST2CONTENT <em>NST2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NST2CONTENT
	 * @generated
	 */
	public Adapter createNST2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NST3CONTENT <em>NST3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NST3CONTENT
	 * @generated
	 */
	public Adapter createNST3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NST4CONTENT <em>NST4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NST4CONTENT
	 * @generated
	 */
	public Adapter createNST4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NST5CONTENT <em>NST5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NST5CONTENT
	 * @generated
	 */
	public Adapter createNST5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NST6CONTENT <em>NST6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NST6CONTENT
	 * @generated
	 */
	public Adapter createNST6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NST7CONTENT <em>NST7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NST7CONTENT
	 * @generated
	 */
	public Adapter createNST7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NST8CONTENT <em>NST8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NST8CONTENT
	 * @generated
	 */
	public Adapter createNST8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NST9CONTENT <em>NST9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NST9CONTENT
	 * @generated
	 */
	public Adapter createNST9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NSTCONTENT <em>NSTCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NSTCONTENT
	 * @generated
	 */
	public Adapter createNSTCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NTE1CONTENT <em>NTE1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NTE1CONTENT
	 * @generated
	 */
	public Adapter createNTE1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NTE2CONTENT <em>NTE2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NTE2CONTENT
	 * @generated
	 */
	public Adapter createNTE2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NTE3CONTENT <em>NTE3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NTE3CONTENT
	 * @generated
	 */
	public Adapter createNTE3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NTE4CONTENT <em>NTE4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NTE4CONTENT
	 * @generated
	 */
	public Adapter createNTE4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.NTECONTENT <em>NTECONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.NTECONTENT
	 * @generated
	 */
	public Adapter createNTECONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR10CONTENT <em>OBR10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR10CONTENT
	 * @generated
	 */
	public Adapter createOBR10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR11CONTENT <em>OBR11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR11CONTENT
	 * @generated
	 */
	public Adapter createOBR11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR12CONTENT <em>OBR12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR12CONTENT
	 * @generated
	 */
	public Adapter createOBR12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR13CONTENT <em>OBR13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR13CONTENT
	 * @generated
	 */
	public Adapter createOBR13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR14CONTENT <em>OBR14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR14CONTENT
	 * @generated
	 */
	public Adapter createOBR14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR15CONTENT <em>OBR15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR15CONTENT
	 * @generated
	 */
	public Adapter createOBR15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR16CONTENT <em>OBR16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR16CONTENT
	 * @generated
	 */
	public Adapter createOBR16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR17CONTENT <em>OBR17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR17CONTENT
	 * @generated
	 */
	public Adapter createOBR17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR18CONTENT <em>OBR18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR18CONTENT
	 * @generated
	 */
	public Adapter createOBR18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR19CONTENT <em>OBR19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR19CONTENT
	 * @generated
	 */
	public Adapter createOBR19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR1CONTENT <em>OBR1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR1CONTENT
	 * @generated
	 */
	public Adapter createOBR1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR20CONTENT <em>OBR20CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR20CONTENT
	 * @generated
	 */
	public Adapter createOBR20CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR21CONTENT <em>OBR21CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR21CONTENT
	 * @generated
	 */
	public Adapter createOBR21CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR22CONTENT <em>OBR22CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR22CONTENT
	 * @generated
	 */
	public Adapter createOBR22CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR23CONTENT <em>OBR23CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR23CONTENT
	 * @generated
	 */
	public Adapter createOBR23CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR24CONTENT <em>OBR24CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR24CONTENT
	 * @generated
	 */
	public Adapter createOBR24CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR25CONTENT <em>OBR25CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR25CONTENT
	 * @generated
	 */
	public Adapter createOBR25CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR26CONTENT <em>OBR26CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR26CONTENT
	 * @generated
	 */
	public Adapter createOBR26CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR27CONTENT <em>OBR27CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR27CONTENT
	 * @generated
	 */
	public Adapter createOBR27CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR28CONTENT <em>OBR28CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR28CONTENT
	 * @generated
	 */
	public Adapter createOBR28CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR29CONTENT <em>OBR29CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR29CONTENT
	 * @generated
	 */
	public Adapter createOBR29CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR2CONTENT <em>OBR2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR2CONTENT
	 * @generated
	 */
	public Adapter createOBR2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR30CONTENT <em>OBR30CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR30CONTENT
	 * @generated
	 */
	public Adapter createOBR30CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR31CONTENT <em>OBR31CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR31CONTENT
	 * @generated
	 */
	public Adapter createOBR31CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR32CONTENT <em>OBR32CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR32CONTENT
	 * @generated
	 */
	public Adapter createOBR32CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR33CONTENT <em>OBR33CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR33CONTENT
	 * @generated
	 */
	public Adapter createOBR33CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR34CONTENT <em>OBR34CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR34CONTENT
	 * @generated
	 */
	public Adapter createOBR34CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR35CONTENT <em>OBR35CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR35CONTENT
	 * @generated
	 */
	public Adapter createOBR35CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR36CONTENT <em>OBR36CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR36CONTENT
	 * @generated
	 */
	public Adapter createOBR36CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR37CONTENT <em>OBR37CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR37CONTENT
	 * @generated
	 */
	public Adapter createOBR37CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR38CONTENT <em>OBR38CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR38CONTENT
	 * @generated
	 */
	public Adapter createOBR38CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR39CONTENT <em>OBR39CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR39CONTENT
	 * @generated
	 */
	public Adapter createOBR39CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR3CONTENT <em>OBR3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR3CONTENT
	 * @generated
	 */
	public Adapter createOBR3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR40CONTENT <em>OBR40CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR40CONTENT
	 * @generated
	 */
	public Adapter createOBR40CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR41CONTENT <em>OBR41CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR41CONTENT
	 * @generated
	 */
	public Adapter createOBR41CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR42CONTENT <em>OBR42CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR42CONTENT
	 * @generated
	 */
	public Adapter createOBR42CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR43CONTENT <em>OBR43CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR43CONTENT
	 * @generated
	 */
	public Adapter createOBR43CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR44CONTENT <em>OBR44CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR44CONTENT
	 * @generated
	 */
	public Adapter createOBR44CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR45CONTENT <em>OBR45CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR45CONTENT
	 * @generated
	 */
	public Adapter createOBR45CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR46CONTENT <em>OBR46CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR46CONTENT
	 * @generated
	 */
	public Adapter createOBR46CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR47CONTENT <em>OBR47CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR47CONTENT
	 * @generated
	 */
	public Adapter createOBR47CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR48CONTENT <em>OBR48CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR48CONTENT
	 * @generated
	 */
	public Adapter createOBR48CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR49CONTENT <em>OBR49CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR49CONTENT
	 * @generated
	 */
	public Adapter createOBR49CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR4CONTENT <em>OBR4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR4CONTENT
	 * @generated
	 */
	public Adapter createOBR4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR5CONTENT <em>OBR5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR5CONTENT
	 * @generated
	 */
	public Adapter createOBR5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR6CONTENT <em>OBR6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR6CONTENT
	 * @generated
	 */
	public Adapter createOBR6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR7CONTENT <em>OBR7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR7CONTENT
	 * @generated
	 */
	public Adapter createOBR7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR8CONTENT <em>OBR8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR8CONTENT
	 * @generated
	 */
	public Adapter createOBR8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBR9CONTENT <em>OBR9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBR9CONTENT
	 * @generated
	 */
	public Adapter createOBR9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBRCONTENT <em>OBRCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBRCONTENT
	 * @generated
	 */
	public Adapter createOBRCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBX10CONTENT <em>OBX10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBX10CONTENT
	 * @generated
	 */
	public Adapter createOBX10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBX11CONTENT <em>OBX11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBX11CONTENT
	 * @generated
	 */
	public Adapter createOBX11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBX12CONTENT <em>OBX12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBX12CONTENT
	 * @generated
	 */
	public Adapter createOBX12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBX13CONTENT <em>OBX13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBX13CONTENT
	 * @generated
	 */
	public Adapter createOBX13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBX14CONTENT <em>OBX14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBX14CONTENT
	 * @generated
	 */
	public Adapter createOBX14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBX15CONTENT <em>OBX15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBX15CONTENT
	 * @generated
	 */
	public Adapter createOBX15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBX16CONTENT <em>OBX16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBX16CONTENT
	 * @generated
	 */
	public Adapter createOBX16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBX17CONTENT <em>OBX17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBX17CONTENT
	 * @generated
	 */
	public Adapter createOBX17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBX18CONTENT <em>OBX18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBX18CONTENT
	 * @generated
	 */
	public Adapter createOBX18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBX19CONTENT <em>OBX19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBX19CONTENT
	 * @generated
	 */
	public Adapter createOBX19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBX1CONTENT <em>OBX1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBX1CONTENT
	 * @generated
	 */
	public Adapter createOBX1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBX2CONTENT <em>OBX2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBX2CONTENT
	 * @generated
	 */
	public Adapter createOBX2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBX3CONTENT <em>OBX3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBX3CONTENT
	 * @generated
	 */
	public Adapter createOBX3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBX4CONTENT <em>OBX4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBX4CONTENT
	 * @generated
	 */
	public Adapter createOBX4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBX5CONTENT <em>OBX5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBX5CONTENT
	 * @generated
	 */
	public Adapter createOBX5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBX6CONTENT <em>OBX6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBX6CONTENT
	 * @generated
	 */
	public Adapter createOBX6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBX7CONTENT <em>OBX7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBX7CONTENT
	 * @generated
	 */
	public Adapter createOBX7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBX8CONTENT <em>OBX8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBX8CONTENT
	 * @generated
	 */
	public Adapter createOBX8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBX9CONTENT <em>OBX9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBX9CONTENT
	 * @generated
	 */
	public Adapter createOBX9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OBXCONTENT <em>OBXCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OBXCONTENT
	 * @generated
	 */
	public Adapter createOBXCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OCD <em>OCD</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OCD
	 * @generated
	 */
	public Adapter createOCDAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OCD1CONTENT <em>OCD1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OCD1CONTENT
	 * @generated
	 */
	public Adapter createOCD1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OCD2CONTENT <em>OCD2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OCD2CONTENT
	 * @generated
	 */
	public Adapter createOCD2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ODS1CONTENT <em>ODS1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ODS1CONTENT
	 * @generated
	 */
	public Adapter createODS1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ODS2CONTENT <em>ODS2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ODS2CONTENT
	 * @generated
	 */
	public Adapter createODS2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ODS3CONTENT <em>ODS3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ODS3CONTENT
	 * @generated
	 */
	public Adapter createODS3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ODS4CONTENT <em>ODS4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ODS4CONTENT
	 * @generated
	 */
	public Adapter createODS4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ODSCONTENT <em>ODSCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ODSCONTENT
	 * @generated
	 */
	public Adapter createODSCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ODT1CONTENT <em>ODT1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ODT1CONTENT
	 * @generated
	 */
	public Adapter createODT1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ODT2CONTENT <em>ODT2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ODT2CONTENT
	 * @generated
	 */
	public Adapter createODT2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ODT3CONTENT <em>ODT3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ODT3CONTENT
	 * @generated
	 */
	public Adapter createODT3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ODTCONTENT <em>ODTCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ODTCONTENT
	 * @generated
	 */
	public Adapter createODTCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM110CONTENT <em>OM110CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM110CONTENT
	 * @generated
	 */
	public Adapter createOM110CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM111CONTENT <em>OM111CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM111CONTENT
	 * @generated
	 */
	public Adapter createOM111CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM112CONTENT <em>OM112CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM112CONTENT
	 * @generated
	 */
	public Adapter createOM112CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM113CONTENT <em>OM113CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM113CONTENT
	 * @generated
	 */
	public Adapter createOM113CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM114CONTENT <em>OM114CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM114CONTENT
	 * @generated
	 */
	public Adapter createOM114CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM115CONTENT <em>OM115CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM115CONTENT
	 * @generated
	 */
	public Adapter createOM115CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM116CONTENT <em>OM116CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM116CONTENT
	 * @generated
	 */
	public Adapter createOM116CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM117CONTENT <em>OM117CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM117CONTENT
	 * @generated
	 */
	public Adapter createOM117CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM118CONTENT <em>OM118CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM118CONTENT
	 * @generated
	 */
	public Adapter createOM118CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM119CONTENT <em>OM119CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM119CONTENT
	 * @generated
	 */
	public Adapter createOM119CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM11CONTENT <em>OM11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM11CONTENT
	 * @generated
	 */
	public Adapter createOM11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM120CONTENT <em>OM120CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM120CONTENT
	 * @generated
	 */
	public Adapter createOM120CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM121CONTENT <em>OM121CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM121CONTENT
	 * @generated
	 */
	public Adapter createOM121CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM122CONTENT <em>OM122CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM122CONTENT
	 * @generated
	 */
	public Adapter createOM122CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM123CONTENT <em>OM123CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM123CONTENT
	 * @generated
	 */
	public Adapter createOM123CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM124CONTENT <em>OM124CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM124CONTENT
	 * @generated
	 */
	public Adapter createOM124CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM125CONTENT <em>OM125CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM125CONTENT
	 * @generated
	 */
	public Adapter createOM125CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM126CONTENT <em>OM126CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM126CONTENT
	 * @generated
	 */
	public Adapter createOM126CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM127CONTENT <em>OM127CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM127CONTENT
	 * @generated
	 */
	public Adapter createOM127CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM128CONTENT <em>OM128CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM128CONTENT
	 * @generated
	 */
	public Adapter createOM128CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM129CONTENT <em>OM129CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM129CONTENT
	 * @generated
	 */
	public Adapter createOM129CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM12CONTENT <em>OM12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM12CONTENT
	 * @generated
	 */
	public Adapter createOM12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM130CONTENT <em>OM130CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM130CONTENT
	 * @generated
	 */
	public Adapter createOM130CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM131CONTENT <em>OM131CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM131CONTENT
	 * @generated
	 */
	public Adapter createOM131CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM132CONTENT <em>OM132CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM132CONTENT
	 * @generated
	 */
	public Adapter createOM132CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM133CONTENT <em>OM133CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM133CONTENT
	 * @generated
	 */
	public Adapter createOM133CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM134CONTENT <em>OM134CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM134CONTENT
	 * @generated
	 */
	public Adapter createOM134CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM135CONTENT <em>OM135CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM135CONTENT
	 * @generated
	 */
	public Adapter createOM135CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM136CONTENT <em>OM136CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM136CONTENT
	 * @generated
	 */
	public Adapter createOM136CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM137CONTENT <em>OM137CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM137CONTENT
	 * @generated
	 */
	public Adapter createOM137CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM138CONTENT <em>OM138CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM138CONTENT
	 * @generated
	 */
	public Adapter createOM138CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM139CONTENT <em>OM139CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM139CONTENT
	 * @generated
	 */
	public Adapter createOM139CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM13CONTENT <em>OM13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM13CONTENT
	 * @generated
	 */
	public Adapter createOM13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM140CONTENT <em>OM140CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM140CONTENT
	 * @generated
	 */
	public Adapter createOM140CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM141CONTENT <em>OM141CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM141CONTENT
	 * @generated
	 */
	public Adapter createOM141CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM142CONTENT <em>OM142CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM142CONTENT
	 * @generated
	 */
	public Adapter createOM142CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM143CONTENT <em>OM143CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM143CONTENT
	 * @generated
	 */
	public Adapter createOM143CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM144CONTENT <em>OM144CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM144CONTENT
	 * @generated
	 */
	public Adapter createOM144CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM145CONTENT <em>OM145CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM145CONTENT
	 * @generated
	 */
	public Adapter createOM145CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM146CONTENT <em>OM146CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM146CONTENT
	 * @generated
	 */
	public Adapter createOM146CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM147CONTENT <em>OM147CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM147CONTENT
	 * @generated
	 */
	public Adapter createOM147CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM14CONTENT <em>OM14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM14CONTENT
	 * @generated
	 */
	public Adapter createOM14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM15CONTENT <em>OM15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM15CONTENT
	 * @generated
	 */
	public Adapter createOM15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM16CONTENT <em>OM16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM16CONTENT
	 * @generated
	 */
	public Adapter createOM16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM17CONTENT <em>OM17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM17CONTENT
	 * @generated
	 */
	public Adapter createOM17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM18CONTENT <em>OM18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM18CONTENT
	 * @generated
	 */
	public Adapter createOM18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM19CONTENT <em>OM19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM19CONTENT
	 * @generated
	 */
	public Adapter createOM19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM1CONTENT <em>OM1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM1CONTENT
	 * @generated
	 */
	public Adapter createOM1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM210CONTENT <em>OM210CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM210CONTENT
	 * @generated
	 */
	public Adapter createOM210CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM21CONTENT <em>OM21CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM21CONTENT
	 * @generated
	 */
	public Adapter createOM21CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM22CONTENT <em>OM22CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM22CONTENT
	 * @generated
	 */
	public Adapter createOM22CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM23CONTENT <em>OM23CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM23CONTENT
	 * @generated
	 */
	public Adapter createOM23CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM24CONTENT <em>OM24CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM24CONTENT
	 * @generated
	 */
	public Adapter createOM24CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM25CONTENT <em>OM25CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM25CONTENT
	 * @generated
	 */
	public Adapter createOM25CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM26CONTENT <em>OM26CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM26CONTENT
	 * @generated
	 */
	public Adapter createOM26CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM27CONTENT <em>OM27CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM27CONTENT
	 * @generated
	 */
	public Adapter createOM27CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM28CONTENT <em>OM28CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM28CONTENT
	 * @generated
	 */
	public Adapter createOM28CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM29CONTENT <em>OM29CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM29CONTENT
	 * @generated
	 */
	public Adapter createOM29CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM2CONTENT <em>OM2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM2CONTENT
	 * @generated
	 */
	public Adapter createOM2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM31CONTENT <em>OM31CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM31CONTENT
	 * @generated
	 */
	public Adapter createOM31CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM32CONTENT <em>OM32CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM32CONTENT
	 * @generated
	 */
	public Adapter createOM32CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM33CONTENT <em>OM33CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM33CONTENT
	 * @generated
	 */
	public Adapter createOM33CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM34CONTENT <em>OM34CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM34CONTENT
	 * @generated
	 */
	public Adapter createOM34CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM35CONTENT <em>OM35CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM35CONTENT
	 * @generated
	 */
	public Adapter createOM35CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM36CONTENT <em>OM36CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM36CONTENT
	 * @generated
	 */
	public Adapter createOM36CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM37CONTENT <em>OM37CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM37CONTENT
	 * @generated
	 */
	public Adapter createOM37CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM3CONTENT <em>OM3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM3CONTENT
	 * @generated
	 */
	public Adapter createOM3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM410CONTENT <em>OM410CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM410CONTENT
	 * @generated
	 */
	public Adapter createOM410CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM411CONTENT <em>OM411CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM411CONTENT
	 * @generated
	 */
	public Adapter createOM411CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM412CONTENT <em>OM412CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM412CONTENT
	 * @generated
	 */
	public Adapter createOM412CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM413CONTENT <em>OM413CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM413CONTENT
	 * @generated
	 */
	public Adapter createOM413CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM414CONTENT <em>OM414CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM414CONTENT
	 * @generated
	 */
	public Adapter createOM414CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM41CONTENT <em>OM41CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM41CONTENT
	 * @generated
	 */
	public Adapter createOM41CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM42CONTENT <em>OM42CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM42CONTENT
	 * @generated
	 */
	public Adapter createOM42CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM43CONTENT <em>OM43CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM43CONTENT
	 * @generated
	 */
	public Adapter createOM43CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM44CONTENT <em>OM44CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM44CONTENT
	 * @generated
	 */
	public Adapter createOM44CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM45CONTENT <em>OM45CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM45CONTENT
	 * @generated
	 */
	public Adapter createOM45CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM46CONTENT <em>OM46CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM46CONTENT
	 * @generated
	 */
	public Adapter createOM46CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM47CONTENT <em>OM47CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM47CONTENT
	 * @generated
	 */
	public Adapter createOM47CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM48CONTENT <em>OM48CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM48CONTENT
	 * @generated
	 */
	public Adapter createOM48CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM49CONTENT <em>OM49CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM49CONTENT
	 * @generated
	 */
	public Adapter createOM49CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM4CONTENT <em>OM4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM4CONTENT
	 * @generated
	 */
	public Adapter createOM4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM51CONTENT <em>OM51CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM51CONTENT
	 * @generated
	 */
	public Adapter createOM51CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM52CONTENT <em>OM52CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM52CONTENT
	 * @generated
	 */
	public Adapter createOM52CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM53CONTENT <em>OM53CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM53CONTENT
	 * @generated
	 */
	public Adapter createOM53CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM5CONTENT <em>OM5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM5CONTENT
	 * @generated
	 */
	public Adapter createOM5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM61CONTENT <em>OM61CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM61CONTENT
	 * @generated
	 */
	public Adapter createOM61CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM62CONTENT <em>OM62CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM62CONTENT
	 * @generated
	 */
	public Adapter createOM62CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM6CONTENT <em>OM6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM6CONTENT
	 * @generated
	 */
	public Adapter createOM6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM710CONTENT <em>OM710CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM710CONTENT
	 * @generated
	 */
	public Adapter createOM710CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM711CONTENT <em>OM711CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM711CONTENT
	 * @generated
	 */
	public Adapter createOM711CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM712CONTENT <em>OM712CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM712CONTENT
	 * @generated
	 */
	public Adapter createOM712CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM713CONTENT <em>OM713CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM713CONTENT
	 * @generated
	 */
	public Adapter createOM713CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM714CONTENT <em>OM714CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM714CONTENT
	 * @generated
	 */
	public Adapter createOM714CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM715CONTENT <em>OM715CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM715CONTENT
	 * @generated
	 */
	public Adapter createOM715CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM716CONTENT <em>OM716CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM716CONTENT
	 * @generated
	 */
	public Adapter createOM716CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM717CONTENT <em>OM717CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM717CONTENT
	 * @generated
	 */
	public Adapter createOM717CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM718CONTENT <em>OM718CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM718CONTENT
	 * @generated
	 */
	public Adapter createOM718CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM719CONTENT <em>OM719CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM719CONTENT
	 * @generated
	 */
	public Adapter createOM719CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM71CONTENT <em>OM71CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM71CONTENT
	 * @generated
	 */
	public Adapter createOM71CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM720CONTENT <em>OM720CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM720CONTENT
	 * @generated
	 */
	public Adapter createOM720CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM721CONTENT <em>OM721CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM721CONTENT
	 * @generated
	 */
	public Adapter createOM721CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM722CONTENT <em>OM722CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM722CONTENT
	 * @generated
	 */
	public Adapter createOM722CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM723CONTENT <em>OM723CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM723CONTENT
	 * @generated
	 */
	public Adapter createOM723CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM724CONTENT <em>OM724CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM724CONTENT
	 * @generated
	 */
	public Adapter createOM724CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM72CONTENT <em>OM72CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM72CONTENT
	 * @generated
	 */
	public Adapter createOM72CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM73CONTENT <em>OM73CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM73CONTENT
	 * @generated
	 */
	public Adapter createOM73CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM74CONTENT <em>OM74CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM74CONTENT
	 * @generated
	 */
	public Adapter createOM74CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM75CONTENT <em>OM75CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM75CONTENT
	 * @generated
	 */
	public Adapter createOM75CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM76CONTENT <em>OM76CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM76CONTENT
	 * @generated
	 */
	public Adapter createOM76CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM77CONTENT <em>OM77CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM77CONTENT
	 * @generated
	 */
	public Adapter createOM77CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM78CONTENT <em>OM78CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM78CONTENT
	 * @generated
	 */
	public Adapter createOM78CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM79CONTENT <em>OM79CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM79CONTENT
	 * @generated
	 */
	public Adapter createOM79CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OM7CONTENT <em>OM7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OM7CONTENT
	 * @generated
	 */
	public Adapter createOM7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORC10CONTENT <em>ORC10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORC10CONTENT
	 * @generated
	 */
	public Adapter createORC10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORC11CONTENT <em>ORC11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORC11CONTENT
	 * @generated
	 */
	public Adapter createORC11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORC12CONTENT <em>ORC12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORC12CONTENT
	 * @generated
	 */
	public Adapter createORC12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORC13CONTENT <em>ORC13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORC13CONTENT
	 * @generated
	 */
	public Adapter createORC13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORC14CONTENT <em>ORC14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORC14CONTENT
	 * @generated
	 */
	public Adapter createORC14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORC15CONTENT <em>ORC15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORC15CONTENT
	 * @generated
	 */
	public Adapter createORC15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORC16CONTENT <em>ORC16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORC16CONTENT
	 * @generated
	 */
	public Adapter createORC16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORC17CONTENT <em>ORC17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORC17CONTENT
	 * @generated
	 */
	public Adapter createORC17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORC18CONTENT <em>ORC18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORC18CONTENT
	 * @generated
	 */
	public Adapter createORC18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORC19CONTENT <em>ORC19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORC19CONTENT
	 * @generated
	 */
	public Adapter createORC19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORC1CONTENT <em>ORC1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORC1CONTENT
	 * @generated
	 */
	public Adapter createORC1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORC20CONTENT <em>ORC20CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORC20CONTENT
	 * @generated
	 */
	public Adapter createORC20CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORC21CONTENT <em>ORC21CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORC21CONTENT
	 * @generated
	 */
	public Adapter createORC21CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORC22CONTENT <em>ORC22CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORC22CONTENT
	 * @generated
	 */
	public Adapter createORC22CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORC23CONTENT <em>ORC23CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORC23CONTENT
	 * @generated
	 */
	public Adapter createORC23CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORC24CONTENT <em>ORC24CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORC24CONTENT
	 * @generated
	 */
	public Adapter createORC24CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORC25CONTENT <em>ORC25CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORC25CONTENT
	 * @generated
	 */
	public Adapter createORC25CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORC26CONTENT <em>ORC26CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORC26CONTENT
	 * @generated
	 */
	public Adapter createORC26CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORC27CONTENT <em>ORC27CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORC27CONTENT
	 * @generated
	 */
	public Adapter createORC27CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORC28CONTENT <em>ORC28CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORC28CONTENT
	 * @generated
	 */
	public Adapter createORC28CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORC29CONTENT <em>ORC29CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORC29CONTENT
	 * @generated
	 */
	public Adapter createORC29CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORC2CONTENT <em>ORC2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORC2CONTENT
	 * @generated
	 */
	public Adapter createORC2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORC30CONTENT <em>ORC30CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORC30CONTENT
	 * @generated
	 */
	public Adapter createORC30CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORC3CONTENT <em>ORC3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORC3CONTENT
	 * @generated
	 */
	public Adapter createORC3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORC4CONTENT <em>ORC4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORC4CONTENT
	 * @generated
	 */
	public Adapter createORC4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORC5CONTENT <em>ORC5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORC5CONTENT
	 * @generated
	 */
	public Adapter createORC5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORC6CONTENT <em>ORC6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORC6CONTENT
	 * @generated
	 */
	public Adapter createORC6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORC7CONTENT <em>ORC7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORC7CONTENT
	 * @generated
	 */
	public Adapter createORC7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORC8CONTENT <em>ORC8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORC8CONTENT
	 * @generated
	 */
	public Adapter createORC8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORC9CONTENT <em>ORC9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORC9CONTENT
	 * @generated
	 */
	public Adapter createORC9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORCCONTENT <em>ORCCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORCCONTENT
	 * @generated
	 */
	public Adapter createORCCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORG10CONTENT <em>ORG10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORG10CONTENT
	 * @generated
	 */
	public Adapter createORG10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORG11CONTENT <em>ORG11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORG11CONTENT
	 * @generated
	 */
	public Adapter createORG11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORG12CONTENT <em>ORG12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORG12CONTENT
	 * @generated
	 */
	public Adapter createORG12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORG1CONTENT <em>ORG1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORG1CONTENT
	 * @generated
	 */
	public Adapter createORG1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORG2CONTENT <em>ORG2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORG2CONTENT
	 * @generated
	 */
	public Adapter createORG2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORG3CONTENT <em>ORG3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORG3CONTENT
	 * @generated
	 */
	public Adapter createORG3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORG4CONTENT <em>ORG4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORG4CONTENT
	 * @generated
	 */
	public Adapter createORG4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORG5CONTENT <em>ORG5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORG5CONTENT
	 * @generated
	 */
	public Adapter createORG5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORG6CONTENT <em>ORG6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORG6CONTENT
	 * @generated
	 */
	public Adapter createORG6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORG7CONTENT <em>ORG7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORG7CONTENT
	 * @generated
	 */
	public Adapter createORG7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORG8CONTENT <em>ORG8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORG8CONTENT
	 * @generated
	 */
	public Adapter createORG8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORG9CONTENT <em>ORG9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORG9CONTENT
	 * @generated
	 */
	public Adapter createORG9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ORGCONTENT <em>ORGCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ORGCONTENT
	 * @generated
	 */
	public Adapter createORGCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OSD <em>OSD</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OSD
	 * @generated
	 */
	public Adapter createOSDAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OSD10CONTENT <em>OSD10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OSD10CONTENT
	 * @generated
	 */
	public Adapter createOSD10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OSD11CONTENT <em>OSD11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OSD11CONTENT
	 * @generated
	 */
	public Adapter createOSD11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OSD1CONTENT <em>OSD1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OSD1CONTENT
	 * @generated
	 */
	public Adapter createOSD1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OSD2CONTENT <em>OSD2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OSD2CONTENT
	 * @generated
	 */
	public Adapter createOSD2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OSD3CONTENT <em>OSD3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OSD3CONTENT
	 * @generated
	 */
	public Adapter createOSD3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OSD4CONTENT <em>OSD4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OSD4CONTENT
	 * @generated
	 */
	public Adapter createOSD4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OSD5CONTENT <em>OSD5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OSD5CONTENT
	 * @generated
	 */
	public Adapter createOSD5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OSD6CONTENT <em>OSD6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OSD6CONTENT
	 * @generated
	 */
	public Adapter createOSD6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OSD7CONTENT <em>OSD7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OSD7CONTENT
	 * @generated
	 */
	public Adapter createOSD7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OSD8CONTENT <em>OSD8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OSD8CONTENT
	 * @generated
	 */
	public Adapter createOSD8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OSD9CONTENT <em>OSD9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OSD9CONTENT
	 * @generated
	 */
	public Adapter createOSD9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OSP <em>OSP</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OSP
	 * @generated
	 */
	public Adapter createOSPAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OSP1CONTENT <em>OSP1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OSP1CONTENT
	 * @generated
	 */
	public Adapter createOSP1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OSP2CONTENT <em>OSP2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OSP2CONTENT
	 * @generated
	 */
	public Adapter createOSP2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OSP3CONTENT <em>OSP3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OSP3CONTENT
	 * @generated
	 */
	public Adapter createOSP3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OVR1CONTENT <em>OVR1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OVR1CONTENT
	 * @generated
	 */
	public Adapter createOVR1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OVR2CONTENT <em>OVR2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OVR2CONTENT
	 * @generated
	 */
	public Adapter createOVR2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OVR3CONTENT <em>OVR3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OVR3CONTENT
	 * @generated
	 */
	public Adapter createOVR3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OVR4CONTENT <em>OVR4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OVR4CONTENT
	 * @generated
	 */
	public Adapter createOVR4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OVR5CONTENT <em>OVR5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OVR5CONTENT
	 * @generated
	 */
	public Adapter createOVR5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.OVRCONTENT <em>OVRCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.OVRCONTENT
	 * @generated
	 */
	public Adapter createOVRCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PCR10CONTENT <em>PCR10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PCR10CONTENT
	 * @generated
	 */
	public Adapter createPCR10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PCR11CONTENT <em>PCR11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PCR11CONTENT
	 * @generated
	 */
	public Adapter createPCR11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PCR12CONTENT <em>PCR12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PCR12CONTENT
	 * @generated
	 */
	public Adapter createPCR12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PCR13CONTENT <em>PCR13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PCR13CONTENT
	 * @generated
	 */
	public Adapter createPCR13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PCR14CONTENT <em>PCR14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PCR14CONTENT
	 * @generated
	 */
	public Adapter createPCR14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PCR15CONTENT <em>PCR15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PCR15CONTENT
	 * @generated
	 */
	public Adapter createPCR15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PCR16CONTENT <em>PCR16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PCR16CONTENT
	 * @generated
	 */
	public Adapter createPCR16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PCR17CONTENT <em>PCR17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PCR17CONTENT
	 * @generated
	 */
	public Adapter createPCR17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PCR18CONTENT <em>PCR18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PCR18CONTENT
	 * @generated
	 */
	public Adapter createPCR18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PCR19CONTENT <em>PCR19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PCR19CONTENT
	 * @generated
	 */
	public Adapter createPCR19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PCR1CONTENT <em>PCR1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PCR1CONTENT
	 * @generated
	 */
	public Adapter createPCR1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PCR20CONTENT <em>PCR20CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PCR20CONTENT
	 * @generated
	 */
	public Adapter createPCR20CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PCR21CONTENT <em>PCR21CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PCR21CONTENT
	 * @generated
	 */
	public Adapter createPCR21CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PCR22CONTENT <em>PCR22CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PCR22CONTENT
	 * @generated
	 */
	public Adapter createPCR22CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PCR23CONTENT <em>PCR23CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PCR23CONTENT
	 * @generated
	 */
	public Adapter createPCR23CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PCR2CONTENT <em>PCR2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PCR2CONTENT
	 * @generated
	 */
	public Adapter createPCR2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PCR3CONTENT <em>PCR3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PCR3CONTENT
	 * @generated
	 */
	public Adapter createPCR3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PCR4CONTENT <em>PCR4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PCR4CONTENT
	 * @generated
	 */
	public Adapter createPCR4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PCR5CONTENT <em>PCR5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PCR5CONTENT
	 * @generated
	 */
	public Adapter createPCR5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PCR6CONTENT <em>PCR6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PCR6CONTENT
	 * @generated
	 */
	public Adapter createPCR6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PCR7CONTENT <em>PCR7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PCR7CONTENT
	 * @generated
	 */
	public Adapter createPCR7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PCR8CONTENT <em>PCR8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PCR8CONTENT
	 * @generated
	 */
	public Adapter createPCR8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PCR9CONTENT <em>PCR9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PCR9CONTENT
	 * @generated
	 */
	public Adapter createPCR9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PCRCONTENT <em>PCRCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PCRCONTENT
	 * @generated
	 */
	public Adapter createPCRCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PD110CONTENT <em>PD110CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PD110CONTENT
	 * @generated
	 */
	public Adapter createPD110CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PD111CONTENT <em>PD111CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PD111CONTENT
	 * @generated
	 */
	public Adapter createPD111CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PD112CONTENT <em>PD112CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PD112CONTENT
	 * @generated
	 */
	public Adapter createPD112CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PD113CONTENT <em>PD113CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PD113CONTENT
	 * @generated
	 */
	public Adapter createPD113CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PD114CONTENT <em>PD114CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PD114CONTENT
	 * @generated
	 */
	public Adapter createPD114CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PD115CONTENT <em>PD115CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PD115CONTENT
	 * @generated
	 */
	public Adapter createPD115CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PD116CONTENT <em>PD116CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PD116CONTENT
	 * @generated
	 */
	public Adapter createPD116CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PD117CONTENT <em>PD117CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PD117CONTENT
	 * @generated
	 */
	public Adapter createPD117CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PD118CONTENT <em>PD118CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PD118CONTENT
	 * @generated
	 */
	public Adapter createPD118CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PD119CONTENT <em>PD119CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PD119CONTENT
	 * @generated
	 */
	public Adapter createPD119CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PD11CONTENT <em>PD11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PD11CONTENT
	 * @generated
	 */
	public Adapter createPD11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PD120CONTENT <em>PD120CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PD120CONTENT
	 * @generated
	 */
	public Adapter createPD120CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PD121CONTENT <em>PD121CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PD121CONTENT
	 * @generated
	 */
	public Adapter createPD121CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PD12CONTENT <em>PD12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PD12CONTENT
	 * @generated
	 */
	public Adapter createPD12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PD13CONTENT <em>PD13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PD13CONTENT
	 * @generated
	 */
	public Adapter createPD13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PD14CONTENT <em>PD14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PD14CONTENT
	 * @generated
	 */
	public Adapter createPD14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PD15CONTENT <em>PD15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PD15CONTENT
	 * @generated
	 */
	public Adapter createPD15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PD16CONTENT <em>PD16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PD16CONTENT
	 * @generated
	 */
	public Adapter createPD16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PD17CONTENT <em>PD17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PD17CONTENT
	 * @generated
	 */
	public Adapter createPD17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PD18CONTENT <em>PD18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PD18CONTENT
	 * @generated
	 */
	public Adapter createPD18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PD19CONTENT <em>PD19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PD19CONTENT
	 * @generated
	 */
	public Adapter createPD19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PD1CONTENT <em>PD1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PD1CONTENT
	 * @generated
	 */
	public Adapter createPD1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PDA1CONTENT <em>PDA1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PDA1CONTENT
	 * @generated
	 */
	public Adapter createPDA1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PDA2CONTENT <em>PDA2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PDA2CONTENT
	 * @generated
	 */
	public Adapter createPDA2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PDA3CONTENT <em>PDA3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PDA3CONTENT
	 * @generated
	 */
	public Adapter createPDA3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PDA4CONTENT <em>PDA4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PDA4CONTENT
	 * @generated
	 */
	public Adapter createPDA4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PDA5CONTENT <em>PDA5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PDA5CONTENT
	 * @generated
	 */
	public Adapter createPDA5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PDA6CONTENT <em>PDA6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PDA6CONTENT
	 * @generated
	 */
	public Adapter createPDA6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PDA7CONTENT <em>PDA7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PDA7CONTENT
	 * @generated
	 */
	public Adapter createPDA7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PDA8CONTENT <em>PDA8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PDA8CONTENT
	 * @generated
	 */
	public Adapter createPDA8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PDA9CONTENT <em>PDA9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PDA9CONTENT
	 * @generated
	 */
	public Adapter createPDA9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PDACONTENT <em>PDACONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PDACONTENT
	 * @generated
	 */
	public Adapter createPDACONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PDC10CONTENT <em>PDC10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PDC10CONTENT
	 * @generated
	 */
	public Adapter createPDC10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PDC11CONTENT <em>PDC11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PDC11CONTENT
	 * @generated
	 */
	public Adapter createPDC11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PDC12CONTENT <em>PDC12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PDC12CONTENT
	 * @generated
	 */
	public Adapter createPDC12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PDC13CONTENT <em>PDC13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PDC13CONTENT
	 * @generated
	 */
	public Adapter createPDC13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PDC14CONTENT <em>PDC14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PDC14CONTENT
	 * @generated
	 */
	public Adapter createPDC14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PDC15CONTENT <em>PDC15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PDC15CONTENT
	 * @generated
	 */
	public Adapter createPDC15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PDC1CONTENT <em>PDC1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PDC1CONTENT
	 * @generated
	 */
	public Adapter createPDC1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PDC2CONTENT <em>PDC2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PDC2CONTENT
	 * @generated
	 */
	public Adapter createPDC2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PDC3CONTENT <em>PDC3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PDC3CONTENT
	 * @generated
	 */
	public Adapter createPDC3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PDC4CONTENT <em>PDC4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PDC4CONTENT
	 * @generated
	 */
	public Adapter createPDC4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PDC5CONTENT <em>PDC5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PDC5CONTENT
	 * @generated
	 */
	public Adapter createPDC5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PDC6CONTENT <em>PDC6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PDC6CONTENT
	 * @generated
	 */
	public Adapter createPDC6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PDC7CONTENT <em>PDC7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PDC7CONTENT
	 * @generated
	 */
	public Adapter createPDC7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PDC8CONTENT <em>PDC8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PDC8CONTENT
	 * @generated
	 */
	public Adapter createPDC8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PDC9CONTENT <em>PDC9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PDC9CONTENT
	 * @generated
	 */
	public Adapter createPDC9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PDCCONTENT <em>PDCCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PDCCONTENT
	 * @generated
	 */
	public Adapter createPDCCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PEO10CONTENT <em>PEO10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PEO10CONTENT
	 * @generated
	 */
	public Adapter createPEO10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PEO11CONTENT <em>PEO11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PEO11CONTENT
	 * @generated
	 */
	public Adapter createPEO11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PEO12CONTENT <em>PEO12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PEO12CONTENT
	 * @generated
	 */
	public Adapter createPEO12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PEO13CONTENT <em>PEO13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PEO13CONTENT
	 * @generated
	 */
	public Adapter createPEO13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PEO14CONTENT <em>PEO14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PEO14CONTENT
	 * @generated
	 */
	public Adapter createPEO14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PEO15CONTENT <em>PEO15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PEO15CONTENT
	 * @generated
	 */
	public Adapter createPEO15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PEO16CONTENT <em>PEO16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PEO16CONTENT
	 * @generated
	 */
	public Adapter createPEO16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PEO17CONTENT <em>PEO17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PEO17CONTENT
	 * @generated
	 */
	public Adapter createPEO17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PEO18CONTENT <em>PEO18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PEO18CONTENT
	 * @generated
	 */
	public Adapter createPEO18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PEO19CONTENT <em>PEO19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PEO19CONTENT
	 * @generated
	 */
	public Adapter createPEO19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PEO1CONTENT <em>PEO1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PEO1CONTENT
	 * @generated
	 */
	public Adapter createPEO1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PEO20CONTENT <em>PEO20CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PEO20CONTENT
	 * @generated
	 */
	public Adapter createPEO20CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PEO21CONTENT <em>PEO21CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PEO21CONTENT
	 * @generated
	 */
	public Adapter createPEO21CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PEO22CONTENT <em>PEO22CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PEO22CONTENT
	 * @generated
	 */
	public Adapter createPEO22CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PEO23CONTENT <em>PEO23CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PEO23CONTENT
	 * @generated
	 */
	public Adapter createPEO23CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PEO24CONTENT <em>PEO24CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PEO24CONTENT
	 * @generated
	 */
	public Adapter createPEO24CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PEO25CONTENT <em>PEO25CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PEO25CONTENT
	 * @generated
	 */
	public Adapter createPEO25CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PEO2CONTENT <em>PEO2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PEO2CONTENT
	 * @generated
	 */
	public Adapter createPEO2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PEO3CONTENT <em>PEO3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PEO3CONTENT
	 * @generated
	 */
	public Adapter createPEO3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PEO4CONTENT <em>PEO4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PEO4CONTENT
	 * @generated
	 */
	public Adapter createPEO4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PEO5CONTENT <em>PEO5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PEO5CONTENT
	 * @generated
	 */
	public Adapter createPEO5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PEO6CONTENT <em>PEO6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PEO6CONTENT
	 * @generated
	 */
	public Adapter createPEO6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PEO7CONTENT <em>PEO7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PEO7CONTENT
	 * @generated
	 */
	public Adapter createPEO7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PEO8CONTENT <em>PEO8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PEO8CONTENT
	 * @generated
	 */
	public Adapter createPEO8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PEO9CONTENT <em>PEO9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PEO9CONTENT
	 * @generated
	 */
	public Adapter createPEO9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PEOCONTENT <em>PEOCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PEOCONTENT
	 * @generated
	 */
	public Adapter createPEOCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PES10CONTENT <em>PES10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PES10CONTENT
	 * @generated
	 */
	public Adapter createPES10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PES11CONTENT <em>PES11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PES11CONTENT
	 * @generated
	 */
	public Adapter createPES11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PES12CONTENT <em>PES12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PES12CONTENT
	 * @generated
	 */
	public Adapter createPES12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PES13CONTENT <em>PES13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PES13CONTENT
	 * @generated
	 */
	public Adapter createPES13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PES1CONTENT <em>PES1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PES1CONTENT
	 * @generated
	 */
	public Adapter createPES1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PES2CONTENT <em>PES2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PES2CONTENT
	 * @generated
	 */
	public Adapter createPES2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PES3CONTENT <em>PES3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PES3CONTENT
	 * @generated
	 */
	public Adapter createPES3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PES4CONTENT <em>PES4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PES4CONTENT
	 * @generated
	 */
	public Adapter createPES4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PES5CONTENT <em>PES5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PES5CONTENT
	 * @generated
	 */
	public Adapter createPES5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PES6CONTENT <em>PES6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PES6CONTENT
	 * @generated
	 */
	public Adapter createPES6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PES7CONTENT <em>PES7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PES7CONTENT
	 * @generated
	 */
	public Adapter createPES7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PES8CONTENT <em>PES8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PES8CONTENT
	 * @generated
	 */
	public Adapter createPES8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PES9CONTENT <em>PES9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PES9CONTENT
	 * @generated
	 */
	public Adapter createPES9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PESCONTENT <em>PESCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PESCONTENT
	 * @generated
	 */
	public Adapter createPESCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID10CONTENT <em>PID10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID10CONTENT
	 * @generated
	 */
	public Adapter createPID10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID11CONTENT <em>PID11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID11CONTENT
	 * @generated
	 */
	public Adapter createPID11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID12CONTENT <em>PID12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID12CONTENT
	 * @generated
	 */
	public Adapter createPID12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID13CONTENT <em>PID13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID13CONTENT
	 * @generated
	 */
	public Adapter createPID13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID14CONTENT <em>PID14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID14CONTENT
	 * @generated
	 */
	public Adapter createPID14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID15CONTENT <em>PID15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID15CONTENT
	 * @generated
	 */
	public Adapter createPID15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID16CONTENT <em>PID16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID16CONTENT
	 * @generated
	 */
	public Adapter createPID16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID17CONTENT <em>PID17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID17CONTENT
	 * @generated
	 */
	public Adapter createPID17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID18CONTENT <em>PID18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID18CONTENT
	 * @generated
	 */
	public Adapter createPID18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID19CONTENT <em>PID19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID19CONTENT
	 * @generated
	 */
	public Adapter createPID19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID1CONTENT <em>PID1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID1CONTENT
	 * @generated
	 */
	public Adapter createPID1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID20CONTENT <em>PID20CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID20CONTENT
	 * @generated
	 */
	public Adapter createPID20CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID21CONTENT <em>PID21CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID21CONTENT
	 * @generated
	 */
	public Adapter createPID21CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID22CONTENT <em>PID22CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID22CONTENT
	 * @generated
	 */
	public Adapter createPID22CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID23CONTENT <em>PID23CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID23CONTENT
	 * @generated
	 */
	public Adapter createPID23CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID24CONTENT <em>PID24CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID24CONTENT
	 * @generated
	 */
	public Adapter createPID24CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID25CONTENT <em>PID25CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID25CONTENT
	 * @generated
	 */
	public Adapter createPID25CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID26CONTENT <em>PID26CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID26CONTENT
	 * @generated
	 */
	public Adapter createPID26CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID27CONTENT <em>PID27CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID27CONTENT
	 * @generated
	 */
	public Adapter createPID27CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID28CONTENT <em>PID28CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID28CONTENT
	 * @generated
	 */
	public Adapter createPID28CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID29CONTENT <em>PID29CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID29CONTENT
	 * @generated
	 */
	public Adapter createPID29CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID2CONTENT <em>PID2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID2CONTENT
	 * @generated
	 */
	public Adapter createPID2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID30CONTENT <em>PID30CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID30CONTENT
	 * @generated
	 */
	public Adapter createPID30CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID31CONTENT <em>PID31CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID31CONTENT
	 * @generated
	 */
	public Adapter createPID31CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID32CONTENT <em>PID32CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID32CONTENT
	 * @generated
	 */
	public Adapter createPID32CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID33CONTENT <em>PID33CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID33CONTENT
	 * @generated
	 */
	public Adapter createPID33CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID34CONTENT <em>PID34CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID34CONTENT
	 * @generated
	 */
	public Adapter createPID34CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID35CONTENT <em>PID35CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID35CONTENT
	 * @generated
	 */
	public Adapter createPID35CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID36CONTENT <em>PID36CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID36CONTENT
	 * @generated
	 */
	public Adapter createPID36CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID37CONTENT <em>PID37CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID37CONTENT
	 * @generated
	 */
	public Adapter createPID37CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID38CONTENT <em>PID38CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID38CONTENT
	 * @generated
	 */
	public Adapter createPID38CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID39CONTENT <em>PID39CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID39CONTENT
	 * @generated
	 */
	public Adapter createPID39CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID3CONTENT <em>PID3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID3CONTENT
	 * @generated
	 */
	public Adapter createPID3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID4CONTENT <em>PID4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID4CONTENT
	 * @generated
	 */
	public Adapter createPID4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID5CONTENT <em>PID5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID5CONTENT
	 * @generated
	 */
	public Adapter createPID5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID6CONTENT <em>PID6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID6CONTENT
	 * @generated
	 */
	public Adapter createPID6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID7CONTENT <em>PID7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID7CONTENT
	 * @generated
	 */
	public Adapter createPID7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID8CONTENT <em>PID8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID8CONTENT
	 * @generated
	 */
	public Adapter createPID8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PID9CONTENT <em>PID9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PID9CONTENT
	 * @generated
	 */
	public Adapter createPID9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PIDCONTENT <em>PIDCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PIDCONTENT
	 * @generated
	 */
	public Adapter createPIDCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PIP <em>PIP</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PIP
	 * @generated
	 */
	public Adapter createPIPAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PIP1CONTENT <em>PIP1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PIP1CONTENT
	 * @generated
	 */
	public Adapter createPIP1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PIP2CONTENT <em>PIP2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PIP2CONTENT
	 * @generated
	 */
	public Adapter createPIP2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PIP3CONTENT <em>PIP3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PIP3CONTENT
	 * @generated
	 */
	public Adapter createPIP3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PIP4CONTENT <em>PIP4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PIP4CONTENT
	 * @generated
	 */
	public Adapter createPIP4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PIP5CONTENT <em>PIP5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PIP5CONTENT
	 * @generated
	 */
	public Adapter createPIP5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PL <em>PL</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PL
	 * @generated
	 */
	public Adapter createPLAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PL10CONTENT <em>PL10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PL10CONTENT
	 * @generated
	 */
	public Adapter createPL10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PL11CONTENT <em>PL11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PL11CONTENT
	 * @generated
	 */
	public Adapter createPL11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PL1CONTENT <em>PL1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PL1CONTENT
	 * @generated
	 */
	public Adapter createPL1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PL2CONTENT <em>PL2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PL2CONTENT
	 * @generated
	 */
	public Adapter createPL2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PL3CONTENT <em>PL3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PL3CONTENT
	 * @generated
	 */
	public Adapter createPL3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PL4CONTENT <em>PL4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PL4CONTENT
	 * @generated
	 */
	public Adapter createPL4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PL5CONTENT <em>PL5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PL5CONTENT
	 * @generated
	 */
	public Adapter createPL5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PL6CONTENT <em>PL6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PL6CONTENT
	 * @generated
	 */
	public Adapter createPL6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PL7CONTENT <em>PL7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PL7CONTENT
	 * @generated
	 */
	public Adapter createPL7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PL8CONTENT <em>PL8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PL8CONTENT
	 * @generated
	 */
	public Adapter createPL8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PL9CONTENT <em>PL9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PL9CONTENT
	 * @generated
	 */
	public Adapter createPL9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PLN <em>PLN</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PLN
	 * @generated
	 */
	public Adapter createPLNAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PLN1CONTENT <em>PLN1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PLN1CONTENT
	 * @generated
	 */
	public Adapter createPLN1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PLN2CONTENT <em>PLN2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PLN2CONTENT
	 * @generated
	 */
	public Adapter createPLN2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PLN3CONTENT <em>PLN3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PLN3CONTENT
	 * @generated
	 */
	public Adapter createPLN3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PLN4CONTENT <em>PLN4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PLN4CONTENT
	 * @generated
	 */
	public Adapter createPLN4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PPN <em>PPN</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PPN
	 * @generated
	 */
	public Adapter createPPNAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PPN10CONTENT <em>PPN10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PPN10CONTENT
	 * @generated
	 */
	public Adapter createPPN10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PPN11CONTENT <em>PPN11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PPN11CONTENT
	 * @generated
	 */
	public Adapter createPPN11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PPN12CONTENT <em>PPN12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PPN12CONTENT
	 * @generated
	 */
	public Adapter createPPN12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PPN13CONTENT <em>PPN13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PPN13CONTENT
	 * @generated
	 */
	public Adapter createPPN13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PPN14CONTENT <em>PPN14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PPN14CONTENT
	 * @generated
	 */
	public Adapter createPPN14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PPN15CONTENT <em>PPN15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PPN15CONTENT
	 * @generated
	 */
	public Adapter createPPN15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PPN16CONTENT <em>PPN16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PPN16CONTENT
	 * @generated
	 */
	public Adapter createPPN16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PPN17CONTENT <em>PPN17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PPN17CONTENT
	 * @generated
	 */
	public Adapter createPPN17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PPN18CONTENT <em>PPN18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PPN18CONTENT
	 * @generated
	 */
	public Adapter createPPN18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PPN19CONTENT <em>PPN19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PPN19CONTENT
	 * @generated
	 */
	public Adapter createPPN19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PPN1CONTENT <em>PPN1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PPN1CONTENT
	 * @generated
	 */
	public Adapter createPPN1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PPN20CONTENT <em>PPN20CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PPN20CONTENT
	 * @generated
	 */
	public Adapter createPPN20CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PPN21CONTENT <em>PPN21CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PPN21CONTENT
	 * @generated
	 */
	public Adapter createPPN21CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PPN22CONTENT <em>PPN22CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PPN22CONTENT
	 * @generated
	 */
	public Adapter createPPN22CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PPN23CONTENT <em>PPN23CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PPN23CONTENT
	 * @generated
	 */
	public Adapter createPPN23CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PPN24CONTENT <em>PPN24CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PPN24CONTENT
	 * @generated
	 */
	public Adapter createPPN24CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PPN2CONTENT <em>PPN2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PPN2CONTENT
	 * @generated
	 */
	public Adapter createPPN2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PPN3CONTENT <em>PPN3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PPN3CONTENT
	 * @generated
	 */
	public Adapter createPPN3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PPN4CONTENT <em>PPN4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PPN4CONTENT
	 * @generated
	 */
	public Adapter createPPN4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PPN5CONTENT <em>PPN5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PPN5CONTENT
	 * @generated
	 */
	public Adapter createPPN5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PPN6CONTENT <em>PPN6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PPN6CONTENT
	 * @generated
	 */
	public Adapter createPPN6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PPN7CONTENT <em>PPN7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PPN7CONTENT
	 * @generated
	 */
	public Adapter createPPN7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PPN8CONTENT <em>PPN8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PPN8CONTENT
	 * @generated
	 */
	public Adapter createPPN8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PPN9CONTENT <em>PPN9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PPN9CONTENT
	 * @generated
	 */
	public Adapter createPPN9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PR110CONTENT <em>PR110CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PR110CONTENT
	 * @generated
	 */
	public Adapter createPR110CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PR111CONTENT <em>PR111CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PR111CONTENT
	 * @generated
	 */
	public Adapter createPR111CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PR112CONTENT <em>PR112CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PR112CONTENT
	 * @generated
	 */
	public Adapter createPR112CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PR113CONTENT <em>PR113CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PR113CONTENT
	 * @generated
	 */
	public Adapter createPR113CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PR114CONTENT <em>PR114CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PR114CONTENT
	 * @generated
	 */
	public Adapter createPR114CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PR115CONTENT <em>PR115CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PR115CONTENT
	 * @generated
	 */
	public Adapter createPR115CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PR116CONTENT <em>PR116CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PR116CONTENT
	 * @generated
	 */
	public Adapter createPR116CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PR117CONTENT <em>PR117CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PR117CONTENT
	 * @generated
	 */
	public Adapter createPR117CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PR118CONTENT <em>PR118CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PR118CONTENT
	 * @generated
	 */
	public Adapter createPR118CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PR119CONTENT <em>PR119CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PR119CONTENT
	 * @generated
	 */
	public Adapter createPR119CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PR11CONTENT <em>PR11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PR11CONTENT
	 * @generated
	 */
	public Adapter createPR11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PR120CONTENT <em>PR120CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PR120CONTENT
	 * @generated
	 */
	public Adapter createPR120CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PR12CONTENT <em>PR12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PR12CONTENT
	 * @generated
	 */
	public Adapter createPR12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PR13CONTENT <em>PR13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PR13CONTENT
	 * @generated
	 */
	public Adapter createPR13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PR14CONTENT <em>PR14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PR14CONTENT
	 * @generated
	 */
	public Adapter createPR14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PR15CONTENT <em>PR15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PR15CONTENT
	 * @generated
	 */
	public Adapter createPR15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PR16CONTENT <em>PR16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PR16CONTENT
	 * @generated
	 */
	public Adapter createPR16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PR17CONTENT <em>PR17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PR17CONTENT
	 * @generated
	 */
	public Adapter createPR17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PR18CONTENT <em>PR18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PR18CONTENT
	 * @generated
	 */
	public Adapter createPR18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PR19CONTENT <em>PR19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PR19CONTENT
	 * @generated
	 */
	public Adapter createPR19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PR1CONTENT <em>PR1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PR1CONTENT
	 * @generated
	 */
	public Adapter createPR1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRA10CONTENT <em>PRA10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRA10CONTENT
	 * @generated
	 */
	public Adapter createPRA10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRA11CONTENT <em>PRA11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRA11CONTENT
	 * @generated
	 */
	public Adapter createPRA11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRA12CONTENT <em>PRA12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRA12CONTENT
	 * @generated
	 */
	public Adapter createPRA12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRA1CONTENT <em>PRA1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRA1CONTENT
	 * @generated
	 */
	public Adapter createPRA1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRA2CONTENT <em>PRA2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRA2CONTENT
	 * @generated
	 */
	public Adapter createPRA2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRA3CONTENT <em>PRA3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRA3CONTENT
	 * @generated
	 */
	public Adapter createPRA3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRA4CONTENT <em>PRA4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRA4CONTENT
	 * @generated
	 */
	public Adapter createPRA4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRA5CONTENT <em>PRA5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRA5CONTENT
	 * @generated
	 */
	public Adapter createPRA5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRA6CONTENT <em>PRA6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRA6CONTENT
	 * @generated
	 */
	public Adapter createPRA6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRA7CONTENT <em>PRA7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRA7CONTENT
	 * @generated
	 */
	public Adapter createPRA7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRA8CONTENT <em>PRA8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRA8CONTENT
	 * @generated
	 */
	public Adapter createPRA8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRA9CONTENT <em>PRA9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRA9CONTENT
	 * @generated
	 */
	public Adapter createPRA9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRACONTENT <em>PRACONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRACONTENT
	 * @generated
	 */
	public Adapter createPRACONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRB10CONTENT <em>PRB10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRB10CONTENT
	 * @generated
	 */
	public Adapter createPRB10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRB11CONTENT <em>PRB11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRB11CONTENT
	 * @generated
	 */
	public Adapter createPRB11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRB12CONTENT <em>PRB12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRB12CONTENT
	 * @generated
	 */
	public Adapter createPRB12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRB13CONTENT <em>PRB13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRB13CONTENT
	 * @generated
	 */
	public Adapter createPRB13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRB14CONTENT <em>PRB14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRB14CONTENT
	 * @generated
	 */
	public Adapter createPRB14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRB15CONTENT <em>PRB15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRB15CONTENT
	 * @generated
	 */
	public Adapter createPRB15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRB16CONTENT <em>PRB16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRB16CONTENT
	 * @generated
	 */
	public Adapter createPRB16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRB17CONTENT <em>PRB17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRB17CONTENT
	 * @generated
	 */
	public Adapter createPRB17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRB18CONTENT <em>PRB18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRB18CONTENT
	 * @generated
	 */
	public Adapter createPRB18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRB19CONTENT <em>PRB19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRB19CONTENT
	 * @generated
	 */
	public Adapter createPRB19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRB1CONTENT <em>PRB1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRB1CONTENT
	 * @generated
	 */
	public Adapter createPRB1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRB20CONTENT <em>PRB20CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRB20CONTENT
	 * @generated
	 */
	public Adapter createPRB20CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRB21CONTENT <em>PRB21CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRB21CONTENT
	 * @generated
	 */
	public Adapter createPRB21CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRB22CONTENT <em>PRB22CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRB22CONTENT
	 * @generated
	 */
	public Adapter createPRB22CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRB23CONTENT <em>PRB23CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRB23CONTENT
	 * @generated
	 */
	public Adapter createPRB23CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRB24CONTENT <em>PRB24CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRB24CONTENT
	 * @generated
	 */
	public Adapter createPRB24CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRB25CONTENT <em>PRB25CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRB25CONTENT
	 * @generated
	 */
	public Adapter createPRB25CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRB2CONTENT <em>PRB2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRB2CONTENT
	 * @generated
	 */
	public Adapter createPRB2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRB3CONTENT <em>PRB3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRB3CONTENT
	 * @generated
	 */
	public Adapter createPRB3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRB4CONTENT <em>PRB4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRB4CONTENT
	 * @generated
	 */
	public Adapter createPRB4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRB5CONTENT <em>PRB5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRB5CONTENT
	 * @generated
	 */
	public Adapter createPRB5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRB6CONTENT <em>PRB6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRB6CONTENT
	 * @generated
	 */
	public Adapter createPRB6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRB7CONTENT <em>PRB7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRB7CONTENT
	 * @generated
	 */
	public Adapter createPRB7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRB8CONTENT <em>PRB8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRB8CONTENT
	 * @generated
	 */
	public Adapter createPRB8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRB9CONTENT <em>PRB9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRB9CONTENT
	 * @generated
	 */
	public Adapter createPRB9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRBCONTENT <em>PRBCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRBCONTENT
	 * @generated
	 */
	public Adapter createPRBCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRC10CONTENT <em>PRC10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRC10CONTENT
	 * @generated
	 */
	public Adapter createPRC10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRC11CONTENT <em>PRC11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRC11CONTENT
	 * @generated
	 */
	public Adapter createPRC11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRC12CONTENT <em>PRC12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRC12CONTENT
	 * @generated
	 */
	public Adapter createPRC12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRC13CONTENT <em>PRC13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRC13CONTENT
	 * @generated
	 */
	public Adapter createPRC13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRC14CONTENT <em>PRC14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRC14CONTENT
	 * @generated
	 */
	public Adapter createPRC14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRC15CONTENT <em>PRC15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRC15CONTENT
	 * @generated
	 */
	public Adapter createPRC15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRC16CONTENT <em>PRC16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRC16CONTENT
	 * @generated
	 */
	public Adapter createPRC16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRC17CONTENT <em>PRC17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRC17CONTENT
	 * @generated
	 */
	public Adapter createPRC17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRC18CONTENT <em>PRC18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRC18CONTENT
	 * @generated
	 */
	public Adapter createPRC18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRC1CONTENT <em>PRC1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRC1CONTENT
	 * @generated
	 */
	public Adapter createPRC1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRC2CONTENT <em>PRC2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRC2CONTENT
	 * @generated
	 */
	public Adapter createPRC2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRC3CONTENT <em>PRC3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRC3CONTENT
	 * @generated
	 */
	public Adapter createPRC3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRC4CONTENT <em>PRC4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRC4CONTENT
	 * @generated
	 */
	public Adapter createPRC4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRC5CONTENT <em>PRC5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRC5CONTENT
	 * @generated
	 */
	public Adapter createPRC5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRC6CONTENT <em>PRC6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRC6CONTENT
	 * @generated
	 */
	public Adapter createPRC6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRC7CONTENT <em>PRC7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRC7CONTENT
	 * @generated
	 */
	public Adapter createPRC7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRC8CONTENT <em>PRC8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRC8CONTENT
	 * @generated
	 */
	public Adapter createPRC8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRC9CONTENT <em>PRC9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRC9CONTENT
	 * @generated
	 */
	public Adapter createPRC9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRCCONTENT <em>PRCCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRCCONTENT
	 * @generated
	 */
	public Adapter createPRCCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRD1CONTENT <em>PRD1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRD1CONTENT
	 * @generated
	 */
	public Adapter createPRD1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRD2CONTENT <em>PRD2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRD2CONTENT
	 * @generated
	 */
	public Adapter createPRD2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRD3CONTENT <em>PRD3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRD3CONTENT
	 * @generated
	 */
	public Adapter createPRD3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRD4CONTENT <em>PRD4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRD4CONTENT
	 * @generated
	 */
	public Adapter createPRD4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRD5CONTENT <em>PRD5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRD5CONTENT
	 * @generated
	 */
	public Adapter createPRD5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRD6CONTENT <em>PRD6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRD6CONTENT
	 * @generated
	 */
	public Adapter createPRD6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRD7CONTENT <em>PRD7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRD7CONTENT
	 * @generated
	 */
	public Adapter createPRD7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRD8CONTENT <em>PRD8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRD8CONTENT
	 * @generated
	 */
	public Adapter createPRD8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRD9CONTENT <em>PRD9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRD9CONTENT
	 * @generated
	 */
	public Adapter createPRD9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRDCONTENT <em>PRDCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRDCONTENT
	 * @generated
	 */
	public Adapter createPRDCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRL <em>PRL</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRL
	 * @generated
	 */
	public Adapter createPRLAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRL1CONTENT <em>PRL1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRL1CONTENT
	 * @generated
	 */
	public Adapter createPRL1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRL2CONTENT <em>PRL2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRL2CONTENT
	 * @generated
	 */
	public Adapter createPRL2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PRL3CONTENT <em>PRL3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PRL3CONTENT
	 * @generated
	 */
	public Adapter createPRL3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PSH10CONTENT <em>PSH10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PSH10CONTENT
	 * @generated
	 */
	public Adapter createPSH10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PSH11CONTENT <em>PSH11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PSH11CONTENT
	 * @generated
	 */
	public Adapter createPSH11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PSH12CONTENT <em>PSH12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PSH12CONTENT
	 * @generated
	 */
	public Adapter createPSH12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PSH13CONTENT <em>PSH13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PSH13CONTENT
	 * @generated
	 */
	public Adapter createPSH13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PSH14CONTENT <em>PSH14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PSH14CONTENT
	 * @generated
	 */
	public Adapter createPSH14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PSH1CONTENT <em>PSH1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PSH1CONTENT
	 * @generated
	 */
	public Adapter createPSH1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PSH2CONTENT <em>PSH2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PSH2CONTENT
	 * @generated
	 */
	public Adapter createPSH2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PSH3CONTENT <em>PSH3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PSH3CONTENT
	 * @generated
	 */
	public Adapter createPSH3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PSH4CONTENT <em>PSH4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PSH4CONTENT
	 * @generated
	 */
	public Adapter createPSH4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PSH5CONTENT <em>PSH5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PSH5CONTENT
	 * @generated
	 */
	public Adapter createPSH5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PSH6CONTENT <em>PSH6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PSH6CONTENT
	 * @generated
	 */
	public Adapter createPSH6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PSH7CONTENT <em>PSH7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PSH7CONTENT
	 * @generated
	 */
	public Adapter createPSH7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PSH8CONTENT <em>PSH8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PSH8CONTENT
	 * @generated
	 */
	public Adapter createPSH8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PSH9CONTENT <em>PSH9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PSH9CONTENT
	 * @generated
	 */
	public Adapter createPSH9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PSHCONTENT <em>PSHCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PSHCONTENT
	 * @generated
	 */
	public Adapter createPSHCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PT <em>PT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PT
	 * @generated
	 */
	public Adapter createPTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PT1CONTENT <em>PT1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PT1CONTENT
	 * @generated
	 */
	public Adapter createPT1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PT2CONTENT <em>PT2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PT2CONTENT
	 * @generated
	 */
	public Adapter createPT2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PTA <em>PTA</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PTA
	 * @generated
	 */
	public Adapter createPTAAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PTA1CONTENT <em>PTA1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PTA1CONTENT
	 * @generated
	 */
	public Adapter createPTA1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PTA2CONTENT <em>PTA2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PTA2CONTENT
	 * @generated
	 */
	public Adapter createPTA2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PTA3CONTENT <em>PTA3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PTA3CONTENT
	 * @generated
	 */
	public Adapter createPTA3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PTA4CONTENT <em>PTA4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PTA4CONTENT
	 * @generated
	 */
	public Adapter createPTA4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PTH1CONTENT <em>PTH1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PTH1CONTENT
	 * @generated
	 */
	public Adapter createPTH1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PTH2CONTENT <em>PTH2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PTH2CONTENT
	 * @generated
	 */
	public Adapter createPTH2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PTH3CONTENT <em>PTH3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PTH3CONTENT
	 * @generated
	 */
	public Adapter createPTH3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PTH4CONTENT <em>PTH4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PTH4CONTENT
	 * @generated
	 */
	public Adapter createPTH4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PTH5CONTENT <em>PTH5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PTH5CONTENT
	 * @generated
	 */
	public Adapter createPTH5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PTH6CONTENT <em>PTH6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PTH6CONTENT
	 * @generated
	 */
	public Adapter createPTH6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PTHCONTENT <em>PTHCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PTHCONTENT
	 * @generated
	 */
	public Adapter createPTHCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV110CONTENT <em>PV110CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV110CONTENT
	 * @generated
	 */
	public Adapter createPV110CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV111CONTENT <em>PV111CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV111CONTENT
	 * @generated
	 */
	public Adapter createPV111CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV112CONTENT <em>PV112CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV112CONTENT
	 * @generated
	 */
	public Adapter createPV112CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV113CONTENT <em>PV113CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV113CONTENT
	 * @generated
	 */
	public Adapter createPV113CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV114CONTENT <em>PV114CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV114CONTENT
	 * @generated
	 */
	public Adapter createPV114CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV115CONTENT <em>PV115CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV115CONTENT
	 * @generated
	 */
	public Adapter createPV115CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV116CONTENT <em>PV116CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV116CONTENT
	 * @generated
	 */
	public Adapter createPV116CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV117CONTENT <em>PV117CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV117CONTENT
	 * @generated
	 */
	public Adapter createPV117CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV118CONTENT <em>PV118CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV118CONTENT
	 * @generated
	 */
	public Adapter createPV118CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV119CONTENT <em>PV119CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV119CONTENT
	 * @generated
	 */
	public Adapter createPV119CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV11CONTENT <em>PV11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV11CONTENT
	 * @generated
	 */
	public Adapter createPV11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV120CONTENT <em>PV120CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV120CONTENT
	 * @generated
	 */
	public Adapter createPV120CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV121CONTENT <em>PV121CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV121CONTENT
	 * @generated
	 */
	public Adapter createPV121CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV122CONTENT <em>PV122CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV122CONTENT
	 * @generated
	 */
	public Adapter createPV122CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV123CONTENT <em>PV123CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV123CONTENT
	 * @generated
	 */
	public Adapter createPV123CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV124CONTENT <em>PV124CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV124CONTENT
	 * @generated
	 */
	public Adapter createPV124CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV125CONTENT <em>PV125CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV125CONTENT
	 * @generated
	 */
	public Adapter createPV125CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV126CONTENT <em>PV126CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV126CONTENT
	 * @generated
	 */
	public Adapter createPV126CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV127CONTENT <em>PV127CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV127CONTENT
	 * @generated
	 */
	public Adapter createPV127CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV128CONTENT <em>PV128CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV128CONTENT
	 * @generated
	 */
	public Adapter createPV128CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV129CONTENT <em>PV129CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV129CONTENT
	 * @generated
	 */
	public Adapter createPV129CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV12CONTENT <em>PV12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV12CONTENT
	 * @generated
	 */
	public Adapter createPV12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV130CONTENT <em>PV130CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV130CONTENT
	 * @generated
	 */
	public Adapter createPV130CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV131CONTENT <em>PV131CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV131CONTENT
	 * @generated
	 */
	public Adapter createPV131CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV132CONTENT <em>PV132CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV132CONTENT
	 * @generated
	 */
	public Adapter createPV132CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV133CONTENT <em>PV133CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV133CONTENT
	 * @generated
	 */
	public Adapter createPV133CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV134CONTENT <em>PV134CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV134CONTENT
	 * @generated
	 */
	public Adapter createPV134CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV135CONTENT <em>PV135CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV135CONTENT
	 * @generated
	 */
	public Adapter createPV135CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV136CONTENT <em>PV136CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV136CONTENT
	 * @generated
	 */
	public Adapter createPV136CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV137CONTENT <em>PV137CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV137CONTENT
	 * @generated
	 */
	public Adapter createPV137CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV138CONTENT <em>PV138CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV138CONTENT
	 * @generated
	 */
	public Adapter createPV138CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV139CONTENT <em>PV139CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV139CONTENT
	 * @generated
	 */
	public Adapter createPV139CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV13CONTENT <em>PV13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV13CONTENT
	 * @generated
	 */
	public Adapter createPV13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV140CONTENT <em>PV140CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV140CONTENT
	 * @generated
	 */
	public Adapter createPV140CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV141CONTENT <em>PV141CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV141CONTENT
	 * @generated
	 */
	public Adapter createPV141CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV142CONTENT <em>PV142CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV142CONTENT
	 * @generated
	 */
	public Adapter createPV142CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV143CONTENT <em>PV143CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV143CONTENT
	 * @generated
	 */
	public Adapter createPV143CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV144CONTENT <em>PV144CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV144CONTENT
	 * @generated
	 */
	public Adapter createPV144CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV145CONTENT <em>PV145CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV145CONTENT
	 * @generated
	 */
	public Adapter createPV145CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV146CONTENT <em>PV146CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV146CONTENT
	 * @generated
	 */
	public Adapter createPV146CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV147CONTENT <em>PV147CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV147CONTENT
	 * @generated
	 */
	public Adapter createPV147CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV148CONTENT <em>PV148CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV148CONTENT
	 * @generated
	 */
	public Adapter createPV148CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV149CONTENT <em>PV149CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV149CONTENT
	 * @generated
	 */
	public Adapter createPV149CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV14CONTENT <em>PV14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV14CONTENT
	 * @generated
	 */
	public Adapter createPV14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV150CONTENT <em>PV150CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV150CONTENT
	 * @generated
	 */
	public Adapter createPV150CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV151CONTENT <em>PV151CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV151CONTENT
	 * @generated
	 */
	public Adapter createPV151CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV152CONTENT <em>PV152CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV152CONTENT
	 * @generated
	 */
	public Adapter createPV152CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV15CONTENT <em>PV15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV15CONTENT
	 * @generated
	 */
	public Adapter createPV15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV16CONTENT <em>PV16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV16CONTENT
	 * @generated
	 */
	public Adapter createPV16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV17CONTENT <em>PV17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV17CONTENT
	 * @generated
	 */
	public Adapter createPV17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV18CONTENT <em>PV18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV18CONTENT
	 * @generated
	 */
	public Adapter createPV18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV19CONTENT <em>PV19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV19CONTENT
	 * @generated
	 */
	public Adapter createPV19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV1CONTENT <em>PV1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV1CONTENT
	 * @generated
	 */
	public Adapter createPV1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV210CONTENT <em>PV210CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV210CONTENT
	 * @generated
	 */
	public Adapter createPV210CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV211CONTENT <em>PV211CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV211CONTENT
	 * @generated
	 */
	public Adapter createPV211CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV212CONTENT <em>PV212CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV212CONTENT
	 * @generated
	 */
	public Adapter createPV212CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV213CONTENT <em>PV213CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV213CONTENT
	 * @generated
	 */
	public Adapter createPV213CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV214CONTENT <em>PV214CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV214CONTENT
	 * @generated
	 */
	public Adapter createPV214CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV215CONTENT <em>PV215CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV215CONTENT
	 * @generated
	 */
	public Adapter createPV215CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV216CONTENT <em>PV216CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV216CONTENT
	 * @generated
	 */
	public Adapter createPV216CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV217CONTENT <em>PV217CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV217CONTENT
	 * @generated
	 */
	public Adapter createPV217CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV218CONTENT <em>PV218CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV218CONTENT
	 * @generated
	 */
	public Adapter createPV218CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV219CONTENT <em>PV219CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV219CONTENT
	 * @generated
	 */
	public Adapter createPV219CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV21CONTENT <em>PV21CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV21CONTENT
	 * @generated
	 */
	public Adapter createPV21CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV220CONTENT <em>PV220CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV220CONTENT
	 * @generated
	 */
	public Adapter createPV220CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV221CONTENT <em>PV221CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV221CONTENT
	 * @generated
	 */
	public Adapter createPV221CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV222CONTENT <em>PV222CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV222CONTENT
	 * @generated
	 */
	public Adapter createPV222CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV223CONTENT <em>PV223CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV223CONTENT
	 * @generated
	 */
	public Adapter createPV223CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV224CONTENT <em>PV224CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV224CONTENT
	 * @generated
	 */
	public Adapter createPV224CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV225CONTENT <em>PV225CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV225CONTENT
	 * @generated
	 */
	public Adapter createPV225CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV226CONTENT <em>PV226CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV226CONTENT
	 * @generated
	 */
	public Adapter createPV226CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV227CONTENT <em>PV227CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV227CONTENT
	 * @generated
	 */
	public Adapter createPV227CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV228CONTENT <em>PV228CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV228CONTENT
	 * @generated
	 */
	public Adapter createPV228CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV229CONTENT <em>PV229CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV229CONTENT
	 * @generated
	 */
	public Adapter createPV229CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV22CONTENT <em>PV22CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV22CONTENT
	 * @generated
	 */
	public Adapter createPV22CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV230CONTENT <em>PV230CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV230CONTENT
	 * @generated
	 */
	public Adapter createPV230CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV231CONTENT <em>PV231CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV231CONTENT
	 * @generated
	 */
	public Adapter createPV231CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV232CONTENT <em>PV232CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV232CONTENT
	 * @generated
	 */
	public Adapter createPV232CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV233CONTENT <em>PV233CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV233CONTENT
	 * @generated
	 */
	public Adapter createPV233CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV234CONTENT <em>PV234CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV234CONTENT
	 * @generated
	 */
	public Adapter createPV234CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV235CONTENT <em>PV235CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV235CONTENT
	 * @generated
	 */
	public Adapter createPV235CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV236CONTENT <em>PV236CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV236CONTENT
	 * @generated
	 */
	public Adapter createPV236CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV237CONTENT <em>PV237CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV237CONTENT
	 * @generated
	 */
	public Adapter createPV237CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV238CONTENT <em>PV238CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV238CONTENT
	 * @generated
	 */
	public Adapter createPV238CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV239CONTENT <em>PV239CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV239CONTENT
	 * @generated
	 */
	public Adapter createPV239CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV23CONTENT <em>PV23CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV23CONTENT
	 * @generated
	 */
	public Adapter createPV23CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV240CONTENT <em>PV240CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV240CONTENT
	 * @generated
	 */
	public Adapter createPV240CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV241CONTENT <em>PV241CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV241CONTENT
	 * @generated
	 */
	public Adapter createPV241CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV242CONTENT <em>PV242CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV242CONTENT
	 * @generated
	 */
	public Adapter createPV242CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV243CONTENT <em>PV243CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV243CONTENT
	 * @generated
	 */
	public Adapter createPV243CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV244CONTENT <em>PV244CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV244CONTENT
	 * @generated
	 */
	public Adapter createPV244CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV245CONTENT <em>PV245CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV245CONTENT
	 * @generated
	 */
	public Adapter createPV245CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV246CONTENT <em>PV246CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV246CONTENT
	 * @generated
	 */
	public Adapter createPV246CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV247CONTENT <em>PV247CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV247CONTENT
	 * @generated
	 */
	public Adapter createPV247CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV248CONTENT <em>PV248CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV248CONTENT
	 * @generated
	 */
	public Adapter createPV248CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV249CONTENT <em>PV249CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV249CONTENT
	 * @generated
	 */
	public Adapter createPV249CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV24CONTENT <em>PV24CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV24CONTENT
	 * @generated
	 */
	public Adapter createPV24CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV25CONTENT <em>PV25CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV25CONTENT
	 * @generated
	 */
	public Adapter createPV25CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV26CONTENT <em>PV26CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV26CONTENT
	 * @generated
	 */
	public Adapter createPV26CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV27CONTENT <em>PV27CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV27CONTENT
	 * @generated
	 */
	public Adapter createPV27CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV28CONTENT <em>PV28CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV28CONTENT
	 * @generated
	 */
	public Adapter createPV28CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV29CONTENT <em>PV29CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV29CONTENT
	 * @generated
	 */
	public Adapter createPV29CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.PV2CONTENT <em>PV2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.PV2CONTENT
	 * @generated
	 */
	public Adapter createPV2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QAK1CONTENT <em>QAK1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QAK1CONTENT
	 * @generated
	 */
	public Adapter createQAK1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QAK2CONTENT <em>QAK2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QAK2CONTENT
	 * @generated
	 */
	public Adapter createQAK2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QAK3CONTENT <em>QAK3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QAK3CONTENT
	 * @generated
	 */
	public Adapter createQAK3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QAK4CONTENT <em>QAK4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QAK4CONTENT
	 * @generated
	 */
	public Adapter createQAK4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QAK5CONTENT <em>QAK5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QAK5CONTENT
	 * @generated
	 */
	public Adapter createQAK5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QAK6CONTENT <em>QAK6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QAK6CONTENT
	 * @generated
	 */
	public Adapter createQAK6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QAKCONTENT <em>QAKCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QAKCONTENT
	 * @generated
	 */
	public Adapter createQAKCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QID1CONTENT <em>QID1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QID1CONTENT
	 * @generated
	 */
	public Adapter createQID1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QID2CONTENT <em>QID2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QID2CONTENT
	 * @generated
	 */
	public Adapter createQID2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QIDCONTENT <em>QIDCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QIDCONTENT
	 * @generated
	 */
	public Adapter createQIDCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QIP <em>QIP</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QIP
	 * @generated
	 */
	public Adapter createQIPAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QIP1CONTENT <em>QIP1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QIP1CONTENT
	 * @generated
	 */
	public Adapter createQIP1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QIP2CONTENT <em>QIP2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QIP2CONTENT
	 * @generated
	 */
	public Adapter createQIP2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QPD1CONTENT <em>QPD1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QPD1CONTENT
	 * @generated
	 */
	public Adapter createQPD1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QPD2CONTENT <em>QPD2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QPD2CONTENT
	 * @generated
	 */
	public Adapter createQPD2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QPD3CONTENT <em>QPD3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QPD3CONTENT
	 * @generated
	 */
	public Adapter createQPD3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QPDCONTENT <em>QPDCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QPDCONTENT
	 * @generated
	 */
	public Adapter createQPDCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QRD10CONTENT <em>QRD10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QRD10CONTENT
	 * @generated
	 */
	public Adapter createQRD10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QRD11CONTENT <em>QRD11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QRD11CONTENT
	 * @generated
	 */
	public Adapter createQRD11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QRD12CONTENT <em>QRD12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QRD12CONTENT
	 * @generated
	 */
	public Adapter createQRD12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QRD1CONTENT <em>QRD1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QRD1CONTENT
	 * @generated
	 */
	public Adapter createQRD1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QRD2CONTENT <em>QRD2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QRD2CONTENT
	 * @generated
	 */
	public Adapter createQRD2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QRD3CONTENT <em>QRD3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QRD3CONTENT
	 * @generated
	 */
	public Adapter createQRD3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QRD4CONTENT <em>QRD4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QRD4CONTENT
	 * @generated
	 */
	public Adapter createQRD4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QRD5CONTENT <em>QRD5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QRD5CONTENT
	 * @generated
	 */
	public Adapter createQRD5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QRD6CONTENT <em>QRD6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QRD6CONTENT
	 * @generated
	 */
	public Adapter createQRD6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QRD7CONTENT <em>QRD7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QRD7CONTENT
	 * @generated
	 */
	public Adapter createQRD7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QRD8CONTENT <em>QRD8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QRD8CONTENT
	 * @generated
	 */
	public Adapter createQRD8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QRD9CONTENT <em>QRD9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QRD9CONTENT
	 * @generated
	 */
	public Adapter createQRD9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QRDCONTENT <em>QRDCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QRDCONTENT
	 * @generated
	 */
	public Adapter createQRDCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QRF10CONTENT <em>QRF10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QRF10CONTENT
	 * @generated
	 */
	public Adapter createQRF10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QRF1CONTENT <em>QRF1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QRF1CONTENT
	 * @generated
	 */
	public Adapter createQRF1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QRF2CONTENT <em>QRF2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QRF2CONTENT
	 * @generated
	 */
	public Adapter createQRF2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QRF3CONTENT <em>QRF3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QRF3CONTENT
	 * @generated
	 */
	public Adapter createQRF3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QRF4CONTENT <em>QRF4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QRF4CONTENT
	 * @generated
	 */
	public Adapter createQRF4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QRF5CONTENT <em>QRF5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QRF5CONTENT
	 * @generated
	 */
	public Adapter createQRF5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QRF6CONTENT <em>QRF6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QRF6CONTENT
	 * @generated
	 */
	public Adapter createQRF6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QRF7CONTENT <em>QRF7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QRF7CONTENT
	 * @generated
	 */
	public Adapter createQRF7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QRF8CONTENT <em>QRF8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QRF8CONTENT
	 * @generated
	 */
	public Adapter createQRF8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QRF9CONTENT <em>QRF9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QRF9CONTENT
	 * @generated
	 */
	public Adapter createQRF9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QRFCONTENT <em>QRFCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QRFCONTENT
	 * @generated
	 */
	public Adapter createQRFCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QRI1CONTENT <em>QRI1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QRI1CONTENT
	 * @generated
	 */
	public Adapter createQRI1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QRI2CONTENT <em>QRI2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QRI2CONTENT
	 * @generated
	 */
	public Adapter createQRI2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QRI3CONTENT <em>QRI3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QRI3CONTENT
	 * @generated
	 */
	public Adapter createQRI3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QRICONTENT <em>QRICONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QRICONTENT
	 * @generated
	 */
	public Adapter createQRICONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QSC <em>QSC</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QSC
	 * @generated
	 */
	public Adapter createQSCAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QSC1CONTENT <em>QSC1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QSC1CONTENT
	 * @generated
	 */
	public Adapter createQSC1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QSC2CONTENT <em>QSC2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QSC2CONTENT
	 * @generated
	 */
	public Adapter createQSC2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QSC3CONTENT <em>QSC3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QSC3CONTENT
	 * @generated
	 */
	public Adapter createQSC3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.QSC4CONTENT <em>QSC4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.QSC4CONTENT
	 * @generated
	 */
	public Adapter createQSC4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RCD <em>RCD</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RCD
	 * @generated
	 */
	public Adapter createRCDAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RCD1CONTENT <em>RCD1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RCD1CONTENT
	 * @generated
	 */
	public Adapter createRCD1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RCD2CONTENT <em>RCD2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RCD2CONTENT
	 * @generated
	 */
	public Adapter createRCD2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RCD3CONTENT <em>RCD3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RCD3CONTENT
	 * @generated
	 */
	public Adapter createRCD3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RCP1CONTENT <em>RCP1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RCP1CONTENT
	 * @generated
	 */
	public Adapter createRCP1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RCP2CONTENT <em>RCP2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RCP2CONTENT
	 * @generated
	 */
	public Adapter createRCP2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RCP3CONTENT <em>RCP3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RCP3CONTENT
	 * @generated
	 */
	public Adapter createRCP3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RCP4CONTENT <em>RCP4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RCP4CONTENT
	 * @generated
	 */
	public Adapter createRCP4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RCP5CONTENT <em>RCP5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RCP5CONTENT
	 * @generated
	 */
	public Adapter createRCP5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RCP6CONTENT <em>RCP6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RCP6CONTENT
	 * @generated
	 */
	public Adapter createRCP6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RCP7CONTENT <em>RCP7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RCP7CONTENT
	 * @generated
	 */
	public Adapter createRCP7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RCPCONTENT <em>RCPCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RCPCONTENT
	 * @generated
	 */
	public Adapter createRCPCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RDF1CONTENT <em>RDF1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RDF1CONTENT
	 * @generated
	 */
	public Adapter createRDF1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RDF2CONTENT <em>RDF2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RDF2CONTENT
	 * @generated
	 */
	public Adapter createRDF2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RDFCONTENT <em>RDFCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RDFCONTENT
	 * @generated
	 */
	public Adapter createRDFCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RDT1CONTENT <em>RDT1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RDT1CONTENT
	 * @generated
	 */
	public Adapter createRDT1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RDTCONTENT <em>RDTCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RDTCONTENT
	 * @generated
	 */
	public Adapter createRDTCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RF110CONTENT <em>RF110CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RF110CONTENT
	 * @generated
	 */
	public Adapter createRF110CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RF111CONTENT <em>RF111CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RF111CONTENT
	 * @generated
	 */
	public Adapter createRF111CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RF11CONTENT <em>RF11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RF11CONTENT
	 * @generated
	 */
	public Adapter createRF11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RF12CONTENT <em>RF12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RF12CONTENT
	 * @generated
	 */
	public Adapter createRF12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RF13CONTENT <em>RF13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RF13CONTENT
	 * @generated
	 */
	public Adapter createRF13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RF14CONTENT <em>RF14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RF14CONTENT
	 * @generated
	 */
	public Adapter createRF14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RF15CONTENT <em>RF15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RF15CONTENT
	 * @generated
	 */
	public Adapter createRF15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RF16CONTENT <em>RF16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RF16CONTENT
	 * @generated
	 */
	public Adapter createRF16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RF17CONTENT <em>RF17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RF17CONTENT
	 * @generated
	 */
	public Adapter createRF17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RF18CONTENT <em>RF18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RF18CONTENT
	 * @generated
	 */
	public Adapter createRF18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RF19CONTENT <em>RF19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RF19CONTENT
	 * @generated
	 */
	public Adapter createRF19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RF1CONTENT <em>RF1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RF1CONTENT
	 * @generated
	 */
	public Adapter createRF1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RFR <em>RFR</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RFR
	 * @generated
	 */
	public Adapter createRFRAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RFR1CONTENT <em>RFR1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RFR1CONTENT
	 * @generated
	 */
	public Adapter createRFR1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RFR2CONTENT <em>RFR2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RFR2CONTENT
	 * @generated
	 */
	public Adapter createRFR2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RFR3CONTENT <em>RFR3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RFR3CONTENT
	 * @generated
	 */
	public Adapter createRFR3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RFR4CONTENT <em>RFR4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RFR4CONTENT
	 * @generated
	 */
	public Adapter createRFR4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RFR5CONTENT <em>RFR5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RFR5CONTENT
	 * @generated
	 */
	public Adapter createRFR5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RFR6CONTENT <em>RFR6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RFR6CONTENT
	 * @generated
	 */
	public Adapter createRFR6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RFR7CONTENT <em>RFR7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RFR7CONTENT
	 * @generated
	 */
	public Adapter createRFR7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RGS1CONTENT <em>RGS1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RGS1CONTENT
	 * @generated
	 */
	public Adapter createRGS1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RGS2CONTENT <em>RGS2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RGS2CONTENT
	 * @generated
	 */
	public Adapter createRGS2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RGS3CONTENT <em>RGS3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RGS3CONTENT
	 * @generated
	 */
	public Adapter createRGS3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RGSCONTENT <em>RGSCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RGSCONTENT
	 * @generated
	 */
	public Adapter createRGSCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RI <em>RI</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RI
	 * @generated
	 */
	public Adapter createRIAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RI1CONTENT <em>RI1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RI1CONTENT
	 * @generated
	 */
	public Adapter createRI1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RI2CONTENT <em>RI2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RI2CONTENT
	 * @generated
	 */
	public Adapter createRI2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RMC <em>RMC</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RMC
	 * @generated
	 */
	public Adapter createRMCAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RMC1CONTENT <em>RMC1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RMC1CONTENT
	 * @generated
	 */
	public Adapter createRMC1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RMC2CONTENT <em>RMC2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RMC2CONTENT
	 * @generated
	 */
	public Adapter createRMC2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RMC3CONTENT <em>RMC3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RMC3CONTENT
	 * @generated
	 */
	public Adapter createRMC3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RMC4CONTENT <em>RMC4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RMC4CONTENT
	 * @generated
	 */
	public Adapter createRMC4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RMI1CONTENT <em>RMI1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RMI1CONTENT
	 * @generated
	 */
	public Adapter createRMI1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RMI2CONTENT <em>RMI2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RMI2CONTENT
	 * @generated
	 */
	public Adapter createRMI2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RMI3CONTENT <em>RMI3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RMI3CONTENT
	 * @generated
	 */
	public Adapter createRMI3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RMICONTENT <em>RMICONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RMICONTENT
	 * @generated
	 */
	public Adapter createRMICONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ROL10CONTENT <em>ROL10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ROL10CONTENT
	 * @generated
	 */
	public Adapter createROL10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ROL11CONTENT <em>ROL11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ROL11CONTENT
	 * @generated
	 */
	public Adapter createROL11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ROL12CONTENT <em>ROL12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ROL12CONTENT
	 * @generated
	 */
	public Adapter createROL12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ROL1CONTENT <em>ROL1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ROL1CONTENT
	 * @generated
	 */
	public Adapter createROL1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ROL2CONTENT <em>ROL2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ROL2CONTENT
	 * @generated
	 */
	public Adapter createROL2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ROL3CONTENT <em>ROL3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ROL3CONTENT
	 * @generated
	 */
	public Adapter createROL3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ROL4CONTENT <em>ROL4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ROL4CONTENT
	 * @generated
	 */
	public Adapter createROL4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ROL5CONTENT <em>ROL5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ROL5CONTENT
	 * @generated
	 */
	public Adapter createROL5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ROL6CONTENT <em>ROL6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ROL6CONTENT
	 * @generated
	 */
	public Adapter createROL6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ROL7CONTENT <em>ROL7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ROL7CONTENT
	 * @generated
	 */
	public Adapter createROL7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ROL8CONTENT <em>ROL8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ROL8CONTENT
	 * @generated
	 */
	public Adapter createROL8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ROL9CONTENT <em>ROL9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ROL9CONTENT
	 * @generated
	 */
	public Adapter createROL9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.ROLCONTENT <em>ROLCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.ROLCONTENT
	 * @generated
	 */
	public Adapter createROLCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RP <em>RP</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RP
	 * @generated
	 */
	public Adapter createRPAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RP1CONTENT <em>RP1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RP1CONTENT
	 * @generated
	 */
	public Adapter createRP1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RP2CONTENT <em>RP2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RP2CONTENT
	 * @generated
	 */
	public Adapter createRP2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RP3CONTENT <em>RP3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RP3CONTENT
	 * @generated
	 */
	public Adapter createRP3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RP4CONTENT <em>RP4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RP4CONTENT
	 * @generated
	 */
	public Adapter createRP4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RPT <em>RPT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RPT
	 * @generated
	 */
	public Adapter createRPTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RPT10CONTENT <em>RPT10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RPT10CONTENT
	 * @generated
	 */
	public Adapter createRPT10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RPT11CONTENT <em>RPT11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RPT11CONTENT
	 * @generated
	 */
	public Adapter createRPT11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RPT1CONTENT <em>RPT1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RPT1CONTENT
	 * @generated
	 */
	public Adapter createRPT1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RPT2CONTENT <em>RPT2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RPT2CONTENT
	 * @generated
	 */
	public Adapter createRPT2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RPT3CONTENT <em>RPT3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RPT3CONTENT
	 * @generated
	 */
	public Adapter createRPT3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RPT4CONTENT <em>RPT4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RPT4CONTENT
	 * @generated
	 */
	public Adapter createRPT4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RPT5CONTENT <em>RPT5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RPT5CONTENT
	 * @generated
	 */
	public Adapter createRPT5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RPT6CONTENT <em>RPT6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RPT6CONTENT
	 * @generated
	 */
	public Adapter createRPT6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RPT7CONTENT <em>RPT7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RPT7CONTENT
	 * @generated
	 */
	public Adapter createRPT7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RPT8CONTENT <em>RPT8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RPT8CONTENT
	 * @generated
	 */
	public Adapter createRPT8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RPT9CONTENT <em>RPT9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RPT9CONTENT
	 * @generated
	 */
	public Adapter createRPT9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RQ11CONTENT <em>RQ11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RQ11CONTENT
	 * @generated
	 */
	public Adapter createRQ11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RQ12CONTENT <em>RQ12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RQ12CONTENT
	 * @generated
	 */
	public Adapter createRQ12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RQ13CONTENT <em>RQ13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RQ13CONTENT
	 * @generated
	 */
	public Adapter createRQ13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RQ14CONTENT <em>RQ14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RQ14CONTENT
	 * @generated
	 */
	public Adapter createRQ14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RQ15CONTENT <em>RQ15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RQ15CONTENT
	 * @generated
	 */
	public Adapter createRQ15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RQ16CONTENT <em>RQ16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RQ16CONTENT
	 * @generated
	 */
	public Adapter createRQ16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RQ17CONTENT <em>RQ17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RQ17CONTENT
	 * @generated
	 */
	public Adapter createRQ17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RQ1CONTENT <em>RQ1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RQ1CONTENT
	 * @generated
	 */
	public Adapter createRQ1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RQD10CONTENT <em>RQD10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RQD10CONTENT
	 * @generated
	 */
	public Adapter createRQD10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RQD1CONTENT <em>RQD1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RQD1CONTENT
	 * @generated
	 */
	public Adapter createRQD1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RQD2CONTENT <em>RQD2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RQD2CONTENT
	 * @generated
	 */
	public Adapter createRQD2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RQD3CONTENT <em>RQD3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RQD3CONTENT
	 * @generated
	 */
	public Adapter createRQD3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RQD4CONTENT <em>RQD4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RQD4CONTENT
	 * @generated
	 */
	public Adapter createRQD4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RQD5CONTENT <em>RQD5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RQD5CONTENT
	 * @generated
	 */
	public Adapter createRQD5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RQD6CONTENT <em>RQD6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RQD6CONTENT
	 * @generated
	 */
	public Adapter createRQD6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RQD7CONTENT <em>RQD7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RQD7CONTENT
	 * @generated
	 */
	public Adapter createRQD7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RQD8CONTENT <em>RQD8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RQD8CONTENT
	 * @generated
	 */
	public Adapter createRQD8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RQD9CONTENT <em>RQD9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RQD9CONTENT
	 * @generated
	 */
	public Adapter createRQD9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RQDCONTENT <em>RQDCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RQDCONTENT
	 * @generated
	 */
	public Adapter createRQDCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXA10CONTENT <em>RXA10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXA10CONTENT
	 * @generated
	 */
	public Adapter createRXA10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXA11CONTENT <em>RXA11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXA11CONTENT
	 * @generated
	 */
	public Adapter createRXA11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXA12CONTENT <em>RXA12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXA12CONTENT
	 * @generated
	 */
	public Adapter createRXA12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXA13CONTENT <em>RXA13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXA13CONTENT
	 * @generated
	 */
	public Adapter createRXA13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXA14CONTENT <em>RXA14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXA14CONTENT
	 * @generated
	 */
	public Adapter createRXA14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXA15CONTENT <em>RXA15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXA15CONTENT
	 * @generated
	 */
	public Adapter createRXA15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXA16CONTENT <em>RXA16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXA16CONTENT
	 * @generated
	 */
	public Adapter createRXA16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXA17CONTENT <em>RXA17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXA17CONTENT
	 * @generated
	 */
	public Adapter createRXA17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXA18CONTENT <em>RXA18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXA18CONTENT
	 * @generated
	 */
	public Adapter createRXA18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXA19CONTENT <em>RXA19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXA19CONTENT
	 * @generated
	 */
	public Adapter createRXA19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXA1CONTENT <em>RXA1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXA1CONTENT
	 * @generated
	 */
	public Adapter createRXA1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXA20CONTENT <em>RXA20CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXA20CONTENT
	 * @generated
	 */
	public Adapter createRXA20CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXA21CONTENT <em>RXA21CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXA21CONTENT
	 * @generated
	 */
	public Adapter createRXA21CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXA22CONTENT <em>RXA22CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXA22CONTENT
	 * @generated
	 */
	public Adapter createRXA22CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXA23CONTENT <em>RXA23CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXA23CONTENT
	 * @generated
	 */
	public Adapter createRXA23CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXA24CONTENT <em>RXA24CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXA24CONTENT
	 * @generated
	 */
	public Adapter createRXA24CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXA25CONTENT <em>RXA25CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXA25CONTENT
	 * @generated
	 */
	public Adapter createRXA25CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXA26CONTENT <em>RXA26CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXA26CONTENT
	 * @generated
	 */
	public Adapter createRXA26CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXA2CONTENT <em>RXA2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXA2CONTENT
	 * @generated
	 */
	public Adapter createRXA2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXA3CONTENT <em>RXA3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXA3CONTENT
	 * @generated
	 */
	public Adapter createRXA3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXA4CONTENT <em>RXA4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXA4CONTENT
	 * @generated
	 */
	public Adapter createRXA4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXA5CONTENT <em>RXA5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXA5CONTENT
	 * @generated
	 */
	public Adapter createRXA5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXA6CONTENT <em>RXA6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXA6CONTENT
	 * @generated
	 */
	public Adapter createRXA6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXA7CONTENT <em>RXA7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXA7CONTENT
	 * @generated
	 */
	public Adapter createRXA7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXA8CONTENT <em>RXA8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXA8CONTENT
	 * @generated
	 */
	public Adapter createRXA8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXA9CONTENT <em>RXA9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXA9CONTENT
	 * @generated
	 */
	public Adapter createRXA9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXACONTENT <em>RXACONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXACONTENT
	 * @generated
	 */
	public Adapter createRXACONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXC1CONTENT <em>RXC1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXC1CONTENT
	 * @generated
	 */
	public Adapter createRXC1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXC2CONTENT <em>RXC2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXC2CONTENT
	 * @generated
	 */
	public Adapter createRXC2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXC3CONTENT <em>RXC3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXC3CONTENT
	 * @generated
	 */
	public Adapter createRXC3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXC4CONTENT <em>RXC4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXC4CONTENT
	 * @generated
	 */
	public Adapter createRXC4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXC5CONTENT <em>RXC5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXC5CONTENT
	 * @generated
	 */
	public Adapter createRXC5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXC6CONTENT <em>RXC6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXC6CONTENT
	 * @generated
	 */
	public Adapter createRXC6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXC7CONTENT <em>RXC7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXC7CONTENT
	 * @generated
	 */
	public Adapter createRXC7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXC8CONTENT <em>RXC8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXC8CONTENT
	 * @generated
	 */
	public Adapter createRXC8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXC9CONTENT <em>RXC9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXC9CONTENT
	 * @generated
	 */
	public Adapter createRXC9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXCCONTENT <em>RXCCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXCCONTENT
	 * @generated
	 */
	public Adapter createRXCCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXD10CONTENT <em>RXD10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXD10CONTENT
	 * @generated
	 */
	public Adapter createRXD10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXD11CONTENT <em>RXD11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXD11CONTENT
	 * @generated
	 */
	public Adapter createRXD11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXD12CONTENT <em>RXD12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXD12CONTENT
	 * @generated
	 */
	public Adapter createRXD12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXD13CONTENT <em>RXD13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXD13CONTENT
	 * @generated
	 */
	public Adapter createRXD13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXD14CONTENT <em>RXD14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXD14CONTENT
	 * @generated
	 */
	public Adapter createRXD14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXD15CONTENT <em>RXD15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXD15CONTENT
	 * @generated
	 */
	public Adapter createRXD15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXD16CONTENT <em>RXD16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXD16CONTENT
	 * @generated
	 */
	public Adapter createRXD16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXD17CONTENT <em>RXD17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXD17CONTENT
	 * @generated
	 */
	public Adapter createRXD17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXD18CONTENT <em>RXD18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXD18CONTENT
	 * @generated
	 */
	public Adapter createRXD18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXD19CONTENT <em>RXD19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXD19CONTENT
	 * @generated
	 */
	public Adapter createRXD19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXD1CONTENT <em>RXD1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXD1CONTENT
	 * @generated
	 */
	public Adapter createRXD1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXD20CONTENT <em>RXD20CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXD20CONTENT
	 * @generated
	 */
	public Adapter createRXD20CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXD21CONTENT <em>RXD21CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXD21CONTENT
	 * @generated
	 */
	public Adapter createRXD21CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXD22CONTENT <em>RXD22CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXD22CONTENT
	 * @generated
	 */
	public Adapter createRXD22CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXD23CONTENT <em>RXD23CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXD23CONTENT
	 * @generated
	 */
	public Adapter createRXD23CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXD24CONTENT <em>RXD24CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXD24CONTENT
	 * @generated
	 */
	public Adapter createRXD24CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXD25CONTENT <em>RXD25CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXD25CONTENT
	 * @generated
	 */
	public Adapter createRXD25CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXD26CONTENT <em>RXD26CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXD26CONTENT
	 * @generated
	 */
	public Adapter createRXD26CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXD27CONTENT <em>RXD27CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXD27CONTENT
	 * @generated
	 */
	public Adapter createRXD27CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXD28CONTENT <em>RXD28CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXD28CONTENT
	 * @generated
	 */
	public Adapter createRXD28CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXD29CONTENT <em>RXD29CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXD29CONTENT
	 * @generated
	 */
	public Adapter createRXD29CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXD2CONTENT <em>RXD2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXD2CONTENT
	 * @generated
	 */
	public Adapter createRXD2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXD30CONTENT <em>RXD30CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXD30CONTENT
	 * @generated
	 */
	public Adapter createRXD30CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXD31CONTENT <em>RXD31CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXD31CONTENT
	 * @generated
	 */
	public Adapter createRXD31CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXD32CONTENT <em>RXD32CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXD32CONTENT
	 * @generated
	 */
	public Adapter createRXD32CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXD33CONTENT <em>RXD33CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXD33CONTENT
	 * @generated
	 */
	public Adapter createRXD33CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXD3CONTENT <em>RXD3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXD3CONTENT
	 * @generated
	 */
	public Adapter createRXD3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXD4CONTENT <em>RXD4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXD4CONTENT
	 * @generated
	 */
	public Adapter createRXD4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXD5CONTENT <em>RXD5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXD5CONTENT
	 * @generated
	 */
	public Adapter createRXD5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXD6CONTENT <em>RXD6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXD6CONTENT
	 * @generated
	 */
	public Adapter createRXD6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXD7CONTENT <em>RXD7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXD7CONTENT
	 * @generated
	 */
	public Adapter createRXD7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXD8CONTENT <em>RXD8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXD8CONTENT
	 * @generated
	 */
	public Adapter createRXD8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXD9CONTENT <em>RXD9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXD9CONTENT
	 * @generated
	 */
	public Adapter createRXD9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXDCONTENT <em>RXDCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXDCONTENT
	 * @generated
	 */
	public Adapter createRXDCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE10CONTENT <em>RXE10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE10CONTENT
	 * @generated
	 */
	public Adapter createRXE10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE11CONTENT <em>RXE11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE11CONTENT
	 * @generated
	 */
	public Adapter createRXE11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE12CONTENT <em>RXE12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE12CONTENT
	 * @generated
	 */
	public Adapter createRXE12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE13CONTENT <em>RXE13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE13CONTENT
	 * @generated
	 */
	public Adapter createRXE13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE14CONTENT <em>RXE14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE14CONTENT
	 * @generated
	 */
	public Adapter createRXE14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE15CONTENT <em>RXE15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE15CONTENT
	 * @generated
	 */
	public Adapter createRXE15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE16CONTENT <em>RXE16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE16CONTENT
	 * @generated
	 */
	public Adapter createRXE16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE17CONTENT <em>RXE17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE17CONTENT
	 * @generated
	 */
	public Adapter createRXE17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE18CONTENT <em>RXE18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE18CONTENT
	 * @generated
	 */
	public Adapter createRXE18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE19CONTENT <em>RXE19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE19CONTENT
	 * @generated
	 */
	public Adapter createRXE19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE1CONTENT <em>RXE1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE1CONTENT
	 * @generated
	 */
	public Adapter createRXE1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE20CONTENT <em>RXE20CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE20CONTENT
	 * @generated
	 */
	public Adapter createRXE20CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE21CONTENT <em>RXE21CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE21CONTENT
	 * @generated
	 */
	public Adapter createRXE21CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE22CONTENT <em>RXE22CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE22CONTENT
	 * @generated
	 */
	public Adapter createRXE22CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE23CONTENT <em>RXE23CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE23CONTENT
	 * @generated
	 */
	public Adapter createRXE23CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE24CONTENT <em>RXE24CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE24CONTENT
	 * @generated
	 */
	public Adapter createRXE24CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE25CONTENT <em>RXE25CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE25CONTENT
	 * @generated
	 */
	public Adapter createRXE25CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE26CONTENT <em>RXE26CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE26CONTENT
	 * @generated
	 */
	public Adapter createRXE26CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE27CONTENT <em>RXE27CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE27CONTENT
	 * @generated
	 */
	public Adapter createRXE27CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE28CONTENT <em>RXE28CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE28CONTENT
	 * @generated
	 */
	public Adapter createRXE28CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE29CONTENT <em>RXE29CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE29CONTENT
	 * @generated
	 */
	public Adapter createRXE29CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE2CONTENT <em>RXE2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE2CONTENT
	 * @generated
	 */
	public Adapter createRXE2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE30CONTENT <em>RXE30CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE30CONTENT
	 * @generated
	 */
	public Adapter createRXE30CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE31CONTENT <em>RXE31CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE31CONTENT
	 * @generated
	 */
	public Adapter createRXE31CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE32CONTENT <em>RXE32CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE32CONTENT
	 * @generated
	 */
	public Adapter createRXE32CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE33CONTENT <em>RXE33CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE33CONTENT
	 * @generated
	 */
	public Adapter createRXE33CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE34CONTENT <em>RXE34CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE34CONTENT
	 * @generated
	 */
	public Adapter createRXE34CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE35CONTENT <em>RXE35CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE35CONTENT
	 * @generated
	 */
	public Adapter createRXE35CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE36CONTENT <em>RXE36CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE36CONTENT
	 * @generated
	 */
	public Adapter createRXE36CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE37CONTENT <em>RXE37CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE37CONTENT
	 * @generated
	 */
	public Adapter createRXE37CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE38CONTENT <em>RXE38CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE38CONTENT
	 * @generated
	 */
	public Adapter createRXE38CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE39CONTENT <em>RXE39CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE39CONTENT
	 * @generated
	 */
	public Adapter createRXE39CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE3CONTENT <em>RXE3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE3CONTENT
	 * @generated
	 */
	public Adapter createRXE3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE40CONTENT <em>RXE40CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE40CONTENT
	 * @generated
	 */
	public Adapter createRXE40CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE41CONTENT <em>RXE41CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE41CONTENT
	 * @generated
	 */
	public Adapter createRXE41CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE42CONTENT <em>RXE42CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE42CONTENT
	 * @generated
	 */
	public Adapter createRXE42CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE43CONTENT <em>RXE43CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE43CONTENT
	 * @generated
	 */
	public Adapter createRXE43CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE44CONTENT <em>RXE44CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE44CONTENT
	 * @generated
	 */
	public Adapter createRXE44CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE4CONTENT <em>RXE4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE4CONTENT
	 * @generated
	 */
	public Adapter createRXE4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE5CONTENT <em>RXE5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE5CONTENT
	 * @generated
	 */
	public Adapter createRXE5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE6CONTENT <em>RXE6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE6CONTENT
	 * @generated
	 */
	public Adapter createRXE6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE7CONTENT <em>RXE7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE7CONTENT
	 * @generated
	 */
	public Adapter createRXE7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE8CONTENT <em>RXE8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE8CONTENT
	 * @generated
	 */
	public Adapter createRXE8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXE9CONTENT <em>RXE9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXE9CONTENT
	 * @generated
	 */
	public Adapter createRXE9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXECONTENT <em>RXECONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXECONTENT
	 * @generated
	 */
	public Adapter createRXECONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXG10CONTENT <em>RXG10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXG10CONTENT
	 * @generated
	 */
	public Adapter createRXG10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXG11CONTENT <em>RXG11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXG11CONTENT
	 * @generated
	 */
	public Adapter createRXG11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXG12CONTENT <em>RXG12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXG12CONTENT
	 * @generated
	 */
	public Adapter createRXG12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXG13CONTENT <em>RXG13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXG13CONTENT
	 * @generated
	 */
	public Adapter createRXG13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXG14CONTENT <em>RXG14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXG14CONTENT
	 * @generated
	 */
	public Adapter createRXG14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXG15CONTENT <em>RXG15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXG15CONTENT
	 * @generated
	 */
	public Adapter createRXG15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXG16CONTENT <em>RXG16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXG16CONTENT
	 * @generated
	 */
	public Adapter createRXG16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXG17CONTENT <em>RXG17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXG17CONTENT
	 * @generated
	 */
	public Adapter createRXG17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXG18CONTENT <em>RXG18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXG18CONTENT
	 * @generated
	 */
	public Adapter createRXG18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXG19CONTENT <em>RXG19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXG19CONTENT
	 * @generated
	 */
	public Adapter createRXG19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXG1CONTENT <em>RXG1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXG1CONTENT
	 * @generated
	 */
	public Adapter createRXG1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXG20CONTENT <em>RXG20CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXG20CONTENT
	 * @generated
	 */
	public Adapter createRXG20CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXG21CONTENT <em>RXG21CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXG21CONTENT
	 * @generated
	 */
	public Adapter createRXG21CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXG22CONTENT <em>RXG22CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXG22CONTENT
	 * @generated
	 */
	public Adapter createRXG22CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXG23CONTENT <em>RXG23CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXG23CONTENT
	 * @generated
	 */
	public Adapter createRXG23CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXG24CONTENT <em>RXG24CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXG24CONTENT
	 * @generated
	 */
	public Adapter createRXG24CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXG25CONTENT <em>RXG25CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXG25CONTENT
	 * @generated
	 */
	public Adapter createRXG25CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXG26CONTENT <em>RXG26CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXG26CONTENT
	 * @generated
	 */
	public Adapter createRXG26CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXG2CONTENT <em>RXG2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXG2CONTENT
	 * @generated
	 */
	public Adapter createRXG2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXG3CONTENT <em>RXG3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXG3CONTENT
	 * @generated
	 */
	public Adapter createRXG3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXG4CONTENT <em>RXG4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXG4CONTENT
	 * @generated
	 */
	public Adapter createRXG4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXG5CONTENT <em>RXG5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXG5CONTENT
	 * @generated
	 */
	public Adapter createRXG5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXG6CONTENT <em>RXG6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXG6CONTENT
	 * @generated
	 */
	public Adapter createRXG6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXG7CONTENT <em>RXG7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXG7CONTENT
	 * @generated
	 */
	public Adapter createRXG7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXG8CONTENT <em>RXG8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXG8CONTENT
	 * @generated
	 */
	public Adapter createRXG8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXG9CONTENT <em>RXG9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXG9CONTENT
	 * @generated
	 */
	public Adapter createRXG9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXGCONTENT <em>RXGCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXGCONTENT
	 * @generated
	 */
	public Adapter createRXGCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXO10CONTENT <em>RXO10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXO10CONTENT
	 * @generated
	 */
	public Adapter createRXO10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXO11CONTENT <em>RXO11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXO11CONTENT
	 * @generated
	 */
	public Adapter createRXO11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXO12CONTENT <em>RXO12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXO12CONTENT
	 * @generated
	 */
	public Adapter createRXO12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXO13CONTENT <em>RXO13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXO13CONTENT
	 * @generated
	 */
	public Adapter createRXO13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXO14CONTENT <em>RXO14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXO14CONTENT
	 * @generated
	 */
	public Adapter createRXO14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXO15CONTENT <em>RXO15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXO15CONTENT
	 * @generated
	 */
	public Adapter createRXO15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXO16CONTENT <em>RXO16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXO16CONTENT
	 * @generated
	 */
	public Adapter createRXO16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXO17CONTENT <em>RXO17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXO17CONTENT
	 * @generated
	 */
	public Adapter createRXO17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXO18CONTENT <em>RXO18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXO18CONTENT
	 * @generated
	 */
	public Adapter createRXO18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXO19CONTENT <em>RXO19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXO19CONTENT
	 * @generated
	 */
	public Adapter createRXO19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXO1CONTENT <em>RXO1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXO1CONTENT
	 * @generated
	 */
	public Adapter createRXO1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXO20CONTENT <em>RXO20CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXO20CONTENT
	 * @generated
	 */
	public Adapter createRXO20CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXO21CONTENT <em>RXO21CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXO21CONTENT
	 * @generated
	 */
	public Adapter createRXO21CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXO22CONTENT <em>RXO22CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXO22CONTENT
	 * @generated
	 */
	public Adapter createRXO22CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXO23CONTENT <em>RXO23CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXO23CONTENT
	 * @generated
	 */
	public Adapter createRXO23CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXO24CONTENT <em>RXO24CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXO24CONTENT
	 * @generated
	 */
	public Adapter createRXO24CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXO25CONTENT <em>RXO25CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXO25CONTENT
	 * @generated
	 */
	public Adapter createRXO25CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXO26CONTENT <em>RXO26CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXO26CONTENT
	 * @generated
	 */
	public Adapter createRXO26CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXO27CONTENT <em>RXO27CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXO27CONTENT
	 * @generated
	 */
	public Adapter createRXO27CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXO28CONTENT <em>RXO28CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXO28CONTENT
	 * @generated
	 */
	public Adapter createRXO28CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXO2CONTENT <em>RXO2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXO2CONTENT
	 * @generated
	 */
	public Adapter createRXO2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXO3CONTENT <em>RXO3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXO3CONTENT
	 * @generated
	 */
	public Adapter createRXO3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXO4CONTENT <em>RXO4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXO4CONTENT
	 * @generated
	 */
	public Adapter createRXO4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXO5CONTENT <em>RXO5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXO5CONTENT
	 * @generated
	 */
	public Adapter createRXO5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXO6CONTENT <em>RXO6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXO6CONTENT
	 * @generated
	 */
	public Adapter createRXO6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXO7CONTENT <em>RXO7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXO7CONTENT
	 * @generated
	 */
	public Adapter createRXO7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXO8CONTENT <em>RXO8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXO8CONTENT
	 * @generated
	 */
	public Adapter createRXO8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXO9CONTENT <em>RXO9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXO9CONTENT
	 * @generated
	 */
	public Adapter createRXO9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXOCONTENT <em>RXOCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXOCONTENT
	 * @generated
	 */
	public Adapter createRXOCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXR1CONTENT <em>RXR1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXR1CONTENT
	 * @generated
	 */
	public Adapter createRXR1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXR2CONTENT <em>RXR2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXR2CONTENT
	 * @generated
	 */
	public Adapter createRXR2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXR3CONTENT <em>RXR3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXR3CONTENT
	 * @generated
	 */
	public Adapter createRXR3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXR4CONTENT <em>RXR4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXR4CONTENT
	 * @generated
	 */
	public Adapter createRXR4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXR5CONTENT <em>RXR5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXR5CONTENT
	 * @generated
	 */
	public Adapter createRXR5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXR6CONTENT <em>RXR6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXR6CONTENT
	 * @generated
	 */
	public Adapter createRXR6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.RXRCONTENT <em>RXRCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.RXRCONTENT
	 * @generated
	 */
	public Adapter createRXRCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC10CONTENT <em>SAC10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC10CONTENT
	 * @generated
	 */
	public Adapter createSAC10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC11CONTENT <em>SAC11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC11CONTENT
	 * @generated
	 */
	public Adapter createSAC11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC12CONTENT <em>SAC12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC12CONTENT
	 * @generated
	 */
	public Adapter createSAC12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC13CONTENT <em>SAC13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC13CONTENT
	 * @generated
	 */
	public Adapter createSAC13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC14CONTENT <em>SAC14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC14CONTENT
	 * @generated
	 */
	public Adapter createSAC14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC15CONTENT <em>SAC15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC15CONTENT
	 * @generated
	 */
	public Adapter createSAC15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC16CONTENT <em>SAC16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC16CONTENT
	 * @generated
	 */
	public Adapter createSAC16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC17CONTENT <em>SAC17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC17CONTENT
	 * @generated
	 */
	public Adapter createSAC17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC18CONTENT <em>SAC18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC18CONTENT
	 * @generated
	 */
	public Adapter createSAC18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC19CONTENT <em>SAC19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC19CONTENT
	 * @generated
	 */
	public Adapter createSAC19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC1CONTENT <em>SAC1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC1CONTENT
	 * @generated
	 */
	public Adapter createSAC1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC20CONTENT <em>SAC20CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC20CONTENT
	 * @generated
	 */
	public Adapter createSAC20CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC21CONTENT <em>SAC21CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC21CONTENT
	 * @generated
	 */
	public Adapter createSAC21CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC22CONTENT <em>SAC22CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC22CONTENT
	 * @generated
	 */
	public Adapter createSAC22CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC23CONTENT <em>SAC23CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC23CONTENT
	 * @generated
	 */
	public Adapter createSAC23CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC24CONTENT <em>SAC24CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC24CONTENT
	 * @generated
	 */
	public Adapter createSAC24CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC25CONTENT <em>SAC25CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC25CONTENT
	 * @generated
	 */
	public Adapter createSAC25CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC26CONTENT <em>SAC26CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC26CONTENT
	 * @generated
	 */
	public Adapter createSAC26CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC27CONTENT <em>SAC27CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC27CONTENT
	 * @generated
	 */
	public Adapter createSAC27CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC28CONTENT <em>SAC28CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC28CONTENT
	 * @generated
	 */
	public Adapter createSAC28CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC29CONTENT <em>SAC29CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC29CONTENT
	 * @generated
	 */
	public Adapter createSAC29CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC2CONTENT <em>SAC2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC2CONTENT
	 * @generated
	 */
	public Adapter createSAC2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC30CONTENT <em>SAC30CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC30CONTENT
	 * @generated
	 */
	public Adapter createSAC30CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC31CONTENT <em>SAC31CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC31CONTENT
	 * @generated
	 */
	public Adapter createSAC31CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC32CONTENT <em>SAC32CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC32CONTENT
	 * @generated
	 */
	public Adapter createSAC32CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC33CONTENT <em>SAC33CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC33CONTENT
	 * @generated
	 */
	public Adapter createSAC33CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC34CONTENT <em>SAC34CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC34CONTENT
	 * @generated
	 */
	public Adapter createSAC34CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC35CONTENT <em>SAC35CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC35CONTENT
	 * @generated
	 */
	public Adapter createSAC35CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC36CONTENT <em>SAC36CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC36CONTENT
	 * @generated
	 */
	public Adapter createSAC36CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC37CONTENT <em>SAC37CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC37CONTENT
	 * @generated
	 */
	public Adapter createSAC37CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC38CONTENT <em>SAC38CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC38CONTENT
	 * @generated
	 */
	public Adapter createSAC38CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC39CONTENT <em>SAC39CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC39CONTENT
	 * @generated
	 */
	public Adapter createSAC39CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC3CONTENT <em>SAC3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC3CONTENT
	 * @generated
	 */
	public Adapter createSAC3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC40CONTENT <em>SAC40CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC40CONTENT
	 * @generated
	 */
	public Adapter createSAC40CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC41CONTENT <em>SAC41CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC41CONTENT
	 * @generated
	 */
	public Adapter createSAC41CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC42CONTENT <em>SAC42CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC42CONTENT
	 * @generated
	 */
	public Adapter createSAC42CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC43CONTENT <em>SAC43CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC43CONTENT
	 * @generated
	 */
	public Adapter createSAC43CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC44CONTENT <em>SAC44CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC44CONTENT
	 * @generated
	 */
	public Adapter createSAC44CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC4CONTENT <em>SAC4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC4CONTENT
	 * @generated
	 */
	public Adapter createSAC4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC5CONTENT <em>SAC5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC5CONTENT
	 * @generated
	 */
	public Adapter createSAC5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC6CONTENT <em>SAC6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC6CONTENT
	 * @generated
	 */
	public Adapter createSAC6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC7CONTENT <em>SAC7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC7CONTENT
	 * @generated
	 */
	public Adapter createSAC7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC8CONTENT <em>SAC8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC8CONTENT
	 * @generated
	 */
	public Adapter createSAC8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAC9CONTENT <em>SAC9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAC9CONTENT
	 * @generated
	 */
	public Adapter createSAC9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SACCONTENT <em>SACCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SACCONTENT
	 * @generated
	 */
	public Adapter createSACCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAD <em>SAD</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAD
	 * @generated
	 */
	public Adapter createSADAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAD1CONTENT <em>SAD1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAD1CONTENT
	 * @generated
	 */
	public Adapter createSAD1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAD2CONTENT <em>SAD2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAD2CONTENT
	 * @generated
	 */
	public Adapter createSAD2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SAD3CONTENT <em>SAD3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SAD3CONTENT
	 * @generated
	 */
	public Adapter createSAD3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SCH10CONTENT <em>SCH10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SCH10CONTENT
	 * @generated
	 */
	public Adapter createSCH10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SCH11CONTENT <em>SCH11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SCH11CONTENT
	 * @generated
	 */
	public Adapter createSCH11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SCH12CONTENT <em>SCH12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SCH12CONTENT
	 * @generated
	 */
	public Adapter createSCH12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SCH13CONTENT <em>SCH13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SCH13CONTENT
	 * @generated
	 */
	public Adapter createSCH13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SCH14CONTENT <em>SCH14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SCH14CONTENT
	 * @generated
	 */
	public Adapter createSCH14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SCH15CONTENT <em>SCH15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SCH15CONTENT
	 * @generated
	 */
	public Adapter createSCH15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SCH16CONTENT <em>SCH16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SCH16CONTENT
	 * @generated
	 */
	public Adapter createSCH16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SCH17CONTENT <em>SCH17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SCH17CONTENT
	 * @generated
	 */
	public Adapter createSCH17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SCH18CONTENT <em>SCH18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SCH18CONTENT
	 * @generated
	 */
	public Adapter createSCH18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SCH19CONTENT <em>SCH19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SCH19CONTENT
	 * @generated
	 */
	public Adapter createSCH19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SCH1CONTENT <em>SCH1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SCH1CONTENT
	 * @generated
	 */
	public Adapter createSCH1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SCH20CONTENT <em>SCH20CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SCH20CONTENT
	 * @generated
	 */
	public Adapter createSCH20CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SCH21CONTENT <em>SCH21CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SCH21CONTENT
	 * @generated
	 */
	public Adapter createSCH21CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SCH22CONTENT <em>SCH22CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SCH22CONTENT
	 * @generated
	 */
	public Adapter createSCH22CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SCH23CONTENT <em>SCH23CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SCH23CONTENT
	 * @generated
	 */
	public Adapter createSCH23CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SCH24CONTENT <em>SCH24CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SCH24CONTENT
	 * @generated
	 */
	public Adapter createSCH24CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SCH25CONTENT <em>SCH25CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SCH25CONTENT
	 * @generated
	 */
	public Adapter createSCH25CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SCH26CONTENT <em>SCH26CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SCH26CONTENT
	 * @generated
	 */
	public Adapter createSCH26CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SCH27CONTENT <em>SCH27CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SCH27CONTENT
	 * @generated
	 */
	public Adapter createSCH27CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SCH2CONTENT <em>SCH2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SCH2CONTENT
	 * @generated
	 */
	public Adapter createSCH2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SCH3CONTENT <em>SCH3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SCH3CONTENT
	 * @generated
	 */
	public Adapter createSCH3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SCH4CONTENT <em>SCH4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SCH4CONTENT
	 * @generated
	 */
	public Adapter createSCH4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SCH5CONTENT <em>SCH5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SCH5CONTENT
	 * @generated
	 */
	public Adapter createSCH5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SCH6CONTENT <em>SCH6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SCH6CONTENT
	 * @generated
	 */
	public Adapter createSCH6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SCH7CONTENT <em>SCH7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SCH7CONTENT
	 * @generated
	 */
	public Adapter createSCH7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SCH8CONTENT <em>SCH8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SCH8CONTENT
	 * @generated
	 */
	public Adapter createSCH8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SCH9CONTENT <em>SCH9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SCH9CONTENT
	 * @generated
	 */
	public Adapter createSCH9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SCHCONTENT <em>SCHCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SCHCONTENT
	 * @generated
	 */
	public Adapter createSCHCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SCV <em>SCV</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SCV
	 * @generated
	 */
	public Adapter createSCVAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SCV1CONTENT <em>SCV1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SCV1CONTENT
	 * @generated
	 */
	public Adapter createSCV1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SCV2CONTENT <em>SCV2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SCV2CONTENT
	 * @generated
	 */
	public Adapter createSCV2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SFT1CONTENT <em>SFT1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SFT1CONTENT
	 * @generated
	 */
	public Adapter createSFT1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SFT2CONTENT <em>SFT2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SFT2CONTENT
	 * @generated
	 */
	public Adapter createSFT2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SFT3CONTENT <em>SFT3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SFT3CONTENT
	 * @generated
	 */
	public Adapter createSFT3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SFT4CONTENT <em>SFT4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SFT4CONTENT
	 * @generated
	 */
	public Adapter createSFT4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SFT5CONTENT <em>SFT5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SFT5CONTENT
	 * @generated
	 */
	public Adapter createSFT5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SFT6CONTENT <em>SFT6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SFT6CONTENT
	 * @generated
	 */
	public Adapter createSFT6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SFTCONTENT <em>SFTCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SFTCONTENT
	 * @generated
	 */
	public Adapter createSFTCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SID1CONTENT <em>SID1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SID1CONTENT
	 * @generated
	 */
	public Adapter createSID1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SID2CONTENT <em>SID2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SID2CONTENT
	 * @generated
	 */
	public Adapter createSID2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SID3CONTENT <em>SID3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SID3CONTENT
	 * @generated
	 */
	public Adapter createSID3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SID4CONTENT <em>SID4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SID4CONTENT
	 * @generated
	 */
	public Adapter createSID4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SIDCONTENT <em>SIDCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SIDCONTENT
	 * @generated
	 */
	public Adapter createSIDCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SN <em>SN</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SN
	 * @generated
	 */
	public Adapter createSNAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SN1CONTENT <em>SN1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SN1CONTENT
	 * @generated
	 */
	public Adapter createSN1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SN2CONTENT <em>SN2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SN2CONTENT
	 * @generated
	 */
	public Adapter createSN2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SN3CONTENT <em>SN3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SN3CONTENT
	 * @generated
	 */
	public Adapter createSN3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SN4CONTENT <em>SN4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SN4CONTENT
	 * @generated
	 */
	public Adapter createSN4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPD <em>SPD</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPD
	 * @generated
	 */
	public Adapter createSPDAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPD1CONTENT <em>SPD1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPD1CONTENT
	 * @generated
	 */
	public Adapter createSPD1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPD2CONTENT <em>SPD2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPD2CONTENT
	 * @generated
	 */
	public Adapter createSPD2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPD3CONTENT <em>SPD3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPD3CONTENT
	 * @generated
	 */
	public Adapter createSPD3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPD4CONTENT <em>SPD4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPD4CONTENT
	 * @generated
	 */
	public Adapter createSPD4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPM10CONTENT <em>SPM10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPM10CONTENT
	 * @generated
	 */
	public Adapter createSPM10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPM11CONTENT <em>SPM11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPM11CONTENT
	 * @generated
	 */
	public Adapter createSPM11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPM12CONTENT <em>SPM12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPM12CONTENT
	 * @generated
	 */
	public Adapter createSPM12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPM13CONTENT <em>SPM13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPM13CONTENT
	 * @generated
	 */
	public Adapter createSPM13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPM14CONTENT <em>SPM14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPM14CONTENT
	 * @generated
	 */
	public Adapter createSPM14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPM15CONTENT <em>SPM15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPM15CONTENT
	 * @generated
	 */
	public Adapter createSPM15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPM16CONTENT <em>SPM16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPM16CONTENT
	 * @generated
	 */
	public Adapter createSPM16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPM17CONTENT <em>SPM17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPM17CONTENT
	 * @generated
	 */
	public Adapter createSPM17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPM18CONTENT <em>SPM18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPM18CONTENT
	 * @generated
	 */
	public Adapter createSPM18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPM19CONTENT <em>SPM19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPM19CONTENT
	 * @generated
	 */
	public Adapter createSPM19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPM1CONTENT <em>SPM1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPM1CONTENT
	 * @generated
	 */
	public Adapter createSPM1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPM20CONTENT <em>SPM20CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPM20CONTENT
	 * @generated
	 */
	public Adapter createSPM20CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPM21CONTENT <em>SPM21CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPM21CONTENT
	 * @generated
	 */
	public Adapter createSPM21CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPM22CONTENT <em>SPM22CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPM22CONTENT
	 * @generated
	 */
	public Adapter createSPM22CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPM23CONTENT <em>SPM23CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPM23CONTENT
	 * @generated
	 */
	public Adapter createSPM23CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPM24CONTENT <em>SPM24CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPM24CONTENT
	 * @generated
	 */
	public Adapter createSPM24CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPM25CONTENT <em>SPM25CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPM25CONTENT
	 * @generated
	 */
	public Adapter createSPM25CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPM26CONTENT <em>SPM26CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPM26CONTENT
	 * @generated
	 */
	public Adapter createSPM26CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPM27CONTENT <em>SPM27CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPM27CONTENT
	 * @generated
	 */
	public Adapter createSPM27CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPM28CONTENT <em>SPM28CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPM28CONTENT
	 * @generated
	 */
	public Adapter createSPM28CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPM29CONTENT <em>SPM29CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPM29CONTENT
	 * @generated
	 */
	public Adapter createSPM29CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPM2CONTENT <em>SPM2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPM2CONTENT
	 * @generated
	 */
	public Adapter createSPM2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPM3CONTENT <em>SPM3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPM3CONTENT
	 * @generated
	 */
	public Adapter createSPM3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPM4CONTENT <em>SPM4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPM4CONTENT
	 * @generated
	 */
	public Adapter createSPM4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPM5CONTENT <em>SPM5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPM5CONTENT
	 * @generated
	 */
	public Adapter createSPM5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPM6CONTENT <em>SPM6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPM6CONTENT
	 * @generated
	 */
	public Adapter createSPM6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPM7CONTENT <em>SPM7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPM7CONTENT
	 * @generated
	 */
	public Adapter createSPM7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPM8CONTENT <em>SPM8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPM8CONTENT
	 * @generated
	 */
	public Adapter createSPM8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPM9CONTENT <em>SPM9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPM9CONTENT
	 * @generated
	 */
	public Adapter createSPM9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPMCONTENT <em>SPMCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPMCONTENT
	 * @generated
	 */
	public Adapter createSPMCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPR1CONTENT <em>SPR1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPR1CONTENT
	 * @generated
	 */
	public Adapter createSPR1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPR2CONTENT <em>SPR2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPR2CONTENT
	 * @generated
	 */
	public Adapter createSPR2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPR3CONTENT <em>SPR3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPR3CONTENT
	 * @generated
	 */
	public Adapter createSPR3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPR4CONTENT <em>SPR4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPR4CONTENT
	 * @generated
	 */
	public Adapter createSPR4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPRCONTENT <em>SPRCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPRCONTENT
	 * @generated
	 */
	public Adapter createSPRCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPS <em>SPS</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPS
	 * @generated
	 */
	public Adapter createSPSAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPS1CONTENT <em>SPS1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPS1CONTENT
	 * @generated
	 */
	public Adapter createSPS1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPS2CONTENT <em>SPS2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPS2CONTENT
	 * @generated
	 */
	public Adapter createSPS2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPS3CONTENT <em>SPS3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPS3CONTENT
	 * @generated
	 */
	public Adapter createSPS3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPS4CONTENT <em>SPS4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPS4CONTENT
	 * @generated
	 */
	public Adapter createSPS4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPS5CONTENT <em>SPS5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPS5CONTENT
	 * @generated
	 */
	public Adapter createSPS5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPS6CONTENT <em>SPS6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPS6CONTENT
	 * @generated
	 */
	public Adapter createSPS6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SPS7CONTENT <em>SPS7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SPS7CONTENT
	 * @generated
	 */
	public Adapter createSPS7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SRT <em>SRT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SRT
	 * @generated
	 */
	public Adapter createSRTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SRT1CONTENT <em>SRT1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SRT1CONTENT
	 * @generated
	 */
	public Adapter createSRT1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.SRT2CONTENT <em>SRT2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.SRT2CONTENT
	 * @generated
	 */
	public Adapter createSRT2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF10CONTENT <em>STF10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF10CONTENT
	 * @generated
	 */
	public Adapter createSTF10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF11CONTENT <em>STF11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF11CONTENT
	 * @generated
	 */
	public Adapter createSTF11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF12CONTENT <em>STF12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF12CONTENT
	 * @generated
	 */
	public Adapter createSTF12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF13CONTENT <em>STF13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF13CONTENT
	 * @generated
	 */
	public Adapter createSTF13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF14CONTENT <em>STF14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF14CONTENT
	 * @generated
	 */
	public Adapter createSTF14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF15CONTENT <em>STF15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF15CONTENT
	 * @generated
	 */
	public Adapter createSTF15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF16CONTENT <em>STF16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF16CONTENT
	 * @generated
	 */
	public Adapter createSTF16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF17CONTENT <em>STF17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF17CONTENT
	 * @generated
	 */
	public Adapter createSTF17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF18CONTENT <em>STF18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF18CONTENT
	 * @generated
	 */
	public Adapter createSTF18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF19CONTENT <em>STF19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF19CONTENT
	 * @generated
	 */
	public Adapter createSTF19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF1CONTENT <em>STF1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF1CONTENT
	 * @generated
	 */
	public Adapter createSTF1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF20CONTENT <em>STF20CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF20CONTENT
	 * @generated
	 */
	public Adapter createSTF20CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF21CONTENT <em>STF21CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF21CONTENT
	 * @generated
	 */
	public Adapter createSTF21CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF22CONTENT <em>STF22CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF22CONTENT
	 * @generated
	 */
	public Adapter createSTF22CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF23CONTENT <em>STF23CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF23CONTENT
	 * @generated
	 */
	public Adapter createSTF23CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF24CONTENT <em>STF24CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF24CONTENT
	 * @generated
	 */
	public Adapter createSTF24CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF25CONTENT <em>STF25CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF25CONTENT
	 * @generated
	 */
	public Adapter createSTF25CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF26CONTENT <em>STF26CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF26CONTENT
	 * @generated
	 */
	public Adapter createSTF26CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF27CONTENT <em>STF27CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF27CONTENT
	 * @generated
	 */
	public Adapter createSTF27CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF28CONTENT <em>STF28CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF28CONTENT
	 * @generated
	 */
	public Adapter createSTF28CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF29CONTENT <em>STF29CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF29CONTENT
	 * @generated
	 */
	public Adapter createSTF29CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF2CONTENT <em>STF2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF2CONTENT
	 * @generated
	 */
	public Adapter createSTF2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF30CONTENT <em>STF30CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF30CONTENT
	 * @generated
	 */
	public Adapter createSTF30CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF31CONTENT <em>STF31CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF31CONTENT
	 * @generated
	 */
	public Adapter createSTF31CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF32CONTENT <em>STF32CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF32CONTENT
	 * @generated
	 */
	public Adapter createSTF32CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF33CONTENT <em>STF33CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF33CONTENT
	 * @generated
	 */
	public Adapter createSTF33CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF34CONTENT <em>STF34CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF34CONTENT
	 * @generated
	 */
	public Adapter createSTF34CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF35CONTENT <em>STF35CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF35CONTENT
	 * @generated
	 */
	public Adapter createSTF35CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF36CONTENT <em>STF36CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF36CONTENT
	 * @generated
	 */
	public Adapter createSTF36CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF37CONTENT <em>STF37CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF37CONTENT
	 * @generated
	 */
	public Adapter createSTF37CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF38CONTENT <em>STF38CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF38CONTENT
	 * @generated
	 */
	public Adapter createSTF38CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF3CONTENT <em>STF3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF3CONTENT
	 * @generated
	 */
	public Adapter createSTF3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF4CONTENT <em>STF4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF4CONTENT
	 * @generated
	 */
	public Adapter createSTF4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF5CONTENT <em>STF5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF5CONTENT
	 * @generated
	 */
	public Adapter createSTF5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF6CONTENT <em>STF6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF6CONTENT
	 * @generated
	 */
	public Adapter createSTF6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF7CONTENT <em>STF7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF7CONTENT
	 * @generated
	 */
	public Adapter createSTF7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF8CONTENT <em>STF8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF8CONTENT
	 * @generated
	 */
	public Adapter createSTF8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STF9CONTENT <em>STF9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STF9CONTENT
	 * @generated
	 */
	public Adapter createSTF9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.STFCONTENT <em>STFCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.STFCONTENT
	 * @generated
	 */
	public Adapter createSTFCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TCC10CONTENT <em>TCC10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TCC10CONTENT
	 * @generated
	 */
	public Adapter createTCC10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TCC11CONTENT <em>TCC11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TCC11CONTENT
	 * @generated
	 */
	public Adapter createTCC11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TCC12CONTENT <em>TCC12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TCC12CONTENT
	 * @generated
	 */
	public Adapter createTCC12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TCC13CONTENT <em>TCC13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TCC13CONTENT
	 * @generated
	 */
	public Adapter createTCC13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TCC14CONTENT <em>TCC14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TCC14CONTENT
	 * @generated
	 */
	public Adapter createTCC14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TCC1CONTENT <em>TCC1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TCC1CONTENT
	 * @generated
	 */
	public Adapter createTCC1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TCC2CONTENT <em>TCC2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TCC2CONTENT
	 * @generated
	 */
	public Adapter createTCC2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TCC3CONTENT <em>TCC3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TCC3CONTENT
	 * @generated
	 */
	public Adapter createTCC3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TCC4CONTENT <em>TCC4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TCC4CONTENT
	 * @generated
	 */
	public Adapter createTCC4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TCC5CONTENT <em>TCC5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TCC5CONTENT
	 * @generated
	 */
	public Adapter createTCC5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TCC6CONTENT <em>TCC6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TCC6CONTENT
	 * @generated
	 */
	public Adapter createTCC6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TCC7CONTENT <em>TCC7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TCC7CONTENT
	 * @generated
	 */
	public Adapter createTCC7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TCC8CONTENT <em>TCC8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TCC8CONTENT
	 * @generated
	 */
	public Adapter createTCC8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TCC9CONTENT <em>TCC9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TCC9CONTENT
	 * @generated
	 */
	public Adapter createTCC9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TCCCONTENT <em>TCCCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TCCCONTENT
	 * @generated
	 */
	public Adapter createTCCCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TCD1CONTENT <em>TCD1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TCD1CONTENT
	 * @generated
	 */
	public Adapter createTCD1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TCD2CONTENT <em>TCD2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TCD2CONTENT
	 * @generated
	 */
	public Adapter createTCD2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TCD3CONTENT <em>TCD3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TCD3CONTENT
	 * @generated
	 */
	public Adapter createTCD3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TCD4CONTENT <em>TCD4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TCD4CONTENT
	 * @generated
	 */
	public Adapter createTCD4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TCD5CONTENT <em>TCD5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TCD5CONTENT
	 * @generated
	 */
	public Adapter createTCD5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TCD6CONTENT <em>TCD6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TCD6CONTENT
	 * @generated
	 */
	public Adapter createTCD6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TCD7CONTENT <em>TCD7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TCD7CONTENT
	 * @generated
	 */
	public Adapter createTCD7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TCD8CONTENT <em>TCD8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TCD8CONTENT
	 * @generated
	 */
	public Adapter createTCD8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TCDCONTENT <em>TCDCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TCDCONTENT
	 * @generated
	 */
	public Adapter createTCDCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ <em>TQ</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ
	 * @generated
	 */
	public Adapter createTQAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ10CONTENT <em>TQ10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ10CONTENT
	 * @generated
	 */
	public Adapter createTQ10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ110CONTENT <em>TQ110CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ110CONTENT
	 * @generated
	 */
	public Adapter createTQ110CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ111CONTENT <em>TQ111CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ111CONTENT
	 * @generated
	 */
	public Adapter createTQ111CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ112CONTENT <em>TQ112CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ112CONTENT
	 * @generated
	 */
	public Adapter createTQ112CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ113CONTENT <em>TQ113CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ113CONTENT
	 * @generated
	 */
	public Adapter createTQ113CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ114CONTENT <em>TQ114CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ114CONTENT
	 * @generated
	 */
	public Adapter createTQ114CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ11CONTENT <em>TQ11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ11CONTENT
	 * @generated
	 */
	public Adapter createTQ11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ11CONTENT1 <em>TQ11CONTENT1</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ11CONTENT1
	 * @generated
	 */
	public Adapter createTQ11CONTENT1Adapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ12CONTENT <em>TQ12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ12CONTENT
	 * @generated
	 */
	public Adapter createTQ12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ12CONTENT1 <em>TQ12CONTENT1</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ12CONTENT1
	 * @generated
	 */
	public Adapter createTQ12CONTENT1Adapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ13CONTENT <em>TQ13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ13CONTENT
	 * @generated
	 */
	public Adapter createTQ13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ14CONTENT <em>TQ14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ14CONTENT
	 * @generated
	 */
	public Adapter createTQ14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ15CONTENT <em>TQ15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ15CONTENT
	 * @generated
	 */
	public Adapter createTQ15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ16CONTENT <em>TQ16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ16CONTENT
	 * @generated
	 */
	public Adapter createTQ16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ17CONTENT <em>TQ17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ17CONTENT
	 * @generated
	 */
	public Adapter createTQ17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ18CONTENT <em>TQ18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ18CONTENT
	 * @generated
	 */
	public Adapter createTQ18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ19CONTENT <em>TQ19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ19CONTENT
	 * @generated
	 */
	public Adapter createTQ19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ1CONTENT <em>TQ1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ1CONTENT
	 * @generated
	 */
	public Adapter createTQ1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ1CONTENT1 <em>TQ1CONTENT1</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ1CONTENT1
	 * @generated
	 */
	public Adapter createTQ1CONTENT1Adapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ210CONTENT <em>TQ210CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ210CONTENT
	 * @generated
	 */
	public Adapter createTQ210CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ21CONTENT <em>TQ21CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ21CONTENT
	 * @generated
	 */
	public Adapter createTQ21CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ22CONTENT <em>TQ22CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ22CONTENT
	 * @generated
	 */
	public Adapter createTQ22CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ23CONTENT <em>TQ23CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ23CONTENT
	 * @generated
	 */
	public Adapter createTQ23CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ24CONTENT <em>TQ24CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ24CONTENT
	 * @generated
	 */
	public Adapter createTQ24CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ25CONTENT <em>TQ25CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ25CONTENT
	 * @generated
	 */
	public Adapter createTQ25CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ26CONTENT <em>TQ26CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ26CONTENT
	 * @generated
	 */
	public Adapter createTQ26CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ27CONTENT <em>TQ27CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ27CONTENT
	 * @generated
	 */
	public Adapter createTQ27CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ28CONTENT <em>TQ28CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ28CONTENT
	 * @generated
	 */
	public Adapter createTQ28CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ29CONTENT <em>TQ29CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ29CONTENT
	 * @generated
	 */
	public Adapter createTQ29CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ2CONTENT <em>TQ2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ2CONTENT
	 * @generated
	 */
	public Adapter createTQ2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ2CONTENT1 <em>TQ2CONTENT1</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ2CONTENT1
	 * @generated
	 */
	public Adapter createTQ2CONTENT1Adapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ3CONTENT <em>TQ3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ3CONTENT
	 * @generated
	 */
	public Adapter createTQ3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ4CONTENT <em>TQ4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ4CONTENT
	 * @generated
	 */
	public Adapter createTQ4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ5CONTENT <em>TQ5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ5CONTENT
	 * @generated
	 */
	public Adapter createTQ5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ6CONTENT <em>TQ6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ6CONTENT
	 * @generated
	 */
	public Adapter createTQ6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ7CONTENT <em>TQ7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ7CONTENT
	 * @generated
	 */
	public Adapter createTQ7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ8CONTENT <em>TQ8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ8CONTENT
	 * @generated
	 */
	public Adapter createTQ8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TQ9CONTENT <em>TQ9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TQ9CONTENT
	 * @generated
	 */
	public Adapter createTQ9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TS <em>TS</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TS
	 * @generated
	 */
	public Adapter createTSAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TS1CONTENT <em>TS1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TS1CONTENT
	 * @generated
	 */
	public Adapter createTS1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TS2CONTENT <em>TS2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TS2CONTENT
	 * @generated
	 */
	public Adapter createTS2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TX <em>TX</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TX
	 * @generated
	 */
	public Adapter createTXAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TXA10CONTENT <em>TXA10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TXA10CONTENT
	 * @generated
	 */
	public Adapter createTXA10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TXA11CONTENT <em>TXA11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TXA11CONTENT
	 * @generated
	 */
	public Adapter createTXA11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TXA12CONTENT <em>TXA12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TXA12CONTENT
	 * @generated
	 */
	public Adapter createTXA12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TXA13CONTENT <em>TXA13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TXA13CONTENT
	 * @generated
	 */
	public Adapter createTXA13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TXA14CONTENT <em>TXA14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TXA14CONTENT
	 * @generated
	 */
	public Adapter createTXA14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TXA15CONTENT <em>TXA15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TXA15CONTENT
	 * @generated
	 */
	public Adapter createTXA15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TXA16CONTENT <em>TXA16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TXA16CONTENT
	 * @generated
	 */
	public Adapter createTXA16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TXA17CONTENT <em>TXA17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TXA17CONTENT
	 * @generated
	 */
	public Adapter createTXA17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TXA18CONTENT <em>TXA18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TXA18CONTENT
	 * @generated
	 */
	public Adapter createTXA18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TXA19CONTENT <em>TXA19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TXA19CONTENT
	 * @generated
	 */
	public Adapter createTXA19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TXA1CONTENT <em>TXA1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TXA1CONTENT
	 * @generated
	 */
	public Adapter createTXA1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TXA20CONTENT <em>TXA20CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TXA20CONTENT
	 * @generated
	 */
	public Adapter createTXA20CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TXA21CONTENT <em>TXA21CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TXA21CONTENT
	 * @generated
	 */
	public Adapter createTXA21CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TXA22CONTENT <em>TXA22CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TXA22CONTENT
	 * @generated
	 */
	public Adapter createTXA22CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TXA23CONTENT <em>TXA23CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TXA23CONTENT
	 * @generated
	 */
	public Adapter createTXA23CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TXA2CONTENT <em>TXA2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TXA2CONTENT
	 * @generated
	 */
	public Adapter createTXA2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TXA3CONTENT <em>TXA3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TXA3CONTENT
	 * @generated
	 */
	public Adapter createTXA3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TXA4CONTENT <em>TXA4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TXA4CONTENT
	 * @generated
	 */
	public Adapter createTXA4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TXA5CONTENT <em>TXA5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TXA5CONTENT
	 * @generated
	 */
	public Adapter createTXA5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TXA6CONTENT <em>TXA6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TXA6CONTENT
	 * @generated
	 */
	public Adapter createTXA6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TXA7CONTENT <em>TXA7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TXA7CONTENT
	 * @generated
	 */
	public Adapter createTXA7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TXA8CONTENT <em>TXA8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TXA8CONTENT
	 * @generated
	 */
	public Adapter createTXA8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TXA9CONTENT <em>TXA9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TXA9CONTENT
	 * @generated
	 */
	public Adapter createTXA9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.TXACONTENT <em>TXACONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.TXACONTENT
	 * @generated
	 */
	public Adapter createTXACONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB110CONTENT <em>UB110CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB110CONTENT
	 * @generated
	 */
	public Adapter createUB110CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB111CONTENT <em>UB111CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB111CONTENT
	 * @generated
	 */
	public Adapter createUB111CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB112CONTENT <em>UB112CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB112CONTENT
	 * @generated
	 */
	public Adapter createUB112CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB113CONTENT <em>UB113CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB113CONTENT
	 * @generated
	 */
	public Adapter createUB113CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB114CONTENT <em>UB114CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB114CONTENT
	 * @generated
	 */
	public Adapter createUB114CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB115CONTENT <em>UB115CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB115CONTENT
	 * @generated
	 */
	public Adapter createUB115CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB116CONTENT <em>UB116CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB116CONTENT
	 * @generated
	 */
	public Adapter createUB116CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB117CONTENT <em>UB117CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB117CONTENT
	 * @generated
	 */
	public Adapter createUB117CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB118CONTENT <em>UB118CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB118CONTENT
	 * @generated
	 */
	public Adapter createUB118CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB119CONTENT <em>UB119CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB119CONTENT
	 * @generated
	 */
	public Adapter createUB119CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB11CONTENT <em>UB11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB11CONTENT
	 * @generated
	 */
	public Adapter createUB11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB120CONTENT <em>UB120CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB120CONTENT
	 * @generated
	 */
	public Adapter createUB120CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB121CONTENT <em>UB121CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB121CONTENT
	 * @generated
	 */
	public Adapter createUB121CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB122CONTENT <em>UB122CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB122CONTENT
	 * @generated
	 */
	public Adapter createUB122CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB123CONTENT <em>UB123CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB123CONTENT
	 * @generated
	 */
	public Adapter createUB123CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB12CONTENT <em>UB12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB12CONTENT
	 * @generated
	 */
	public Adapter createUB12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB13CONTENT <em>UB13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB13CONTENT
	 * @generated
	 */
	public Adapter createUB13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB14CONTENT <em>UB14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB14CONTENT
	 * @generated
	 */
	public Adapter createUB14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB15CONTENT <em>UB15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB15CONTENT
	 * @generated
	 */
	public Adapter createUB15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB16CONTENT <em>UB16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB16CONTENT
	 * @generated
	 */
	public Adapter createUB16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB17CONTENT <em>UB17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB17CONTENT
	 * @generated
	 */
	public Adapter createUB17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB18CONTENT <em>UB18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB18CONTENT
	 * @generated
	 */
	public Adapter createUB18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB19CONTENT <em>UB19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB19CONTENT
	 * @generated
	 */
	public Adapter createUB19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB1CONTENT <em>UB1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB1CONTENT
	 * @generated
	 */
	public Adapter createUB1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB210CONTENT <em>UB210CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB210CONTENT
	 * @generated
	 */
	public Adapter createUB210CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB211CONTENT <em>UB211CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB211CONTENT
	 * @generated
	 */
	public Adapter createUB211CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB212CONTENT <em>UB212CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB212CONTENT
	 * @generated
	 */
	public Adapter createUB212CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB213CONTENT <em>UB213CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB213CONTENT
	 * @generated
	 */
	public Adapter createUB213CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB214CONTENT <em>UB214CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB214CONTENT
	 * @generated
	 */
	public Adapter createUB214CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB215CONTENT <em>UB215CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB215CONTENT
	 * @generated
	 */
	public Adapter createUB215CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB216CONTENT <em>UB216CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB216CONTENT
	 * @generated
	 */
	public Adapter createUB216CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB217CONTENT <em>UB217CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB217CONTENT
	 * @generated
	 */
	public Adapter createUB217CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB21CONTENT <em>UB21CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB21CONTENT
	 * @generated
	 */
	public Adapter createUB21CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB22CONTENT <em>UB22CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB22CONTENT
	 * @generated
	 */
	public Adapter createUB22CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB23CONTENT <em>UB23CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB23CONTENT
	 * @generated
	 */
	public Adapter createUB23CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB24CONTENT <em>UB24CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB24CONTENT
	 * @generated
	 */
	public Adapter createUB24CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB25CONTENT <em>UB25CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB25CONTENT
	 * @generated
	 */
	public Adapter createUB25CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB26CONTENT <em>UB26CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB26CONTENT
	 * @generated
	 */
	public Adapter createUB26CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB27CONTENT <em>UB27CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB27CONTENT
	 * @generated
	 */
	public Adapter createUB27CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB28CONTENT <em>UB28CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB28CONTENT
	 * @generated
	 */
	public Adapter createUB28CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB29CONTENT <em>UB29CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB29CONTENT
	 * @generated
	 */
	public Adapter createUB29CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UB2CONTENT <em>UB2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UB2CONTENT
	 * @generated
	 */
	public Adapter createUB2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.URD1CONTENT <em>URD1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.URD1CONTENT
	 * @generated
	 */
	public Adapter createURD1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.URD2CONTENT <em>URD2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.URD2CONTENT
	 * @generated
	 */
	public Adapter createURD2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.URD3CONTENT <em>URD3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.URD3CONTENT
	 * @generated
	 */
	public Adapter createURD3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.URD4CONTENT <em>URD4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.URD4CONTENT
	 * @generated
	 */
	public Adapter createURD4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.URD5CONTENT <em>URD5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.URD5CONTENT
	 * @generated
	 */
	public Adapter createURD5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.URD6CONTENT <em>URD6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.URD6CONTENT
	 * @generated
	 */
	public Adapter createURD6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.URD7CONTENT <em>URD7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.URD7CONTENT
	 * @generated
	 */
	public Adapter createURD7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.URDCONTENT <em>URDCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.URDCONTENT
	 * @generated
	 */
	public Adapter createURDCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.URS1CONTENT <em>URS1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.URS1CONTENT
	 * @generated
	 */
	public Adapter createURS1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.URS2CONTENT <em>URS2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.URS2CONTENT
	 * @generated
	 */
	public Adapter createURS2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.URS3CONTENT <em>URS3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.URS3CONTENT
	 * @generated
	 */
	public Adapter createURS3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.URS4CONTENT <em>URS4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.URS4CONTENT
	 * @generated
	 */
	public Adapter createURS4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.URS5CONTENT <em>URS5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.URS5CONTENT
	 * @generated
	 */
	public Adapter createURS5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.URS6CONTENT <em>URS6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.URS6CONTENT
	 * @generated
	 */
	public Adapter createURS6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.URS7CONTENT <em>URS7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.URS7CONTENT
	 * @generated
	 */
	public Adapter createURS7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.URS8CONTENT <em>URS8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.URS8CONTENT
	 * @generated
	 */
	public Adapter createURS8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.URS9CONTENT <em>URS9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.URS9CONTENT
	 * @generated
	 */
	public Adapter createURS9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.URSCONTENT <em>URSCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.URSCONTENT
	 * @generated
	 */
	public Adapter createURSCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UVC <em>UVC</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UVC
	 * @generated
	 */
	public Adapter createUVCAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UVC1CONTENT <em>UVC1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UVC1CONTENT
	 * @generated
	 */
	public Adapter createUVC1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.UVC2CONTENT <em>UVC2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.UVC2CONTENT
	 * @generated
	 */
	public Adapter createUVC2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.VAR1CONTENT <em>VAR1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.VAR1CONTENT
	 * @generated
	 */
	public Adapter createVAR1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.VAR2CONTENT <em>VAR2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.VAR2CONTENT
	 * @generated
	 */
	public Adapter createVAR2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.VAR3CONTENT <em>VAR3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.VAR3CONTENT
	 * @generated
	 */
	public Adapter createVAR3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.VAR4CONTENT <em>VAR4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.VAR4CONTENT
	 * @generated
	 */
	public Adapter createVAR4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.VAR5CONTENT <em>VAR5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.VAR5CONTENT
	 * @generated
	 */
	public Adapter createVAR5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.VAR6CONTENT <em>VAR6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.VAR6CONTENT
	 * @generated
	 */
	public Adapter createVAR6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.VARCONTENT <em>VARCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.VARCONTENT
	 * @generated
	 */
	public Adapter createVARCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.Varies <em>Varies</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.Varies
	 * @generated
	 */
	public Adapter createVariesAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.VH <em>VH</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.VH
	 * @generated
	 */
	public Adapter createVHAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.VH1CONTENT <em>VH1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.VH1CONTENT
	 * @generated
	 */
	public Adapter createVH1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.VH2CONTENT <em>VH2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.VH2CONTENT
	 * @generated
	 */
	public Adapter createVH2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.VH3CONTENT <em>VH3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.VH3CONTENT
	 * @generated
	 */
	public Adapter createVH3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.VH4CONTENT <em>VH4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.VH4CONTENT
	 * @generated
	 */
	public Adapter createVH4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.VID <em>VID</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.VID
	 * @generated
	 */
	public Adapter createVIDAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.VID1CONTENT <em>VID1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.VID1CONTENT
	 * @generated
	 */
	public Adapter createVID1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.VID2CONTENT <em>VID2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.VID2CONTENT
	 * @generated
	 */
	public Adapter createVID2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.VID3CONTENT <em>VID3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.VID3CONTENT
	 * @generated
	 */
	public Adapter createVID3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.VR <em>VR</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.VR
	 * @generated
	 */
	public Adapter createVRAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.VR1CONTENT <em>VR1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.VR1CONTENT
	 * @generated
	 */
	public Adapter createVR1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.VR2CONTENT <em>VR2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.VR2CONTENT
	 * @generated
	 */
	public Adapter createVR2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.VTQ1CONTENT <em>VTQ1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.VTQ1CONTENT
	 * @generated
	 */
	public Adapter createVTQ1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.VTQ2CONTENT <em>VTQ2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.VTQ2CONTENT
	 * @generated
	 */
	public Adapter createVTQ2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.VTQ3CONTENT <em>VTQ3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.VTQ3CONTENT
	 * @generated
	 */
	public Adapter createVTQ3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.VTQ4CONTENT <em>VTQ4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.VTQ4CONTENT
	 * @generated
	 */
	public Adapter createVTQ4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.VTQ5CONTENT <em>VTQ5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.VTQ5CONTENT
	 * @generated
	 */
	public Adapter createVTQ5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.VTQCONTENT <em>VTQCONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.VTQCONTENT
	 * @generated
	 */
	public Adapter createVTQCONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.WVI <em>WVI</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.WVI
	 * @generated
	 */
	public Adapter createWVIAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.WVI1CONTENT <em>WVI1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.WVI1CONTENT
	 * @generated
	 */
	public Adapter createWVI1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.WVI2CONTENT <em>WVI2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.WVI2CONTENT
	 * @generated
	 */
	public Adapter createWVI2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.WVS <em>WVS</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.WVS
	 * @generated
	 */
	public Adapter createWVSAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.WVS1CONTENT <em>WVS1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.WVS1CONTENT
	 * @generated
	 */
	public Adapter createWVS1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.WVS2CONTENT <em>WVS2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.WVS2CONTENT
	 * @generated
	 */
	public Adapter createWVS2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XAD <em>XAD</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XAD
	 * @generated
	 */
	public Adapter createXADAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XAD10CONTENT <em>XAD10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XAD10CONTENT
	 * @generated
	 */
	public Adapter createXAD10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XAD11CONTENT <em>XAD11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XAD11CONTENT
	 * @generated
	 */
	public Adapter createXAD11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XAD12CONTENT <em>XAD12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XAD12CONTENT
	 * @generated
	 */
	public Adapter createXAD12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XAD13CONTENT <em>XAD13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XAD13CONTENT
	 * @generated
	 */
	public Adapter createXAD13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XAD14CONTENT <em>XAD14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XAD14CONTENT
	 * @generated
	 */
	public Adapter createXAD14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XAD1CONTENT <em>XAD1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XAD1CONTENT
	 * @generated
	 */
	public Adapter createXAD1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XAD2CONTENT <em>XAD2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XAD2CONTENT
	 * @generated
	 */
	public Adapter createXAD2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XAD3CONTENT <em>XAD3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XAD3CONTENT
	 * @generated
	 */
	public Adapter createXAD3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XAD4CONTENT <em>XAD4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XAD4CONTENT
	 * @generated
	 */
	public Adapter createXAD4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XAD5CONTENT <em>XAD5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XAD5CONTENT
	 * @generated
	 */
	public Adapter createXAD5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XAD6CONTENT <em>XAD6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XAD6CONTENT
	 * @generated
	 */
	public Adapter createXAD6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XAD7CONTENT <em>XAD7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XAD7CONTENT
	 * @generated
	 */
	public Adapter createXAD7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XAD8CONTENT <em>XAD8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XAD8CONTENT
	 * @generated
	 */
	public Adapter createXAD8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XAD9CONTENT <em>XAD9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XAD9CONTENT
	 * @generated
	 */
	public Adapter createXAD9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XCN <em>XCN</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XCN
	 * @generated
	 */
	public Adapter createXCNAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XCN10CONTENT <em>XCN10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XCN10CONTENT
	 * @generated
	 */
	public Adapter createXCN10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XCN11CONTENT <em>XCN11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XCN11CONTENT
	 * @generated
	 */
	public Adapter createXCN11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XCN12CONTENT <em>XCN12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XCN12CONTENT
	 * @generated
	 */
	public Adapter createXCN12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XCN13CONTENT <em>XCN13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XCN13CONTENT
	 * @generated
	 */
	public Adapter createXCN13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XCN14CONTENT <em>XCN14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XCN14CONTENT
	 * @generated
	 */
	public Adapter createXCN14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XCN15CONTENT <em>XCN15CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XCN15CONTENT
	 * @generated
	 */
	public Adapter createXCN15CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XCN16CONTENT <em>XCN16CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XCN16CONTENT
	 * @generated
	 */
	public Adapter createXCN16CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XCN17CONTENT <em>XCN17CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XCN17CONTENT
	 * @generated
	 */
	public Adapter createXCN17CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XCN18CONTENT <em>XCN18CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XCN18CONTENT
	 * @generated
	 */
	public Adapter createXCN18CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XCN19CONTENT <em>XCN19CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XCN19CONTENT
	 * @generated
	 */
	public Adapter createXCN19CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XCN1CONTENT <em>XCN1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XCN1CONTENT
	 * @generated
	 */
	public Adapter createXCN1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XCN20CONTENT <em>XCN20CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XCN20CONTENT
	 * @generated
	 */
	public Adapter createXCN20CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XCN21CONTENT <em>XCN21CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XCN21CONTENT
	 * @generated
	 */
	public Adapter createXCN21CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XCN22CONTENT <em>XCN22CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XCN22CONTENT
	 * @generated
	 */
	public Adapter createXCN22CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XCN23CONTENT <em>XCN23CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XCN23CONTENT
	 * @generated
	 */
	public Adapter createXCN23CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XCN2CONTENT <em>XCN2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XCN2CONTENT
	 * @generated
	 */
	public Adapter createXCN2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XCN3CONTENT <em>XCN3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XCN3CONTENT
	 * @generated
	 */
	public Adapter createXCN3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XCN4CONTENT <em>XCN4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XCN4CONTENT
	 * @generated
	 */
	public Adapter createXCN4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XCN5CONTENT <em>XCN5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XCN5CONTENT
	 * @generated
	 */
	public Adapter createXCN5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XCN6CONTENT <em>XCN6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XCN6CONTENT
	 * @generated
	 */
	public Adapter createXCN6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XCN7CONTENT <em>XCN7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XCN7CONTENT
	 * @generated
	 */
	public Adapter createXCN7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XCN8CONTENT <em>XCN8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XCN8CONTENT
	 * @generated
	 */
	public Adapter createXCN8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XCN9CONTENT <em>XCN9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XCN9CONTENT
	 * @generated
	 */
	public Adapter createXCN9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XON <em>XON</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XON
	 * @generated
	 */
	public Adapter createXONAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XON10CONTENT <em>XON10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XON10CONTENT
	 * @generated
	 */
	public Adapter createXON10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XON1CONTENT <em>XON1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XON1CONTENT
	 * @generated
	 */
	public Adapter createXON1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XON2CONTENT <em>XON2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XON2CONTENT
	 * @generated
	 */
	public Adapter createXON2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XON3CONTENT <em>XON3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XON3CONTENT
	 * @generated
	 */
	public Adapter createXON3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XON4CONTENT <em>XON4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XON4CONTENT
	 * @generated
	 */
	public Adapter createXON4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XON5CONTENT <em>XON5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XON5CONTENT
	 * @generated
	 */
	public Adapter createXON5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XON6CONTENT <em>XON6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XON6CONTENT
	 * @generated
	 */
	public Adapter createXON6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XON7CONTENT <em>XON7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XON7CONTENT
	 * @generated
	 */
	public Adapter createXON7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XON8CONTENT <em>XON8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XON8CONTENT
	 * @generated
	 */
	public Adapter createXON8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XON9CONTENT <em>XON9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XON9CONTENT
	 * @generated
	 */
	public Adapter createXON9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XPN <em>XPN</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XPN
	 * @generated
	 */
	public Adapter createXPNAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XPN10CONTENT <em>XPN10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XPN10CONTENT
	 * @generated
	 */
	public Adapter createXPN10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XPN11CONTENT <em>XPN11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XPN11CONTENT
	 * @generated
	 */
	public Adapter createXPN11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XPN12CONTENT <em>XPN12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XPN12CONTENT
	 * @generated
	 */
	public Adapter createXPN12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XPN13CONTENT <em>XPN13CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XPN13CONTENT
	 * @generated
	 */
	public Adapter createXPN13CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XPN14CONTENT <em>XPN14CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XPN14CONTENT
	 * @generated
	 */
	public Adapter createXPN14CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XPN1CONTENT <em>XPN1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XPN1CONTENT
	 * @generated
	 */
	public Adapter createXPN1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XPN2CONTENT <em>XPN2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XPN2CONTENT
	 * @generated
	 */
	public Adapter createXPN2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XPN3CONTENT <em>XPN3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XPN3CONTENT
	 * @generated
	 */
	public Adapter createXPN3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XPN4CONTENT <em>XPN4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XPN4CONTENT
	 * @generated
	 */
	public Adapter createXPN4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XPN5CONTENT <em>XPN5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XPN5CONTENT
	 * @generated
	 */
	public Adapter createXPN5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XPN6CONTENT <em>XPN6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XPN6CONTENT
	 * @generated
	 */
	public Adapter createXPN6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XPN7CONTENT <em>XPN7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XPN7CONTENT
	 * @generated
	 */
	public Adapter createXPN7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XPN8CONTENT <em>XPN8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XPN8CONTENT
	 * @generated
	 */
	public Adapter createXPN8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XPN9CONTENT <em>XPN9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XPN9CONTENT
	 * @generated
	 */
	public Adapter createXPN9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XTN <em>XTN</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XTN
	 * @generated
	 */
	public Adapter createXTNAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XTN10CONTENT <em>XTN10CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XTN10CONTENT
	 * @generated
	 */
	public Adapter createXTN10CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XTN11CONTENT <em>XTN11CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XTN11CONTENT
	 * @generated
	 */
	public Adapter createXTN11CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XTN12CONTENT <em>XTN12CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XTN12CONTENT
	 * @generated
	 */
	public Adapter createXTN12CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XTN1CONTENT <em>XTN1CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XTN1CONTENT
	 * @generated
	 */
	public Adapter createXTN1CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XTN2CONTENT <em>XTN2CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XTN2CONTENT
	 * @generated
	 */
	public Adapter createXTN2CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XTN3CONTENT <em>XTN3CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XTN3CONTENT
	 * @generated
	 */
	public Adapter createXTN3CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XTN4CONTENT <em>XTN4CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XTN4CONTENT
	 * @generated
	 */
	public Adapter createXTN4CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XTN5CONTENT <em>XTN5CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XTN5CONTENT
	 * @generated
	 */
	public Adapter createXTN5CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XTN6CONTENT <em>XTN6CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XTN6CONTENT
	 * @generated
	 */
	public Adapter createXTN6CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XTN7CONTENT <em>XTN7CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XTN7CONTENT
	 * @generated
	 */
	public Adapter createXTN7CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XTN8CONTENT <em>XTN8CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XTN8CONTENT
	 * @generated
	 */
	public Adapter createXTN8CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.hl7.v2xml.XTN9CONTENT <em>XTN9CONTENT</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.hl7.v2xml.XTN9CONTENT
	 * @generated
	 */
	public Adapter createXTN9CONTENTAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for an object of class '{@link org.eclipse.emf.ecore.xml.type.AnyType <em>Any Type</em>}'.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null so that we can easily ignore cases;
	 * it's useful to ignore a case when inheritance will catch all the cases anyway.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @see org.eclipse.emf.ecore.xml.type.AnyType
	 * @generated
	 */
	public Adapter createAnyTypeAdapter() {
		return null;
	}

	/**
	 * Creates a new adapter for the default case.
	 * <!-- begin-user-doc -->
	 * This default implementation returns null.
	 * <!-- end-user-doc -->
	 * @return the new adapter.
	 * @generated
	 */
	public Adapter createEObjectAdapter() {
		return null;
	}

} //V2xmlAdapterFactory
